"use strict";
(() => {
  // src/view/object/itemNames.ts
  var itemNames = [
    "acacia_boat",
    "acacia_button",
    "acacia_chest_boat",
    "acacia_door",
    "acacia_fence",
    "acacia_fence_gate",
    "acacia_hanging_sign",
    "acacia_leaves",
    "acacia_log",
    "acacia_planks",
    "acacia_pressure_plate",
    "acacia_sapling",
    "acacia_sign",
    "acacia_slab",
    "acacia_stairs",
    "acacia_trapdoor",
    "acacia_wood",
    "activator_rail",
    "air",
    "allay_spawn_egg",
    "allium",
    "amethyst_block",
    "amethyst_cluster",
    "amethyst_shard",
    "ancient_debris",
    "andesite",
    "andesite_slab",
    "andesite_stairs",
    "andesite_wall",
    "angler_pottery_sherd",
    "anvil",
    "apple",
    "archer_pottery_sherd",
    "armadillo_scute",
    "armadillo_spawn_egg",
    "armor_stand",
    "arms_up_pottery_sherd",
    "arrow",
    "axolotl_bucket",
    "axolotl_spawn_egg",
    "azalea",
    "azalea_leaves",
    "azure_bluet",
    "baked_potato",
    "bamboo",
    "bamboo_block",
    "bamboo_button",
    "bamboo_chest_raft",
    "bamboo_door",
    "bamboo_fence",
    "bamboo_fence_gate",
    "bamboo_hanging_sign",
    "bamboo_mosaic",
    "bamboo_mosaic_slab",
    "bamboo_mosaic_stairs",
    "bamboo_planks",
    "bamboo_pressure_plate",
    "bamboo_raft",
    "bamboo_sign",
    "bamboo_slab",
    "bamboo_stairs",
    "bamboo_trapdoor",
    "barrel",
    "barrier",
    "basalt",
    "bat_spawn_egg",
    "beacon",
    "bedrock",
    "beef",
    "beehive",
    "beetroot",
    "beetroot_seeds",
    "beetroot_soup",
    "bee_nest",
    "bee_spawn_egg",
    "bell",
    "big_dripleaf",
    "birch_boat",
    "birch_button",
    "birch_chest_boat",
    "birch_door",
    "birch_fence",
    "birch_fence_gate",
    "birch_hanging_sign",
    "birch_leaves",
    "birch_log",
    "birch_planks",
    "birch_pressure_plate",
    "birch_sapling",
    "birch_sign",
    "birch_slab",
    "birch_stairs",
    "birch_trapdoor",
    "birch_wood",
    "blackstone",
    "blackstone_slab",
    "blackstone_stairs",
    "blackstone_wall",
    "black_banner",
    "black_bed",
    "black_bundle",
    "black_candle",
    "black_carpet",
    "black_concrete",
    "black_concrete_powder",
    "black_dye",
    "black_glazed_terracotta",
    "black_shulker_box",
    "black_stained_glass",
    "black_stained_glass_pane",
    "black_terracotta",
    "black_wool",
    "blade_pottery_sherd",
    "blast_furnace",
    "blaze_powder",
    "blaze_rod",
    "blaze_spawn_egg",
    "blue_banner",
    "blue_bed",
    "blue_bundle",
    "blue_candle",
    "blue_carpet",
    "blue_concrete",
    "blue_concrete_powder",
    "blue_dye",
    "blue_glazed_terracotta",
    "blue_ice",
    "blue_orchid",
    "blue_shulker_box",
    "blue_stained_glass",
    "blue_stained_glass_pane",
    "blue_terracotta",
    "blue_wool",
    "bogged_spawn_egg",
    "bolt_armor_trim_smithing_template",
    "bone",
    "bone_block",
    "bone_meal",
    "book",
    "bookshelf",
    "bordure_indented_banner_pattern",
    "bow",
    "bowl",
    "brain_coral",
    "brain_coral_block",
    "brain_coral_fan",
    "bread",
    "breeze_rod",
    "breeze_spawn_egg",
    "brewer_pottery_sherd",
    "brewing_stand",
    "brick",
    "bricks",
    "brick_slab",
    "brick_stairs",
    "brick_wall",
    "brown_banner",
    "brown_bed",
    "brown_bundle",
    "brown_candle",
    "brown_carpet",
    "brown_concrete",
    "brown_concrete_powder",
    "brown_dye",
    "brown_glazed_terracotta",
    "brown_mushroom",
    "brown_mushroom_block",
    "brown_shulker_box",
    "brown_stained_glass",
    "brown_stained_glass_pane",
    "brown_terracotta",
    "brown_wool",
    "brush",
    "bubble_coral",
    "bubble_coral_block",
    "bubble_coral_fan",
    "bucket",
    "budding_amethyst",
    "bundle",
    "burn_pottery_sherd",
    "cactus",
    "cake",
    "calcite",
    "calibrated_sculk_sensor",
    "camel_spawn_egg",
    "campfire",
    "candle",
    "carrot",
    "carrot_on_a_stick",
    "cartography_table",
    "carved_pumpkin",
    "cat_spawn_egg",
    "cauldron",
    "cave_spider_spawn_egg",
    "chain",
    "chainmail_boots",
    "chainmail_chestplate",
    "chainmail_helmet",
    "chainmail_leggings",
    "chain_command_block",
    "charcoal",
    "cherry_boat",
    "cherry_button",
    "cherry_chest_boat",
    "cherry_door",
    "cherry_fence",
    "cherry_fence_gate",
    "cherry_hanging_sign",
    "cherry_leaves",
    "cherry_log",
    "cherry_planks",
    "cherry_pressure_plate",
    "cherry_sapling",
    "cherry_sign",
    "cherry_slab",
    "cherry_stairs",
    "cherry_trapdoor",
    "cherry_wood",
    "chest",
    "chest_minecart",
    "chicken",
    "chicken_spawn_egg",
    "chipped_anvil",
    "chiseled_bookshelf",
    "chiseled_copper",
    "chiseled_deepslate",
    "chiseled_nether_bricks",
    "chiseled_polished_blackstone",
    "chiseled_quartz_block",
    "chiseled_red_sandstone",
    "chiseled_resin_bricks",
    "chiseled_sandstone",
    "chiseled_stone_bricks",
    "chiseled_tuff",
    "chiseled_tuff_bricks",
    "chorus_flower",
    "chorus_fruit",
    "chorus_plant",
    "clay",
    "clay_ball",
    "clock",
    "closed_eyeblossom",
    "coal",
    "coal_block",
    "coal_ore",
    "coarse_dirt",
    "coast_armor_trim_smithing_template",
    "cobbled_deepslate",
    "cobbled_deepslate_slab",
    "cobbled_deepslate_stairs",
    "cobbled_deepslate_wall",
    "cobblestone",
    "cobblestone_slab",
    "cobblestone_stairs",
    "cobblestone_wall",
    "cobweb",
    "cocoa_beans",
    "cod",
    "cod_bucket",
    "cod_spawn_egg",
    "command_block",
    "command_block_minecart",
    "comparator",
    "compass",
    "composter",
    "conduit",
    "cooked_beef",
    "cooked_chicken",
    "cooked_cod",
    "cooked_mutton",
    "cooked_porkchop",
    "cooked_rabbit",
    "cooked_salmon",
    "cookie",
    "copper_block",
    "copper_bulb",
    "copper_door",
    "copper_grate",
    "copper_ingot",
    "copper_ore",
    "copper_trapdoor",
    "cornflower",
    "cow_spawn_egg",
    "cracked_deepslate_bricks",
    "cracked_deepslate_tiles",
    "cracked_nether_bricks",
    "cracked_polished_blackstone_bricks",
    "cracked_stone_bricks",
    "crafter",
    "crafting_table",
    "creaking_heart",
    "creaking_spawn_egg",
    "creeper_banner_pattern",
    "creeper_head",
    "creeper_spawn_egg",
    "crimson_button",
    "crimson_door",
    "crimson_fence",
    "crimson_fence_gate",
    "crimson_fungus",
    "crimson_hanging_sign",
    "crimson_hyphae",
    "crimson_nylium",
    "crimson_planks",
    "crimson_pressure_plate",
    "crimson_roots",
    "crimson_sign",
    "crimson_slab",
    "crimson_stairs",
    "crimson_stem",
    "crimson_trapdoor",
    "crossbow",
    "crying_obsidian",
    "cut_copper",
    "cut_copper_slab",
    "cut_copper_stairs",
    "cut_red_sandstone",
    "cut_red_sandstone_slab",
    "cut_sandstone",
    "cut_sandstone_slab",
    "cyan_banner",
    "cyan_bed",
    "cyan_bundle",
    "cyan_candle",
    "cyan_carpet",
    "cyan_concrete",
    "cyan_concrete_powder",
    "cyan_dye",
    "cyan_glazed_terracotta",
    "cyan_shulker_box",
    "cyan_stained_glass",
    "cyan_stained_glass_pane",
    "cyan_terracotta",
    "cyan_wool",
    "damaged_anvil",
    "dandelion",
    "danger_pottery_sherd",
    "dark_oak_boat",
    "dark_oak_button",
    "dark_oak_chest_boat",
    "dark_oak_door",
    "dark_oak_fence",
    "dark_oak_fence_gate",
    "dark_oak_hanging_sign",
    "dark_oak_leaves",
    "dark_oak_log",
    "dark_oak_planks",
    "dark_oak_pressure_plate",
    "dark_oak_sapling",
    "dark_oak_sign",
    "dark_oak_slab",
    "dark_oak_stairs",
    "dark_oak_trapdoor",
    "dark_oak_wood",
    "dark_prismarine",
    "dark_prismarine_slab",
    "dark_prismarine_stairs",
    "daylight_detector",
    "dead_brain_coral",
    "dead_brain_coral_block",
    "dead_brain_coral_fan",
    "dead_bubble_coral",
    "dead_bubble_coral_block",
    "dead_bubble_coral_fan",
    "dead_bush",
    "dead_fire_coral",
    "dead_fire_coral_block",
    "dead_fire_coral_fan",
    "dead_horn_coral",
    "dead_horn_coral_block",
    "dead_horn_coral_fan",
    "dead_tube_coral",
    "dead_tube_coral_block",
    "dead_tube_coral_fan",
    "debug_stick",
    "decorated_pot",
    "deepslate",
    "deepslate_bricks",
    "deepslate_brick_slab",
    "deepslate_brick_stairs",
    "deepslate_brick_wall",
    "deepslate_coal_ore",
    "deepslate_copper_ore",
    "deepslate_diamond_ore",
    "deepslate_emerald_ore",
    "deepslate_gold_ore",
    "deepslate_iron_ore",
    "deepslate_lapis_ore",
    "deepslate_redstone_ore",
    "deepslate_tiles",
    "deepslate_tile_slab",
    "deepslate_tile_stairs",
    "deepslate_tile_wall",
    "detector_rail",
    "diamond",
    "diamond_axe",
    "diamond_block",
    "diamond_boots",
    "diamond_chestplate",
    "diamond_helmet",
    "diamond_hoe",
    "diamond_horse_armor",
    "diamond_leggings",
    "diamond_ore",
    "diamond_pickaxe",
    "diamond_shovel",
    "diamond_sword",
    "diorite",
    "diorite_slab",
    "diorite_stairs",
    "diorite_wall",
    "dirt",
    "dirt_path",
    "disc_fragment_5",
    "dispenser",
    "dolphin_spawn_egg",
    "donkey_spawn_egg",
    "dragon_breath",
    "dragon_egg",
    "dragon_head",
    "dried_kelp",
    "dried_kelp_block",
    "dripstone_block",
    "dropper",
    "drowned_spawn_egg",
    "dune_armor_trim_smithing_template",
    "echo_shard",
    "egg",
    "elder_guardian_spawn_egg",
    "elytra",
    "emerald",
    "emerald_block",
    "emerald_ore",
    "enchanted_book",
    "enchanted_golden_apple",
    "enchanting_table",
    "enderman_spawn_egg",
    "endermite_spawn_egg",
    "ender_chest",
    "ender_dragon_spawn_egg",
    "ender_eye",
    "ender_pearl",
    "end_crystal",
    "end_portal_frame",
    "end_rod",
    "end_stone",
    "end_stone_bricks",
    "end_stone_brick_slab",
    "end_stone_brick_stairs",
    "end_stone_brick_wall",
    "evoker_spawn_egg",
    "experience_bottle",
    "explorer_pottery_sherd",
    "exposed_chiseled_copper",
    "exposed_copper",
    "exposed_copper_bulb",
    "exposed_copper_door",
    "exposed_copper_grate",
    "exposed_copper_trapdoor",
    "exposed_cut_copper",
    "exposed_cut_copper_slab",
    "exposed_cut_copper_stairs",
    "eye_armor_trim_smithing_template",
    "farmland",
    "feather",
    "fermented_spider_eye",
    "fern",
    "field_masoned_banner_pattern",
    "filled_map",
    "firework_rocket",
    "firework_star",
    "fire_charge",
    "fire_coral",
    "fire_coral_block",
    "fire_coral_fan",
    "fishing_rod",
    "fletching_table",
    "flint",
    "flint_and_steel",
    "flowering_azalea",
    "flowering_azalea_leaves",
    "flower_banner_pattern",
    "flower_pot",
    "flow_armor_trim_smithing_template",
    "flow_banner_pattern",
    "flow_pottery_sherd",
    "fox_spawn_egg",
    "friend_pottery_sherd",
    "frogspawn",
    "frog_spawn_egg",
    "furnace",
    "furnace_minecart",
    "ghast_spawn_egg",
    "ghast_tear",
    "gilded_blackstone",
    "glass",
    "glass_bottle",
    "glass_pane",
    "glistering_melon_slice",
    "globe_banner_pattern",
    "glowstone",
    "glowstone_dust",
    "glow_berries",
    "glow_ink_sac",
    "glow_item_frame",
    "glow_lichen",
    "glow_squid_spawn_egg",
    "goat_horn",
    "goat_spawn_egg",
    "golden_apple",
    "golden_axe",
    "golden_boots",
    "golden_carrot",
    "golden_chestplate",
    "golden_helmet",
    "golden_hoe",
    "golden_horse_armor",
    "golden_leggings",
    "golden_pickaxe",
    "golden_shovel",
    "golden_sword",
    "gold_block",
    "gold_ingot",
    "gold_nugget",
    "gold_ore",
    "granite",
    "granite_slab",
    "granite_stairs",
    "granite_wall",
    "grass_block",
    "gravel",
    "gray_banner",
    "gray_bed",
    "gray_bundle",
    "gray_candle",
    "gray_carpet",
    "gray_concrete",
    "gray_concrete_powder",
    "gray_dye",
    "gray_glazed_terracotta",
    "gray_shulker_box",
    "gray_stained_glass",
    "gray_stained_glass_pane",
    "gray_terracotta",
    "gray_wool",
    "green_banner",
    "green_bed",
    "green_bundle",
    "green_candle",
    "green_carpet",
    "green_concrete",
    "green_concrete_powder",
    "green_dye",
    "green_glazed_terracotta",
    "green_shulker_box",
    "green_stained_glass",
    "green_stained_glass_pane",
    "green_terracotta",
    "green_wool",
    "grindstone",
    "guardian_spawn_egg",
    "gunpowder",
    "guster_banner_pattern",
    "guster_pottery_sherd",
    "hanging_roots",
    "hay_block",
    "heartbreak_pottery_sherd",
    "heart_of_the_sea",
    "heart_pottery_sherd",
    "heavy_core",
    "heavy_weighted_pressure_plate",
    "hoglin_spawn_egg",
    "honeycomb",
    "honeycomb_block",
    "honey_block",
    "honey_bottle",
    "hopper",
    "hopper_minecart",
    "horn_coral",
    "horn_coral_block",
    "horn_coral_fan",
    "horse_spawn_egg",
    "host_armor_trim_smithing_template",
    "howl_pottery_sherd",
    "husk_spawn_egg",
    "ice",
    "infested_chiseled_stone_bricks",
    "infested_cobblestone",
    "infested_cracked_stone_bricks",
    "infested_deepslate",
    "infested_mossy_stone_bricks",
    "infested_stone",
    "infested_stone_bricks",
    "ink_sac",
    "iron_axe",
    "iron_bars",
    "iron_block",
    "iron_boots",
    "iron_chestplate",
    "iron_door",
    "iron_golem_spawn_egg",
    "iron_helmet",
    "iron_hoe",
    "iron_horse_armor",
    "iron_ingot",
    "iron_leggings",
    "iron_nugget",
    "iron_ore",
    "iron_pickaxe",
    "iron_shovel",
    "iron_sword",
    "iron_trapdoor",
    "item_frame",
    "jack_o_lantern",
    "jigsaw",
    "jukebox",
    "jungle_boat",
    "jungle_button",
    "jungle_chest_boat",
    "jungle_door",
    "jungle_fence",
    "jungle_fence_gate",
    "jungle_hanging_sign",
    "jungle_leaves",
    "jungle_log",
    "jungle_planks",
    "jungle_pressure_plate",
    "jungle_sapling",
    "jungle_sign",
    "jungle_slab",
    "jungle_stairs",
    "jungle_trapdoor",
    "jungle_wood",
    "kelp",
    "knowledge_book",
    "ladder",
    "lantern",
    "lapis_block",
    "lapis_lazuli",
    "lapis_ore",
    "large_amethyst_bud",
    "large_fern",
    "lava_bucket",
    "lead",
    "leather",
    "leather_boots",
    "leather_chestplate",
    "leather_helmet",
    "leather_horse_armor",
    "leather_leggings",
    "lectern",
    "lever",
    "light",
    "lightning_rod",
    "light_blue_banner",
    "light_blue_bed",
    "light_blue_bundle",
    "light_blue_candle",
    "light_blue_carpet",
    "light_blue_concrete",
    "light_blue_concrete_powder",
    "light_blue_dye",
    "light_blue_glazed_terracotta",
    "light_blue_shulker_box",
    "light_blue_stained_glass",
    "light_blue_stained_glass_pane",
    "light_blue_terracotta",
    "light_blue_wool",
    "light_gray_banner",
    "light_gray_bed",
    "light_gray_bundle",
    "light_gray_candle",
    "light_gray_carpet",
    "light_gray_concrete",
    "light_gray_concrete_powder",
    "light_gray_dye",
    "light_gray_glazed_terracotta",
    "light_gray_shulker_box",
    "light_gray_stained_glass",
    "light_gray_stained_glass_pane",
    "light_gray_terracotta",
    "light_gray_wool",
    "light_weighted_pressure_plate",
    "lilac",
    "lily_of_the_valley",
    "lily_pad",
    "lime_banner",
    "lime_bed",
    "lime_bundle",
    "lime_candle",
    "lime_carpet",
    "lime_concrete",
    "lime_concrete_powder",
    "lime_dye",
    "lime_glazed_terracotta",
    "lime_shulker_box",
    "lime_stained_glass",
    "lime_stained_glass_pane",
    "lime_terracotta",
    "lime_wool",
    "lingering_potion",
    "llama_spawn_egg",
    "lodestone",
    "loom",
    "mace",
    "magenta_banner",
    "magenta_bed",
    "magenta_bundle",
    "magenta_candle",
    "magenta_carpet",
    "magenta_concrete",
    "magenta_concrete_powder",
    "magenta_dye",
    "magenta_glazed_terracotta",
    "magenta_shulker_box",
    "magenta_stained_glass",
    "magenta_stained_glass_pane",
    "magenta_terracotta",
    "magenta_wool",
    "magma_block",
    "magma_cream",
    "magma_cube_spawn_egg",
    "mangrove_boat",
    "mangrove_button",
    "mangrove_chest_boat",
    "mangrove_door",
    "mangrove_fence",
    "mangrove_fence_gate",
    "mangrove_hanging_sign",
    "mangrove_leaves",
    "mangrove_log",
    "mangrove_planks",
    "mangrove_pressure_plate",
    "mangrove_propagule",
    "mangrove_roots",
    "mangrove_sign",
    "mangrove_slab",
    "mangrove_stairs",
    "mangrove_trapdoor",
    "mangrove_wood",
    "map",
    "medium_amethyst_bud",
    "melon",
    "melon_seeds",
    "melon_slice",
    "milk_bucket",
    "minecart",
    "miner_pottery_sherd",
    "mojang_banner_pattern",
    "mooshroom_spawn_egg",
    "mossy_cobblestone",
    "mossy_cobblestone_slab",
    "mossy_cobblestone_stairs",
    "mossy_cobblestone_wall",
    "mossy_stone_bricks",
    "mossy_stone_brick_slab",
    "mossy_stone_brick_stairs",
    "mossy_stone_brick_wall",
    "moss_block",
    "moss_carpet",
    "mourner_pottery_sherd",
    "mud",
    "muddy_mangrove_roots",
    "mud_bricks",
    "mud_brick_slab",
    "mud_brick_stairs",
    "mud_brick_wall",
    "mule_spawn_egg",
    "mushroom_stem",
    "mushroom_stew",
    "music_disc_11",
    "music_disc_13",
    "music_disc_5",
    "music_disc_blocks",
    "music_disc_cat",
    "music_disc_chirp",
    "music_disc_creator",
    "music_disc_creator_music_box",
    "music_disc_far",
    "music_disc_mall",
    "music_disc_mellohi",
    "music_disc_otherside",
    "music_disc_pigstep",
    "music_disc_precipice",
    "music_disc_relic",
    "music_disc_stal",
    "music_disc_strad",
    "music_disc_wait",
    "music_disc_ward",
    "mutton",
    "mycelium",
    "name_tag",
    "nautilus_shell",
    "netherite_axe",
    "netherite_block",
    "netherite_boots",
    "netherite_chestplate",
    "netherite_helmet",
    "netherite_hoe",
    "netherite_ingot",
    "netherite_leggings",
    "netherite_pickaxe",
    "netherite_scrap",
    "netherite_shovel",
    "netherite_sword",
    "netherite_upgrade_smithing_template",
    "netherrack",
    "nether_brick",
    "nether_bricks",
    "nether_brick_fence",
    "nether_brick_slab",
    "nether_brick_stairs",
    "nether_brick_wall",
    "nether_gold_ore",
    "nether_quartz_ore",
    "nether_sprouts",
    "nether_star",
    "nether_wart",
    "nether_wart_block",
    "note_block",
    "oak_boat",
    "oak_button",
    "oak_chest_boat",
    "oak_door",
    "oak_fence",
    "oak_fence_gate",
    "oak_hanging_sign",
    "oak_leaves",
    "oak_log",
    "oak_planks",
    "oak_pressure_plate",
    "oak_sapling",
    "oak_sign",
    "oak_slab",
    "oak_stairs",
    "oak_trapdoor",
    "oak_wood",
    "observer",
    "obsidian",
    "ocelot_spawn_egg",
    "ochre_froglight",
    "ominous_bottle",
    "ominous_trial_key",
    "open_eyeblossom",
    "orange_banner",
    "orange_bed",
    "orange_bundle",
    "orange_candle",
    "orange_carpet",
    "orange_concrete",
    "orange_concrete_powder",
    "orange_dye",
    "orange_glazed_terracotta",
    "orange_shulker_box",
    "orange_stained_glass",
    "orange_stained_glass_pane",
    "orange_terracotta",
    "orange_tulip",
    "orange_wool",
    "oxeye_daisy",
    "oxidized_chiseled_copper",
    "oxidized_copper",
    "oxidized_copper_bulb",
    "oxidized_copper_door",
    "oxidized_copper_grate",
    "oxidized_copper_trapdoor",
    "oxidized_cut_copper",
    "oxidized_cut_copper_slab",
    "oxidized_cut_copper_stairs",
    "packed_ice",
    "packed_mud",
    "painting",
    "pale_hanging_moss",
    "pale_moss_block",
    "pale_moss_carpet",
    "pale_oak_boat",
    "pale_oak_button",
    "pale_oak_chest_boat",
    "pale_oak_door",
    "pale_oak_fence",
    "pale_oak_fence_gate",
    "pale_oak_hanging_sign",
    "pale_oak_leaves",
    "pale_oak_log",
    "pale_oak_planks",
    "pale_oak_pressure_plate",
    "pale_oak_sapling",
    "pale_oak_sign",
    "pale_oak_slab",
    "pale_oak_stairs",
    "pale_oak_trapdoor",
    "pale_oak_wood",
    "panda_spawn_egg",
    "paper",
    "parrot_spawn_egg",
    "pearlescent_froglight",
    "peony",
    "petrified_oak_slab",
    "phantom_membrane",
    "phantom_spawn_egg",
    "piglin_banner_pattern",
    "piglin_brute_spawn_egg",
    "piglin_head",
    "piglin_spawn_egg",
    "pig_spawn_egg",
    "pillager_spawn_egg",
    "pink_banner",
    "pink_bed",
    "pink_bundle",
    "pink_candle",
    "pink_carpet",
    "pink_concrete",
    "pink_concrete_powder",
    "pink_dye",
    "pink_glazed_terracotta",
    "pink_petals",
    "pink_shulker_box",
    "pink_stained_glass",
    "pink_stained_glass_pane",
    "pink_terracotta",
    "pink_tulip",
    "pink_wool",
    "piston",
    "pitcher_plant",
    "pitcher_pod",
    "player_head",
    "plenty_pottery_sherd",
    "podzol",
    "pointed_dripstone",
    "poisonous_potato",
    "polar_bear_spawn_egg",
    "polished_andesite",
    "polished_andesite_slab",
    "polished_andesite_stairs",
    "polished_basalt",
    "polished_blackstone",
    "polished_blackstone_bricks",
    "polished_blackstone_brick_slab",
    "polished_blackstone_brick_stairs",
    "polished_blackstone_brick_wall",
    "polished_blackstone_button",
    "polished_blackstone_pressure_plate",
    "polished_blackstone_slab",
    "polished_blackstone_stairs",
    "polished_blackstone_wall",
    "polished_deepslate",
    "polished_deepslate_slab",
    "polished_deepslate_stairs",
    "polished_deepslate_wall",
    "polished_diorite",
    "polished_diorite_slab",
    "polished_diorite_stairs",
    "polished_granite",
    "polished_granite_slab",
    "polished_granite_stairs",
    "polished_tuff",
    "polished_tuff_slab",
    "polished_tuff_stairs",
    "polished_tuff_wall",
    "popped_chorus_fruit",
    "poppy",
    "porkchop",
    "potato",
    "potion",
    "powder_snow_bucket",
    "powered_rail",
    "prismarine",
    "prismarine_bricks",
    "prismarine_brick_slab",
    "prismarine_brick_stairs",
    "prismarine_crystals",
    "prismarine_shard",
    "prismarine_slab",
    "prismarine_stairs",
    "prismarine_wall",
    "prize_pottery_sherd",
    "pufferfish",
    "pufferfish_bucket",
    "pufferfish_spawn_egg",
    "pumpkin",
    "pumpkin_pie",
    "pumpkin_seeds",
    "purple_banner",
    "purple_bed",
    "purple_bundle",
    "purple_candle",
    "purple_carpet",
    "purple_concrete",
    "purple_concrete_powder",
    "purple_dye",
    "purple_glazed_terracotta",
    "purple_shulker_box",
    "purple_stained_glass",
    "purple_stained_glass_pane",
    "purple_terracotta",
    "purple_wool",
    "purpur_block",
    "purpur_pillar",
    "purpur_slab",
    "purpur_stairs",
    "quartz",
    "quartz_block",
    "quartz_bricks",
    "quartz_pillar",
    "quartz_slab",
    "quartz_stairs",
    "rabbit",
    "rabbit_foot",
    "rabbit_hide",
    "rabbit_spawn_egg",
    "rabbit_stew",
    "rail",
    "raiser_armor_trim_smithing_template",
    "ravager_spawn_egg",
    "raw_copper",
    "raw_copper_block",
    "raw_gold",
    "raw_gold_block",
    "raw_iron",
    "raw_iron_block",
    "recovery_compass",
    "redstone",
    "redstone_block",
    "redstone_lamp",
    "redstone_ore",
    "redstone_torch",
    "red_banner",
    "red_bed",
    "red_bundle",
    "red_candle",
    "red_carpet",
    "red_concrete",
    "red_concrete_powder",
    "red_dye",
    "red_glazed_terracotta",
    "red_mushroom",
    "red_mushroom_block",
    "red_nether_bricks",
    "red_nether_brick_slab",
    "red_nether_brick_stairs",
    "red_nether_brick_wall",
    "red_sand",
    "red_sandstone",
    "red_sandstone_slab",
    "red_sandstone_stairs",
    "red_sandstone_wall",
    "red_shulker_box",
    "red_stained_glass",
    "red_stained_glass_pane",
    "red_terracotta",
    "red_tulip",
    "red_wool",
    "reinforced_deepslate",
    "repeater",
    "repeating_command_block",
    "resin_block",
    "resin_brick",
    "resin_bricks",
    "resin_brick_slab",
    "resin_brick_stairs",
    "resin_brick_wall",
    "resin_clump",
    "respawn_anchor",
    "rib_armor_trim_smithing_template",
    "rooted_dirt",
    "rose_bush",
    "rotten_flesh",
    "saddle",
    "salmon",
    "salmon_bucket",
    "salmon_spawn_egg",
    "sand",
    "sandstone",
    "sandstone_slab",
    "sandstone_stairs",
    "sandstone_wall",
    "scaffolding",
    "scrape_pottery_sherd",
    "sculk",
    "sculk_catalyst",
    "sculk_sensor",
    "sculk_shrieker",
    "sculk_vein",
    "seagrass",
    "sea_lantern",
    "sea_pickle",
    "sentry_armor_trim_smithing_template",
    "shaper_armor_trim_smithing_template",
    "sheaf_pottery_sherd",
    "shears",
    "sheep_spawn_egg",
    "shelter_pottery_sherd",
    "shield",
    "short_grass",
    "shroomlight",
    "shulker_box",
    "shulker_shell",
    "shulker_spawn_egg",
    "silence_armor_trim_smithing_template",
    "silverfish_spawn_egg",
    "skeleton_horse_spawn_egg",
    "skeleton_skull",
    "skeleton_spawn_egg",
    "skull_banner_pattern",
    "skull_pottery_sherd",
    "slime_ball",
    "slime_block",
    "slime_spawn_egg",
    "small_amethyst_bud",
    "small_dripleaf",
    "smithing_table",
    "smoker",
    "smooth_basalt",
    "smooth_quartz",
    "smooth_quartz_slab",
    "smooth_quartz_stairs",
    "smooth_red_sandstone",
    "smooth_red_sandstone_slab",
    "smooth_red_sandstone_stairs",
    "smooth_sandstone",
    "smooth_sandstone_slab",
    "smooth_sandstone_stairs",
    "smooth_stone",
    "smooth_stone_slab",
    "sniffer_egg",
    "sniffer_spawn_egg",
    "snort_pottery_sherd",
    "snout_armor_trim_smithing_template",
    "snow",
    "snowball",
    "snow_block",
    "snow_golem_spawn_egg",
    "soul_campfire",
    "soul_lantern",
    "soul_sand",
    "soul_soil",
    "soul_torch",
    "spawner",
    "spectral_arrow",
    "spider_eye",
    "spider_spawn_egg",
    "spire_armor_trim_smithing_template",
    "splash_potion",
    "sponge",
    "spore_blossom",
    "spruce_boat",
    "spruce_button",
    "spruce_chest_boat",
    "spruce_door",
    "spruce_fence",
    "spruce_fence_gate",
    "spruce_hanging_sign",
    "spruce_leaves",
    "spruce_log",
    "spruce_planks",
    "spruce_pressure_plate",
    "spruce_sapling",
    "spruce_sign",
    "spruce_slab",
    "spruce_stairs",
    "spruce_trapdoor",
    "spruce_wood",
    "spyglass",
    "squid_spawn_egg",
    "stick",
    "sticky_piston",
    "stone",
    "stonecutter",
    "stone_axe",
    "stone_bricks",
    "stone_brick_slab",
    "stone_brick_stairs",
    "stone_brick_wall",
    "stone_button",
    "stone_hoe",
    "stone_pickaxe",
    "stone_pressure_plate",
    "stone_shovel",
    "stone_slab",
    "stone_stairs",
    "stone_sword",
    "stray_spawn_egg",
    "strider_spawn_egg",
    "string",
    "stripped_acacia_log",
    "stripped_acacia_wood",
    "stripped_bamboo_block",
    "stripped_birch_log",
    "stripped_birch_wood",
    "stripped_cherry_log",
    "stripped_cherry_wood",
    "stripped_crimson_hyphae",
    "stripped_crimson_stem",
    "stripped_dark_oak_log",
    "stripped_dark_oak_wood",
    "stripped_jungle_log",
    "stripped_jungle_wood",
    "stripped_mangrove_log",
    "stripped_mangrove_wood",
    "stripped_oak_log",
    "stripped_oak_wood",
    "stripped_pale_oak_log",
    "stripped_pale_oak_wood",
    "stripped_spruce_log",
    "stripped_spruce_wood",
    "stripped_warped_hyphae",
    "stripped_warped_stem",
    "structure_block",
    "structure_void",
    "sugar",
    "sugar_cane",
    "sunflower",
    "suspicious_gravel",
    "suspicious_sand",
    "suspicious_stew",
    "sweet_berries",
    "tadpole_bucket",
    "tadpole_spawn_egg",
    "tall_grass",
    "target",
    "terracotta",
    "tide_armor_trim_smithing_template",
    "tinted_glass",
    "tipped_arrow",
    "tnt",
    "tnt_minecart",
    "torch",
    "torchflower",
    "torchflower_seeds",
    "totem_of_undying",
    "trader_llama_spawn_egg",
    "trapped_chest",
    "trial_key",
    "trial_spawner",
    "trident",
    "tripwire_hook",
    "tropical_fish",
    "tropical_fish_bucket",
    "tropical_fish_spawn_egg",
    "tube_coral",
    "tube_coral_block",
    "tube_coral_fan",
    "tuff",
    "tuff_bricks",
    "tuff_brick_slab",
    "tuff_brick_stairs",
    "tuff_brick_wall",
    "tuff_slab",
    "tuff_stairs",
    "tuff_wall",
    "turtle_egg",
    "turtle_helmet",
    "turtle_scute",
    "turtle_spawn_egg",
    "twisting_vines",
    "vault",
    "verdant_froglight",
    "vex_armor_trim_smithing_template",
    "vex_spawn_egg",
    "villager_spawn_egg",
    "vindicator_spawn_egg",
    "vine",
    "wandering_trader_spawn_egg",
    "warden_spawn_egg",
    "ward_armor_trim_smithing_template",
    "warped_button",
    "warped_door",
    "warped_fence",
    "warped_fence_gate",
    "warped_fungus",
    "warped_fungus_on_a_stick",
    "warped_hanging_sign",
    "warped_hyphae",
    "warped_nylium",
    "warped_planks",
    "warped_pressure_plate",
    "warped_roots",
    "warped_sign",
    "warped_slab",
    "warped_stairs",
    "warped_stem",
    "warped_trapdoor",
    "warped_wart_block",
    "water_bucket",
    "waxed_chiseled_copper",
    "waxed_copper_block",
    "waxed_copper_bulb",
    "waxed_copper_door",
    "waxed_copper_grate",
    "waxed_copper_trapdoor",
    "waxed_cut_copper",
    "waxed_cut_copper_slab",
    "waxed_cut_copper_stairs",
    "waxed_exposed_chiseled_copper",
    "waxed_exposed_copper",
    "waxed_exposed_copper_bulb",
    "waxed_exposed_copper_door",
    "waxed_exposed_copper_grate",
    "waxed_exposed_copper_trapdoor",
    "waxed_exposed_cut_copper",
    "waxed_exposed_cut_copper_slab",
    "waxed_exposed_cut_copper_stairs",
    "waxed_oxidized_chiseled_copper",
    "waxed_oxidized_copper",
    "waxed_oxidized_copper_bulb",
    "waxed_oxidized_copper_door",
    "waxed_oxidized_copper_grate",
    "waxed_oxidized_copper_trapdoor",
    "waxed_oxidized_cut_copper",
    "waxed_oxidized_cut_copper_slab",
    "waxed_oxidized_cut_copper_stairs",
    "waxed_weathered_chiseled_copper",
    "waxed_weathered_copper",
    "waxed_weathered_copper_bulb",
    "waxed_weathered_copper_door",
    "waxed_weathered_copper_grate",
    "waxed_weathered_copper_trapdoor",
    "waxed_weathered_cut_copper",
    "waxed_weathered_cut_copper_slab",
    "waxed_weathered_cut_copper_stairs",
    "wayfinder_armor_trim_smithing_template",
    "weathered_chiseled_copper",
    "weathered_copper",
    "weathered_copper_bulb",
    "weathered_copper_door",
    "weathered_copper_grate",
    "weathered_copper_trapdoor",
    "weathered_cut_copper",
    "weathered_cut_copper_slab",
    "weathered_cut_copper_stairs",
    "weeping_vines",
    "wet_sponge",
    "wheat",
    "wheat_seeds",
    "white_banner",
    "white_bed",
    "white_bundle",
    "white_candle",
    "white_carpet",
    "white_concrete",
    "white_concrete_powder",
    "white_dye",
    "white_glazed_terracotta",
    "white_shulker_box",
    "white_stained_glass",
    "white_stained_glass_pane",
    "white_terracotta",
    "white_tulip",
    "white_wool",
    "wild_armor_trim_smithing_template",
    "wind_charge",
    "witch_spawn_egg",
    "wither_rose",
    "wither_skeleton_skull",
    "wither_skeleton_spawn_egg",
    "wither_spawn_egg",
    "wolf_armor",
    "wolf_spawn_egg",
    "wooden_axe",
    "wooden_hoe",
    "wooden_pickaxe",
    "wooden_shovel",
    "wooden_sword",
    "writable_book",
    "written_book",
    "yellow_banner",
    "yellow_bed",
    "yellow_bundle",
    "yellow_candle",
    "yellow_carpet",
    "yellow_concrete",
    "yellow_concrete_powder",
    "yellow_dye",
    "yellow_glazed_terracotta",
    "yellow_shulker_box",
    "yellow_stained_glass",
    "yellow_stained_glass_pane",
    "yellow_terracotta",
    "yellow_wool",
    "zoglin_spawn_egg",
    "zombie_head",
    "zombie_horse_spawn_egg",
    "zombie_spawn_egg",
    "zombie_villager_spawn_egg",
    "zombified_piglin_spawn_egg"
  ];
  function isItem(value) {
    return itemNames.includes(value);
  }

  // src/view/object/blockNames.ts
  var blockNames = [
    "acacia_button",
    "acacia_door",
    "acacia_fence",
    "acacia_fence_gate",
    "acacia_hanging_sign",
    "acacia_leaves",
    "acacia_log",
    "acacia_planks",
    "acacia_pressure_plate",
    "acacia_sapling",
    "acacia_sign",
    "acacia_slab",
    "acacia_stairs",
    "acacia_trapdoor",
    "acacia_wall_hanging_sign",
    "acacia_wall_sign",
    "acacia_wood",
    "activator_rail",
    "air",
    "allium",
    "amethyst_block",
    "amethyst_cluster",
    "ancient_debris",
    "andesite",
    "andesite_slab",
    "andesite_stairs",
    "andesite_wall",
    "anvil",
    "attached_melon_stem",
    "attached_pumpkin_stem",
    "azalea",
    "azalea_leaves",
    "azure_bluet",
    "bamboo",
    "bamboo_block",
    "bamboo_button",
    "bamboo_door",
    "bamboo_fence",
    "bamboo_fence_gate",
    "bamboo_hanging_sign",
    "bamboo_mosaic",
    "bamboo_mosaic_slab",
    "bamboo_mosaic_stairs",
    "bamboo_planks",
    "bamboo_pressure_plate",
    "bamboo_sapling",
    "bamboo_sign",
    "bamboo_slab",
    "bamboo_stairs",
    "bamboo_trapdoor",
    "bamboo_wall_hanging_sign",
    "bamboo_wall_sign",
    "barrel",
    "barrier",
    "basalt",
    "beacon",
    "bedrock",
    "beehive",
    "beetroots",
    "bee_nest",
    "bell",
    "big_dripleaf",
    "big_dripleaf_stem",
    "birch_button",
    "birch_door",
    "birch_fence",
    "birch_fence_gate",
    "birch_hanging_sign",
    "birch_leaves",
    "birch_log",
    "birch_planks",
    "birch_pressure_plate",
    "birch_sapling",
    "birch_sign",
    "birch_slab",
    "birch_stairs",
    "birch_trapdoor",
    "birch_wall_hanging_sign",
    "birch_wall_sign",
    "birch_wood",
    "blackstone",
    "blackstone_slab",
    "blackstone_stairs",
    "blackstone_wall",
    "black_banner",
    "black_bed",
    "black_candle",
    "black_candle_cake",
    "black_carpet",
    "black_concrete",
    "black_concrete_powder",
    "black_glazed_terracotta",
    "black_shulker_box",
    "black_stained_glass",
    "black_stained_glass_pane",
    "black_terracotta",
    "black_wall_banner",
    "black_wool",
    "blast_furnace",
    "blue_banner",
    "blue_bed",
    "blue_candle",
    "blue_candle_cake",
    "blue_carpet",
    "blue_concrete",
    "blue_concrete_powder",
    "blue_glazed_terracotta",
    "blue_ice",
    "blue_orchid",
    "blue_shulker_box",
    "blue_stained_glass",
    "blue_stained_glass_pane",
    "blue_terracotta",
    "blue_wall_banner",
    "blue_wool",
    "bone_block",
    "bookshelf",
    "brain_coral",
    "brain_coral_block",
    "brain_coral_fan",
    "brain_coral_wall_fan",
    "brewing_stand",
    "bricks",
    "brick_slab",
    "brick_stairs",
    "brick_wall",
    "brown_banner",
    "brown_bed",
    "brown_candle",
    "brown_candle_cake",
    "brown_carpet",
    "brown_concrete",
    "brown_concrete_powder",
    "brown_glazed_terracotta",
    "brown_mushroom",
    "brown_mushroom_block",
    "brown_shulker_box",
    "brown_stained_glass",
    "brown_stained_glass_pane",
    "brown_terracotta",
    "brown_wall_banner",
    "brown_wool",
    "bubble_column",
    "bubble_coral",
    "bubble_coral_block",
    "bubble_coral_fan",
    "bubble_coral_wall_fan",
    "budding_amethyst",
    "cactus",
    "cake",
    "calcite",
    "calibrated_sculk_sensor",
    "campfire",
    "candle",
    "candle_cake",
    "carrots",
    "cartography_table",
    "carved_pumpkin",
    "cauldron",
    "cave_air",
    "cave_vines",
    "cave_vines_plant",
    "chain",
    "chain_command_block",
    "cherry_button",
    "cherry_door",
    "cherry_fence",
    "cherry_fence_gate",
    "cherry_hanging_sign",
    "cherry_leaves",
    "cherry_log",
    "cherry_planks",
    "cherry_pressure_plate",
    "cherry_sapling",
    "cherry_sign",
    "cherry_slab",
    "cherry_stairs",
    "cherry_trapdoor",
    "cherry_wall_hanging_sign",
    "cherry_wall_sign",
    "cherry_wood",
    "chest",
    "chipped_anvil",
    "chiseled_bookshelf",
    "chiseled_copper",
    "chiseled_deepslate",
    "chiseled_nether_bricks",
    "chiseled_polished_blackstone",
    "chiseled_quartz_block",
    "chiseled_red_sandstone",
    "chiseled_resin_bricks",
    "chiseled_sandstone",
    "chiseled_stone_bricks",
    "chiseled_tuff",
    "chiseled_tuff_bricks",
    "chorus_flower",
    "chorus_plant",
    "clay",
    "closed_eyeblossom",
    "coal_block",
    "coal_ore",
    "coarse_dirt",
    "cobbled_deepslate",
    "cobbled_deepslate_slab",
    "cobbled_deepslate_stairs",
    "cobbled_deepslate_wall",
    "cobblestone",
    "cobblestone_slab",
    "cobblestone_stairs",
    "cobblestone_wall",
    "cobweb",
    "cocoa",
    "command_block",
    "comparator",
    "composter",
    "conduit",
    "copper_block",
    "copper_bulb",
    "copper_door",
    "copper_grate",
    "copper_ore",
    "copper_trapdoor",
    "cornflower",
    "cracked_deepslate_bricks",
    "cracked_deepslate_tiles",
    "cracked_nether_bricks",
    "cracked_polished_blackstone_bricks",
    "cracked_stone_bricks",
    "crafter",
    "crafting_table",
    "creaking_heart",
    "creeper_head",
    "creeper_wall_head",
    "crimson_button",
    "crimson_door",
    "crimson_fence",
    "crimson_fence_gate",
    "crimson_fungus",
    "crimson_hanging_sign",
    "crimson_hyphae",
    "crimson_nylium",
    "crimson_planks",
    "crimson_pressure_plate",
    "crimson_roots",
    "crimson_sign",
    "crimson_slab",
    "crimson_stairs",
    "crimson_stem",
    "crimson_trapdoor",
    "crimson_wall_hanging_sign",
    "crimson_wall_sign",
    "crying_obsidian",
    "cut_copper",
    "cut_copper_slab",
    "cut_copper_stairs",
    "cut_red_sandstone",
    "cut_red_sandstone_slab",
    "cut_sandstone",
    "cut_sandstone_slab",
    "cyan_banner",
    "cyan_bed",
    "cyan_candle",
    "cyan_candle_cake",
    "cyan_carpet",
    "cyan_concrete",
    "cyan_concrete_powder",
    "cyan_glazed_terracotta",
    "cyan_shulker_box",
    "cyan_stained_glass",
    "cyan_stained_glass_pane",
    "cyan_terracotta",
    "cyan_wall_banner",
    "cyan_wool",
    "damaged_anvil",
    "dandelion",
    "dark_oak_button",
    "dark_oak_door",
    "dark_oak_fence",
    "dark_oak_fence_gate",
    "dark_oak_hanging_sign",
    "dark_oak_leaves",
    "dark_oak_log",
    "dark_oak_planks",
    "dark_oak_pressure_plate",
    "dark_oak_sapling",
    "dark_oak_sign",
    "dark_oak_slab",
    "dark_oak_stairs",
    "dark_oak_trapdoor",
    "dark_oak_wall_hanging_sign",
    "dark_oak_wall_sign",
    "dark_oak_wood",
    "dark_prismarine",
    "dark_prismarine_slab",
    "dark_prismarine_stairs",
    "daylight_detector",
    "dead_brain_coral",
    "dead_brain_coral_block",
    "dead_brain_coral_fan",
    "dead_brain_coral_wall_fan",
    "dead_bubble_coral",
    "dead_bubble_coral_block",
    "dead_bubble_coral_fan",
    "dead_bubble_coral_wall_fan",
    "dead_bush",
    "dead_fire_coral",
    "dead_fire_coral_block",
    "dead_fire_coral_fan",
    "dead_fire_coral_wall_fan",
    "dead_horn_coral",
    "dead_horn_coral_block",
    "dead_horn_coral_fan",
    "dead_horn_coral_wall_fan",
    "dead_tube_coral",
    "dead_tube_coral_block",
    "dead_tube_coral_fan",
    "dead_tube_coral_wall_fan",
    "decorated_pot",
    "deepslate",
    "deepslate_bricks",
    "deepslate_brick_slab",
    "deepslate_brick_stairs",
    "deepslate_brick_wall",
    "deepslate_coal_ore",
    "deepslate_copper_ore",
    "deepslate_diamond_ore",
    "deepslate_emerald_ore",
    "deepslate_gold_ore",
    "deepslate_iron_ore",
    "deepslate_lapis_ore",
    "deepslate_redstone_ore",
    "deepslate_tiles",
    "deepslate_tile_slab",
    "deepslate_tile_stairs",
    "deepslate_tile_wall",
    "detector_rail",
    "diamond_block",
    "diamond_ore",
    "diorite",
    "diorite_slab",
    "diorite_stairs",
    "diorite_wall",
    "dirt",
    "dirt_path",
    "dispenser",
    "dragon_egg",
    "dragon_head",
    "dragon_wall_head",
    "dried_kelp_block",
    "dripstone_block",
    "dropper",
    "emerald_block",
    "emerald_ore",
    "enchanting_table",
    "ender_chest",
    "end_gateway",
    "end_portal",
    "end_portal_frame",
    "end_rod",
    "end_stone",
    "end_stone_bricks",
    "end_stone_brick_slab",
    "end_stone_brick_stairs",
    "end_stone_brick_wall",
    "exposed_chiseled_copper",
    "exposed_copper",
    "exposed_copper_bulb",
    "exposed_copper_door",
    "exposed_copper_grate",
    "exposed_copper_trapdoor",
    "exposed_cut_copper",
    "exposed_cut_copper_slab",
    "exposed_cut_copper_stairs",
    "farmland",
    "fern",
    "fire",
    "fire_coral",
    "fire_coral_block",
    "fire_coral_fan",
    "fire_coral_wall_fan",
    "fletching_table",
    "flowering_azalea",
    "flowering_azalea_leaves",
    "flower_pot",
    "frogspawn",
    "frosted_ice",
    "furnace",
    "gilded_blackstone",
    "glass",
    "glass_pane",
    "glowstone",
    "glow_item_frame",
    "glow_lichen",
    "gold_block",
    "gold_ore",
    "granite",
    "granite_slab",
    "granite_stairs",
    "granite_wall",
    "grass_block",
    "gravel",
    "gray_banner",
    "gray_bed",
    "gray_candle",
    "gray_candle_cake",
    "gray_carpet",
    "gray_concrete",
    "gray_concrete_powder",
    "gray_glazed_terracotta",
    "gray_shulker_box",
    "gray_stained_glass",
    "gray_stained_glass_pane",
    "gray_terracotta",
    "gray_wall_banner",
    "gray_wool",
    "green_banner",
    "green_bed",
    "green_candle",
    "green_candle_cake",
    "green_carpet",
    "green_concrete",
    "green_concrete_powder",
    "green_glazed_terracotta",
    "green_shulker_box",
    "green_stained_glass",
    "green_stained_glass_pane",
    "green_terracotta",
    "green_wall_banner",
    "green_wool",
    "grindstone",
    "hanging_roots",
    "hay_block",
    "heavy_core",
    "heavy_weighted_pressure_plate",
    "honeycomb_block",
    "honey_block",
    "hopper",
    "horn_coral",
    "horn_coral_block",
    "horn_coral_fan",
    "horn_coral_wall_fan",
    "ice",
    "infested_chiseled_stone_bricks",
    "infested_cobblestone",
    "infested_cracked_stone_bricks",
    "infested_deepslate",
    "infested_mossy_stone_bricks",
    "infested_stone",
    "infested_stone_bricks",
    "iron_bars",
    "iron_block",
    "iron_door",
    "iron_ore",
    "iron_trapdoor",
    "item_frame",
    "jack_o_lantern",
    "jigsaw",
    "jukebox",
    "jungle_button",
    "jungle_door",
    "jungle_fence",
    "jungle_fence_gate",
    "jungle_hanging_sign",
    "jungle_leaves",
    "jungle_log",
    "jungle_planks",
    "jungle_pressure_plate",
    "jungle_sapling",
    "jungle_sign",
    "jungle_slab",
    "jungle_stairs",
    "jungle_trapdoor",
    "jungle_wall_hanging_sign",
    "jungle_wall_sign",
    "jungle_wood",
    "kelp",
    "kelp_plant",
    "ladder",
    "lantern",
    "lapis_block",
    "lapis_ore",
    "large_amethyst_bud",
    "large_fern",
    "lava",
    "lava_cauldron",
    "lectern",
    "lever",
    "light",
    "lightning_rod",
    "light_blue_banner",
    "light_blue_bed",
    "light_blue_candle",
    "light_blue_candle_cake",
    "light_blue_carpet",
    "light_blue_concrete",
    "light_blue_concrete_powder",
    "light_blue_glazed_terracotta",
    "light_blue_shulker_box",
    "light_blue_stained_glass",
    "light_blue_stained_glass_pane",
    "light_blue_terracotta",
    "light_blue_wall_banner",
    "light_blue_wool",
    "light_gray_banner",
    "light_gray_bed",
    "light_gray_candle",
    "light_gray_candle_cake",
    "light_gray_carpet",
    "light_gray_concrete",
    "light_gray_concrete_powder",
    "light_gray_glazed_terracotta",
    "light_gray_shulker_box",
    "light_gray_stained_glass",
    "light_gray_stained_glass_pane",
    "light_gray_terracotta",
    "light_gray_wall_banner",
    "light_gray_wool",
    "light_weighted_pressure_plate",
    "lilac",
    "lily_of_the_valley",
    "lily_pad",
    "lime_banner",
    "lime_bed",
    "lime_candle",
    "lime_candle_cake",
    "lime_carpet",
    "lime_concrete",
    "lime_concrete_powder",
    "lime_glazed_terracotta",
    "lime_shulker_box",
    "lime_stained_glass",
    "lime_stained_glass_pane",
    "lime_terracotta",
    "lime_wall_banner",
    "lime_wool",
    "lodestone",
    "loom",
    "magenta_banner",
    "magenta_bed",
    "magenta_candle",
    "magenta_candle_cake",
    "magenta_carpet",
    "magenta_concrete",
    "magenta_concrete_powder",
    "magenta_glazed_terracotta",
    "magenta_shulker_box",
    "magenta_stained_glass",
    "magenta_stained_glass_pane",
    "magenta_terracotta",
    "magenta_wall_banner",
    "magenta_wool",
    "magma_block",
    "mangrove_button",
    "mangrove_door",
    "mangrove_fence",
    "mangrove_fence_gate",
    "mangrove_hanging_sign",
    "mangrove_leaves",
    "mangrove_log",
    "mangrove_planks",
    "mangrove_pressure_plate",
    "mangrove_propagule",
    "mangrove_roots",
    "mangrove_sign",
    "mangrove_slab",
    "mangrove_stairs",
    "mangrove_trapdoor",
    "mangrove_wall_hanging_sign",
    "mangrove_wall_sign",
    "mangrove_wood",
    "medium_amethyst_bud",
    "melon",
    "melon_stem",
    "mossy_cobblestone",
    "mossy_cobblestone_slab",
    "mossy_cobblestone_stairs",
    "mossy_cobblestone_wall",
    "mossy_stone_bricks",
    "mossy_stone_brick_slab",
    "mossy_stone_brick_stairs",
    "mossy_stone_brick_wall",
    "moss_block",
    "moss_carpet",
    "moving_piston",
    "mud",
    "muddy_mangrove_roots",
    "mud_bricks",
    "mud_brick_slab",
    "mud_brick_stairs",
    "mud_brick_wall",
    "mushroom_stem",
    "mycelium",
    "netherite_block",
    "netherrack",
    "nether_bricks",
    "nether_brick_fence",
    "nether_brick_slab",
    "nether_brick_stairs",
    "nether_brick_wall",
    "nether_gold_ore",
    "nether_portal",
    "nether_quartz_ore",
    "nether_sprouts",
    "nether_wart",
    "nether_wart_block",
    "note_block",
    "oak_button",
    "oak_door",
    "oak_fence",
    "oak_fence_gate",
    "oak_hanging_sign",
    "oak_leaves",
    "oak_log",
    "oak_planks",
    "oak_pressure_plate",
    "oak_sapling",
    "oak_sign",
    "oak_slab",
    "oak_stairs",
    "oak_trapdoor",
    "oak_wall_hanging_sign",
    "oak_wall_sign",
    "oak_wood",
    "observer",
    "obsidian",
    "ochre_froglight",
    "open_eyeblossom",
    "orange_banner",
    "orange_bed",
    "orange_candle",
    "orange_candle_cake",
    "orange_carpet",
    "orange_concrete",
    "orange_concrete_powder",
    "orange_glazed_terracotta",
    "orange_shulker_box",
    "orange_stained_glass",
    "orange_stained_glass_pane",
    "orange_terracotta",
    "orange_tulip",
    "orange_wall_banner",
    "orange_wool",
    "oxeye_daisy",
    "oxidized_chiseled_copper",
    "oxidized_copper",
    "oxidized_copper_bulb",
    "oxidized_copper_door",
    "oxidized_copper_grate",
    "oxidized_copper_trapdoor",
    "oxidized_cut_copper",
    "oxidized_cut_copper_slab",
    "oxidized_cut_copper_stairs",
    "packed_ice",
    "packed_mud",
    "pale_hanging_moss",
    "pale_moss_block",
    "pale_moss_carpet",
    "pale_oak_button",
    "pale_oak_door",
    "pale_oak_fence",
    "pale_oak_fence_gate",
    "pale_oak_hanging_sign",
    "pale_oak_leaves",
    "pale_oak_log",
    "pale_oak_planks",
    "pale_oak_pressure_plate",
    "pale_oak_sapling",
    "pale_oak_sign",
    "pale_oak_slab",
    "pale_oak_stairs",
    "pale_oak_trapdoor",
    "pale_oak_wall_hanging_sign",
    "pale_oak_wall_sign",
    "pale_oak_wood",
    "pearlescent_froglight",
    "peony",
    "petrified_oak_slab",
    "piglin_head",
    "piglin_wall_head",
    "pink_banner",
    "pink_bed",
    "pink_candle",
    "pink_candle_cake",
    "pink_carpet",
    "pink_concrete",
    "pink_concrete_powder",
    "pink_glazed_terracotta",
    "pink_petals",
    "pink_shulker_box",
    "pink_stained_glass",
    "pink_stained_glass_pane",
    "pink_terracotta",
    "pink_tulip",
    "pink_wall_banner",
    "pink_wool",
    "piston",
    "piston_head",
    "pitcher_crop",
    "pitcher_plant",
    "player_head",
    "player_wall_head",
    "podzol",
    "pointed_dripstone",
    "polished_andesite",
    "polished_andesite_slab",
    "polished_andesite_stairs",
    "polished_basalt",
    "polished_blackstone",
    "polished_blackstone_bricks",
    "polished_blackstone_brick_slab",
    "polished_blackstone_brick_stairs",
    "polished_blackstone_brick_wall",
    "polished_blackstone_button",
    "polished_blackstone_pressure_plate",
    "polished_blackstone_slab",
    "polished_blackstone_stairs",
    "polished_blackstone_wall",
    "polished_deepslate",
    "polished_deepslate_slab",
    "polished_deepslate_stairs",
    "polished_deepslate_wall",
    "polished_diorite",
    "polished_diorite_slab",
    "polished_diorite_stairs",
    "polished_granite",
    "polished_granite_slab",
    "polished_granite_stairs",
    "polished_tuff",
    "polished_tuff_slab",
    "polished_tuff_stairs",
    "polished_tuff_wall",
    "poppy",
    "potatoes",
    "potted_acacia_sapling",
    "potted_allium",
    "potted_azalea_bush",
    "potted_azure_bluet",
    "potted_bamboo",
    "potted_birch_sapling",
    "potted_blue_orchid",
    "potted_brown_mushroom",
    "potted_cactus",
    "potted_cherry_sapling",
    "potted_closed_eyeblossom",
    "potted_cornflower",
    "potted_crimson_fungus",
    "potted_crimson_roots",
    "potted_dandelion",
    "potted_dark_oak_sapling",
    "potted_dead_bush",
    "potted_fern",
    "potted_flowering_azalea_bush",
    "potted_jungle_sapling",
    "potted_lily_of_the_valley",
    "potted_mangrove_propagule",
    "potted_oak_sapling",
    "potted_open_eyeblossom",
    "potted_orange_tulip",
    "potted_oxeye_daisy",
    "potted_pale_oak_sapling",
    "potted_pink_tulip",
    "potted_poppy",
    "potted_red_mushroom",
    "potted_red_tulip",
    "potted_spruce_sapling",
    "potted_torchflower",
    "potted_warped_fungus",
    "potted_warped_roots",
    "potted_white_tulip",
    "potted_wither_rose",
    "powder_snow",
    "powder_snow_cauldron",
    "powered_rail",
    "prismarine",
    "prismarine_bricks",
    "prismarine_brick_slab",
    "prismarine_brick_stairs",
    "prismarine_slab",
    "prismarine_stairs",
    "prismarine_wall",
    "pumpkin",
    "pumpkin_stem",
    "purple_banner",
    "purple_bed",
    "purple_candle",
    "purple_candle_cake",
    "purple_carpet",
    "purple_concrete",
    "purple_concrete_powder",
    "purple_glazed_terracotta",
    "purple_shulker_box",
    "purple_stained_glass",
    "purple_stained_glass_pane",
    "purple_terracotta",
    "purple_wall_banner",
    "purple_wool",
    "purpur_block",
    "purpur_pillar",
    "purpur_slab",
    "purpur_stairs",
    "quartz_block",
    "quartz_bricks",
    "quartz_pillar",
    "quartz_slab",
    "quartz_stairs",
    "rail",
    "raw_copper_block",
    "raw_gold_block",
    "raw_iron_block",
    "redstone_block",
    "redstone_lamp",
    "redstone_ore",
    "redstone_torch",
    "redstone_wall_torch",
    "redstone_wire",
    "red_banner",
    "red_bed",
    "red_candle",
    "red_candle_cake",
    "red_carpet",
    "red_concrete",
    "red_concrete_powder",
    "red_glazed_terracotta",
    "red_mushroom",
    "red_mushroom_block",
    "red_nether_bricks",
    "red_nether_brick_slab",
    "red_nether_brick_stairs",
    "red_nether_brick_wall",
    "red_sand",
    "red_sandstone",
    "red_sandstone_slab",
    "red_sandstone_stairs",
    "red_sandstone_wall",
    "red_shulker_box",
    "red_stained_glass",
    "red_stained_glass_pane",
    "red_terracotta",
    "red_tulip",
    "red_wall_banner",
    "red_wool",
    "reinforced_deepslate",
    "repeater",
    "repeating_command_block",
    "resin_block",
    "resin_bricks",
    "resin_brick_slab",
    "resin_brick_stairs",
    "resin_brick_wall",
    "resin_clump",
    "respawn_anchor",
    "rooted_dirt",
    "rose_bush",
    "sand",
    "sandstone",
    "sandstone_slab",
    "sandstone_stairs",
    "sandstone_wall",
    "scaffolding",
    "sculk",
    "sculk_catalyst",
    "sculk_sensor",
    "sculk_shrieker",
    "sculk_vein",
    "seagrass",
    "sea_lantern",
    "sea_pickle",
    "short_grass",
    "shroomlight",
    "shulker_box",
    "skeleton_skull",
    "skeleton_wall_skull",
    "slime_block",
    "small_amethyst_bud",
    "small_dripleaf",
    "smithing_table",
    "smoker",
    "smooth_basalt",
    "smooth_quartz",
    "smooth_quartz_slab",
    "smooth_quartz_stairs",
    "smooth_red_sandstone",
    "smooth_red_sandstone_slab",
    "smooth_red_sandstone_stairs",
    "smooth_sandstone",
    "smooth_sandstone_slab",
    "smooth_sandstone_stairs",
    "smooth_stone",
    "smooth_stone_slab",
    "sniffer_egg",
    "snow",
    "snow_block",
    "soul_campfire",
    "soul_fire",
    "soul_lantern",
    "soul_sand",
    "soul_soil",
    "soul_torch",
    "soul_wall_torch",
    "spawner",
    "sponge",
    "spore_blossom",
    "spruce_button",
    "spruce_door",
    "spruce_fence",
    "spruce_fence_gate",
    "spruce_hanging_sign",
    "spruce_leaves",
    "spruce_log",
    "spruce_planks",
    "spruce_pressure_plate",
    "spruce_sapling",
    "spruce_sign",
    "spruce_slab",
    "spruce_stairs",
    "spruce_trapdoor",
    "spruce_wall_hanging_sign",
    "spruce_wall_sign",
    "spruce_wood",
    "sticky_piston",
    "stone",
    "stonecutter",
    "stone_bricks",
    "stone_brick_slab",
    "stone_brick_stairs",
    "stone_brick_wall",
    "stone_button",
    "stone_pressure_plate",
    "stone_slab",
    "stone_stairs",
    "stripped_acacia_log",
    "stripped_acacia_wood",
    "stripped_bamboo_block",
    "stripped_birch_log",
    "stripped_birch_wood",
    "stripped_cherry_log",
    "stripped_cherry_wood",
    "stripped_crimson_hyphae",
    "stripped_crimson_stem",
    "stripped_dark_oak_log",
    "stripped_dark_oak_wood",
    "stripped_jungle_log",
    "stripped_jungle_wood",
    "stripped_mangrove_log",
    "stripped_mangrove_wood",
    "stripped_oak_log",
    "stripped_oak_wood",
    "stripped_pale_oak_log",
    "stripped_pale_oak_wood",
    "stripped_spruce_log",
    "stripped_spruce_wood",
    "stripped_warped_hyphae",
    "stripped_warped_stem",
    "structure_block",
    "structure_void",
    "sugar_cane",
    "sunflower",
    "suspicious_gravel",
    "suspicious_sand",
    "sweet_berry_bush",
    "tall_grass",
    "tall_seagrass",
    "target",
    "terracotta",
    "tinted_glass",
    "tnt",
    "torch",
    "torchflower",
    "torchflower_crop",
    "trapped_chest",
    "trial_spawner",
    "tripwire",
    "tripwire_hook",
    "tube_coral",
    "tube_coral_block",
    "tube_coral_fan",
    "tube_coral_wall_fan",
    "tuff",
    "tuff_bricks",
    "tuff_brick_slab",
    "tuff_brick_stairs",
    "tuff_brick_wall",
    "tuff_slab",
    "tuff_stairs",
    "tuff_wall",
    "turtle_egg",
    "twisting_vines",
    "twisting_vines_plant",
    "vault",
    "verdant_froglight",
    "vine",
    "void_air",
    "wall_torch",
    "warped_button",
    "warped_door",
    "warped_fence",
    "warped_fence_gate",
    "warped_fungus",
    "warped_hanging_sign",
    "warped_hyphae",
    "warped_nylium",
    "warped_planks",
    "warped_pressure_plate",
    "warped_roots",
    "warped_sign",
    "warped_slab",
    "warped_stairs",
    "warped_stem",
    "warped_trapdoor",
    "warped_wall_hanging_sign",
    "warped_wall_sign",
    "warped_wart_block",
    "water",
    "water_cauldron",
    "waxed_chiseled_copper",
    "waxed_copper_block",
    "waxed_copper_bulb",
    "waxed_copper_door",
    "waxed_copper_grate",
    "waxed_copper_trapdoor",
    "waxed_cut_copper",
    "waxed_cut_copper_slab",
    "waxed_cut_copper_stairs",
    "waxed_exposed_chiseled_copper",
    "waxed_exposed_copper",
    "waxed_exposed_copper_bulb",
    "waxed_exposed_copper_door",
    "waxed_exposed_copper_grate",
    "waxed_exposed_copper_trapdoor",
    "waxed_exposed_cut_copper",
    "waxed_exposed_cut_copper_slab",
    "waxed_exposed_cut_copper_stairs",
    "waxed_oxidized_chiseled_copper",
    "waxed_oxidized_copper",
    "waxed_oxidized_copper_bulb",
    "waxed_oxidized_copper_door",
    "waxed_oxidized_copper_grate",
    "waxed_oxidized_copper_trapdoor",
    "waxed_oxidized_cut_copper",
    "waxed_oxidized_cut_copper_slab",
    "waxed_oxidized_cut_copper_stairs",
    "waxed_weathered_chiseled_copper",
    "waxed_weathered_copper",
    "waxed_weathered_copper_bulb",
    "waxed_weathered_copper_door",
    "waxed_weathered_copper_grate",
    "waxed_weathered_copper_trapdoor",
    "waxed_weathered_cut_copper",
    "waxed_weathered_cut_copper_slab",
    "waxed_weathered_cut_copper_stairs",
    "weathered_chiseled_copper",
    "weathered_copper",
    "weathered_copper_bulb",
    "weathered_copper_door",
    "weathered_copper_grate",
    "weathered_copper_trapdoor",
    "weathered_cut_copper",
    "weathered_cut_copper_slab",
    "weathered_cut_copper_stairs",
    "weeping_vines",
    "weeping_vines_plant",
    "wet_sponge",
    "wheat",
    "white_banner",
    "white_bed",
    "white_candle",
    "white_candle_cake",
    "white_carpet",
    "white_concrete",
    "white_concrete_powder",
    "white_glazed_terracotta",
    "white_shulker_box",
    "white_stained_glass",
    "white_stained_glass_pane",
    "white_terracotta",
    "white_tulip",
    "white_wall_banner",
    "white_wool",
    "wither_rose",
    "wither_skeleton_skull",
    "wither_skeleton_wall_skull",
    "yellow_banner",
    "yellow_bed",
    "yellow_candle",
    "yellow_candle_cake",
    "yellow_carpet",
    "yellow_concrete",
    "yellow_concrete_powder",
    "yellow_glazed_terracotta",
    "yellow_shulker_box",
    "yellow_stained_glass",
    "yellow_stained_glass_pane",
    "yellow_terracotta",
    "yellow_wall_banner",
    "yellow_wool",
    "zombie_head",
    "zombie_wall_head"
  ];
  function isBlock(value) {
    return blockNames.includes(value);
  }

  // src/view/object/id.ts
  function idToText(id3) {
    let capitilize = true;
    return id3.split("").map((letter) => {
      if (capitilize) {
        capitilize = false;
        return letter.toUpperCase();
      }
      if (letter === "_") {
        capitilize = true;
        return " ";
      }
      return letter;
    }).join("");
  }
  var ids = Array.from(/* @__PURE__ */ new Set([...itemNames, ...blockNames]));

  // ../node_modules/d3-dispatch/src/dispatch.js
  var noop = { value: () => {
  } };
  function dispatch() {
    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
      if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
      _[t] = [];
    }
    return new Dispatch(_);
  }
  function Dispatch(_) {
    this._ = _;
  }
  function parseTypenames(typenames, types) {
    return typenames.trim().split(/^|\s+/).map(function(t) {
      var name = "", i = t.indexOf(".");
      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
      if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
      return { type: t, name };
    });
  }
  Dispatch.prototype = dispatch.prototype = {
    constructor: Dispatch,
    on: function(typename, callback) {
      var _ = this._, T = parseTypenames(typename + "", _), t, i = -1, n = T.length;
      if (arguments.length < 2) {
        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
        return;
      }
      if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
      while (++i < n) {
        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);
        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
      }
      return this;
    },
    copy: function() {
      var copy = {}, _ = this._;
      for (var t in _) copy[t] = _[t].slice();
      return new Dispatch(copy);
    },
    call: function(type2, that) {
      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
      if (!this._.hasOwnProperty(type2)) throw new Error("unknown type: " + type2);
      for (t = this._[type2], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
    },
    apply: function(type2, that, args) {
      if (!this._.hasOwnProperty(type2)) throw new Error("unknown type: " + type2);
      for (var t = this._[type2], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
    }
  };
  function get(type2, name) {
    for (var i = 0, n = type2.length, c; i < n; ++i) {
      if ((c = type2[i]).name === name) {
        return c.value;
      }
    }
  }
  function set(type2, name, callback) {
    for (var i = 0, n = type2.length; i < n; ++i) {
      if (type2[i].name === name) {
        type2[i] = noop, type2 = type2.slice(0, i).concat(type2.slice(i + 1));
        break;
      }
    }
    if (callback != null) type2.push({ name, value: callback });
    return type2;
  }
  var dispatch_default = dispatch;

  // ../node_modules/d3-selection/src/namespaces.js
  var xhtml = "http://www.w3.org/1999/xhtml";
  var namespaces_default = {
    svg: "http://www.w3.org/2000/svg",
    xhtml,
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
  };

  // ../node_modules/d3-selection/src/namespace.js
  function namespace_default(name) {
    var prefix = name += "", i = prefix.indexOf(":");
    if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
    return namespaces_default.hasOwnProperty(prefix) ? { space: namespaces_default[prefix], local: name } : name;
  }

  // ../node_modules/d3-selection/src/creator.js
  function creatorInherit(name) {
    return function() {
      var document2 = this.ownerDocument, uri = this.namespaceURI;
      return uri === xhtml && document2.documentElement.namespaceURI === xhtml ? document2.createElement(name) : document2.createElementNS(uri, name);
    };
  }
  function creatorFixed(fullname) {
    return function() {
      return this.ownerDocument.createElementNS(fullname.space, fullname.local);
    };
  }
  function creator_default(name) {
    var fullname = namespace_default(name);
    return (fullname.local ? creatorFixed : creatorInherit)(fullname);
  }

  // ../node_modules/d3-selection/src/selector.js
  function none() {
  }
  function selector_default(selector) {
    return selector == null ? none : function() {
      return this.querySelector(selector);
    };
  }

  // ../node_modules/d3-selection/src/selection/select.js
  function select_default(select) {
    if (typeof select !== "function") select = selector_default(select);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
          if ("__data__" in node) subnode.__data__ = node.__data__;
          subgroup[i] = subnode;
        }
      }
    }
    return new Selection(subgroups, this._parents);
  }

  // ../node_modules/d3-selection/src/array.js
  function array(x2) {
    return x2 == null ? [] : Array.isArray(x2) ? x2 : Array.from(x2);
  }

  // ../node_modules/d3-selection/src/selectorAll.js
  function empty() {
    return [];
  }
  function selectorAll_default(selector) {
    return selector == null ? empty : function() {
      return this.querySelectorAll(selector);
    };
  }

  // ../node_modules/d3-selection/src/selection/selectAll.js
  function arrayAll(select) {
    return function() {
      return array(select.apply(this, arguments));
    };
  }
  function selectAll_default(select) {
    if (typeof select === "function") select = arrayAll(select);
    else select = selectorAll_default(select);
    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
        if (node = group[i]) {
          subgroups.push(select.call(node, node.__data__, i, group));
          parents.push(node);
        }
      }
    }
    return new Selection(subgroups, parents);
  }

  // ../node_modules/d3-selection/src/matcher.js
  function matcher_default(selector) {
    return function() {
      return this.matches(selector);
    };
  }
  function childMatcher(selector) {
    return function(node) {
      return node.matches(selector);
    };
  }

  // ../node_modules/d3-selection/src/selection/selectChild.js
  var find = Array.prototype.find;
  function childFind(match) {
    return function() {
      return find.call(this.children, match);
    };
  }
  function childFirst() {
    return this.firstElementChild;
  }
  function selectChild_default(match) {
    return this.select(match == null ? childFirst : childFind(typeof match === "function" ? match : childMatcher(match)));
  }

  // ../node_modules/d3-selection/src/selection/selectChildren.js
  var filter = Array.prototype.filter;
  function children() {
    return Array.from(this.children);
  }
  function childrenFilter(match) {
    return function() {
      return filter.call(this.children, match);
    };
  }
  function selectChildren_default(match) {
    return this.selectAll(match == null ? children : childrenFilter(typeof match === "function" ? match : childMatcher(match)));
  }

  // ../node_modules/d3-selection/src/selection/filter.js
  function filter_default(match) {
    if (typeof match !== "function") match = matcher_default(match);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
          subgroup.push(node);
        }
      }
    }
    return new Selection(subgroups, this._parents);
  }

  // ../node_modules/d3-selection/src/selection/sparse.js
  function sparse_default(update) {
    return new Array(update.length);
  }

  // ../node_modules/d3-selection/src/selection/enter.js
  function enter_default() {
    return new Selection(this._enter || this._groups.map(sparse_default), this._parents);
  }
  function EnterNode(parent, datum2) {
    this.ownerDocument = parent.ownerDocument;
    this.namespaceURI = parent.namespaceURI;
    this._next = null;
    this._parent = parent;
    this.__data__ = datum2;
  }
  EnterNode.prototype = {
    constructor: EnterNode,
    appendChild: function(child) {
      return this._parent.insertBefore(child, this._next);
    },
    insertBefore: function(child, next) {
      return this._parent.insertBefore(child, next);
    },
    querySelector: function(selector) {
      return this._parent.querySelector(selector);
    },
    querySelectorAll: function(selector) {
      return this._parent.querySelectorAll(selector);
    }
  };

  // ../node_modules/d3-selection/src/constant.js
  function constant_default(x2) {
    return function() {
      return x2;
    };
  }

  // ../node_modules/d3-selection/src/selection/data.js
  function bindIndex(parent, group, enter, update, exit, data) {
    var i = 0, node, groupLength = group.length, dataLength = data.length;
    for (; i < dataLength; ++i) {
      if (node = group[i]) {
        node.__data__ = data[i];
        update[i] = node;
      } else {
        enter[i] = new EnterNode(parent, data[i]);
      }
    }
    for (; i < groupLength; ++i) {
      if (node = group[i]) {
        exit[i] = node;
      }
    }
  }
  function bindKey(parent, group, enter, update, exit, data, key) {
    var i, node, nodeByKeyValue = /* @__PURE__ */ new Map(), groupLength = group.length, dataLength = data.length, keyValues = new Array(groupLength), keyValue;
    for (i = 0; i < groupLength; ++i) {
      if (node = group[i]) {
        keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";
        if (nodeByKeyValue.has(keyValue)) {
          exit[i] = node;
        } else {
          nodeByKeyValue.set(keyValue, node);
        }
      }
    }
    for (i = 0; i < dataLength; ++i) {
      keyValue = key.call(parent, data[i], i, data) + "";
      if (node = nodeByKeyValue.get(keyValue)) {
        update[i] = node;
        node.__data__ = data[i];
        nodeByKeyValue.delete(keyValue);
      } else {
        enter[i] = new EnterNode(parent, data[i]);
      }
    }
    for (i = 0; i < groupLength; ++i) {
      if ((node = group[i]) && nodeByKeyValue.get(keyValues[i]) === node) {
        exit[i] = node;
      }
    }
  }
  function datum(node) {
    return node.__data__;
  }
  function data_default(value, key) {
    if (!arguments.length) return Array.from(this, datum);
    var bind = key ? bindKey : bindIndex, parents = this._parents, groups = this._groups;
    if (typeof value !== "function") value = constant_default(value);
    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
      var parent = parents[j], group = groups[j], groupLength = group.length, data = arraylike(value.call(parent, parent && parent.__data__, j, parents)), dataLength = data.length, enterGroup = enter[j] = new Array(dataLength), updateGroup = update[j] = new Array(dataLength), exitGroup = exit[j] = new Array(groupLength);
      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);
      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
        if (previous = enterGroup[i0]) {
          if (i0 >= i1) i1 = i0 + 1;
          while (!(next = updateGroup[i1]) && ++i1 < dataLength) ;
          previous._next = next || null;
        }
      }
    }
    update = new Selection(update, parents);
    update._enter = enter;
    update._exit = exit;
    return update;
  }
  function arraylike(data) {
    return typeof data === "object" && "length" in data ? data : Array.from(data);
  }

  // ../node_modules/d3-selection/src/selection/exit.js
  function exit_default() {
    return new Selection(this._exit || this._groups.map(sparse_default), this._parents);
  }

  // ../node_modules/d3-selection/src/selection/join.js
  function join_default(onenter, onupdate, onexit) {
    var enter = this.enter(), update = this, exit = this.exit();
    if (typeof onenter === "function") {
      enter = onenter(enter);
      if (enter) enter = enter.selection();
    } else {
      enter = enter.append(onenter + "");
    }
    if (onupdate != null) {
      update = onupdate(update);
      if (update) update = update.selection();
    }
    if (onexit == null) exit.remove();
    else onexit(exit);
    return enter && update ? enter.merge(update).order() : update;
  }

  // ../node_modules/d3-selection/src/selection/merge.js
  function merge_default(context) {
    var selection2 = context.selection ? context.selection() : context;
    for (var groups0 = this._groups, groups1 = selection2._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
        if (node = group0[i] || group1[i]) {
          merge[i] = node;
        }
      }
    }
    for (; j < m0; ++j) {
      merges[j] = groups0[j];
    }
    return new Selection(merges, this._parents);
  }

  // ../node_modules/d3-selection/src/selection/order.js
  function order_default() {
    for (var groups = this._groups, j = -1, m = groups.length; ++j < m; ) {
      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
        if (node = group[i]) {
          if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
          next = node;
        }
      }
    }
    return this;
  }

  // ../node_modules/d3-selection/src/selection/sort.js
  function sort_default(compare) {
    if (!compare) compare = ascending;
    function compareNode(a, b) {
      return a && b ? compare(a.__data__, b.__data__) : !a - !b;
    }
    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
        if (node = group[i]) {
          sortgroup[i] = node;
        }
      }
      sortgroup.sort(compareNode);
    }
    return new Selection(sortgroups, this._parents).order();
  }
  function ascending(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
  }

  // ../node_modules/d3-selection/src/selection/call.js
  function call_default() {
    var callback = arguments[0];
    arguments[0] = this;
    callback.apply(null, arguments);
    return this;
  }

  // ../node_modules/d3-selection/src/selection/nodes.js
  function nodes_default() {
    return Array.from(this);
  }

  // ../node_modules/d3-selection/src/selection/node.js
  function node_default() {
    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
        var node = group[i];
        if (node) return node;
      }
    }
    return null;
  }

  // ../node_modules/d3-selection/src/selection/size.js
  function size_default() {
    let size = 0;
    for (const node of this) ++size;
    return size;
  }

  // ../node_modules/d3-selection/src/selection/empty.js
  function empty_default() {
    return !this.node();
  }

  // ../node_modules/d3-selection/src/selection/each.js
  function each_default(callback) {
    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
        if (node = group[i]) callback.call(node, node.__data__, i, group);
      }
    }
    return this;
  }

  // ../node_modules/d3-selection/src/selection/attr.js
  function attrRemove(name) {
    return function() {
      this.removeAttribute(name);
    };
  }
  function attrRemoveNS(fullname) {
    return function() {
      this.removeAttributeNS(fullname.space, fullname.local);
    };
  }
  function attrConstant(name, value) {
    return function() {
      this.setAttribute(name, value);
    };
  }
  function attrConstantNS(fullname, value) {
    return function() {
      this.setAttributeNS(fullname.space, fullname.local, value);
    };
  }
  function attrFunction(name, value) {
    return function() {
      var v = value.apply(this, arguments);
      if (v == null) this.removeAttribute(name);
      else this.setAttribute(name, v);
    };
  }
  function attrFunctionNS(fullname, value) {
    return function() {
      var v = value.apply(this, arguments);
      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
      else this.setAttributeNS(fullname.space, fullname.local, v);
    };
  }
  function attr_default(name, value) {
    var fullname = namespace_default(name);
    if (arguments.length < 2) {
      var node = this.node();
      return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
    }
    return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
  }

  // ../node_modules/d3-selection/src/window.js
  function window_default(node) {
    return node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView;
  }

  // ../node_modules/d3-selection/src/selection/style.js
  function styleRemove(name) {
    return function() {
      this.style.removeProperty(name);
    };
  }
  function styleConstant(name, value, priority) {
    return function() {
      this.style.setProperty(name, value, priority);
    };
  }
  function styleFunction(name, value, priority) {
    return function() {
      var v = value.apply(this, arguments);
      if (v == null) this.style.removeProperty(name);
      else this.style.setProperty(name, v, priority);
    };
  }
  function style_default(name, value, priority) {
    return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
  }
  function styleValue(node, name) {
    return node.style.getPropertyValue(name) || window_default(node).getComputedStyle(node, null).getPropertyValue(name);
  }

  // ../node_modules/d3-selection/src/selection/property.js
  function propertyRemove(name) {
    return function() {
      delete this[name];
    };
  }
  function propertyConstant(name, value) {
    return function() {
      this[name] = value;
    };
  }
  function propertyFunction(name, value) {
    return function() {
      var v = value.apply(this, arguments);
      if (v == null) delete this[name];
      else this[name] = v;
    };
  }
  function property_default(name, value) {
    return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
  }

  // ../node_modules/d3-selection/src/selection/classed.js
  function classArray(string) {
    return string.trim().split(/^|\s+/);
  }
  function classList(node) {
    return node.classList || new ClassList(node);
  }
  function ClassList(node) {
    this._node = node;
    this._names = classArray(node.getAttribute("class") || "");
  }
  ClassList.prototype = {
    add: function(name) {
      var i = this._names.indexOf(name);
      if (i < 0) {
        this._names.push(name);
        this._node.setAttribute("class", this._names.join(" "));
      }
    },
    remove: function(name) {
      var i = this._names.indexOf(name);
      if (i >= 0) {
        this._names.splice(i, 1);
        this._node.setAttribute("class", this._names.join(" "));
      }
    },
    contains: function(name) {
      return this._names.indexOf(name) >= 0;
    }
  };
  function classedAdd(node, names) {
    var list = classList(node), i = -1, n = names.length;
    while (++i < n) list.add(names[i]);
  }
  function classedRemove(node, names) {
    var list = classList(node), i = -1, n = names.length;
    while (++i < n) list.remove(names[i]);
  }
  function classedTrue(names) {
    return function() {
      classedAdd(this, names);
    };
  }
  function classedFalse(names) {
    return function() {
      classedRemove(this, names);
    };
  }
  function classedFunction(names, value) {
    return function() {
      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
    };
  }
  function classed_default(name, value) {
    var names = classArray(name + "");
    if (arguments.length < 2) {
      var list = classList(this.node()), i = -1, n = names.length;
      while (++i < n) if (!list.contains(names[i])) return false;
      return true;
    }
    return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
  }

  // ../node_modules/d3-selection/src/selection/text.js
  function textRemove() {
    this.textContent = "";
  }
  function textConstant(value) {
    return function() {
      this.textContent = value;
    };
  }
  function textFunction(value) {
    return function() {
      var v = value.apply(this, arguments);
      this.textContent = v == null ? "" : v;
    };
  }
  function text_default(value) {
    return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
  }

  // ../node_modules/d3-selection/src/selection/html.js
  function htmlRemove() {
    this.innerHTML = "";
  }
  function htmlConstant(value) {
    return function() {
      this.innerHTML = value;
    };
  }
  function htmlFunction(value) {
    return function() {
      var v = value.apply(this, arguments);
      this.innerHTML = v == null ? "" : v;
    };
  }
  function html_default(value) {
    return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
  }

  // ../node_modules/d3-selection/src/selection/raise.js
  function raise() {
    if (this.nextSibling) this.parentNode.appendChild(this);
  }
  function raise_default() {
    return this.each(raise);
  }

  // ../node_modules/d3-selection/src/selection/lower.js
  function lower() {
    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
  }
  function lower_default() {
    return this.each(lower);
  }

  // ../node_modules/d3-selection/src/selection/append.js
  function append_default(name) {
    var create2 = typeof name === "function" ? name : creator_default(name);
    return this.select(function() {
      return this.appendChild(create2.apply(this, arguments));
    });
  }

  // ../node_modules/d3-selection/src/selection/insert.js
  function constantNull() {
    return null;
  }
  function insert_default(name, before) {
    var create2 = typeof name === "function" ? name : creator_default(name), select = before == null ? constantNull : typeof before === "function" ? before : selector_default(before);
    return this.select(function() {
      return this.insertBefore(create2.apply(this, arguments), select.apply(this, arguments) || null);
    });
  }

  // ../node_modules/d3-selection/src/selection/remove.js
  function remove() {
    var parent = this.parentNode;
    if (parent) parent.removeChild(this);
  }
  function remove_default() {
    return this.each(remove);
  }

  // ../node_modules/d3-selection/src/selection/clone.js
  function selection_cloneShallow() {
    var clone = this.cloneNode(false), parent = this.parentNode;
    return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
  }
  function selection_cloneDeep() {
    var clone = this.cloneNode(true), parent = this.parentNode;
    return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
  }
  function clone_default(deep) {
    return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
  }

  // ../node_modules/d3-selection/src/selection/datum.js
  function datum_default(value) {
    return arguments.length ? this.property("__data__", value) : this.node().__data__;
  }

  // ../node_modules/d3-selection/src/selection/on.js
  function contextListener(listener) {
    return function(event) {
      listener.call(this, event, this.__data__);
    };
  }
  function parseTypenames2(typenames) {
    return typenames.trim().split(/^|\s+/).map(function(t) {
      var name = "", i = t.indexOf(".");
      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
      return { type: t, name };
    });
  }
  function onRemove(typename) {
    return function() {
      var on = this.__on;
      if (!on) return;
      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
          this.removeEventListener(o.type, o.listener, o.options);
        } else {
          on[++i] = o;
        }
      }
      if (++i) on.length = i;
      else delete this.__on;
    };
  }
  function onAdd(typename, value, options) {
    return function() {
      var on = this.__on, o, listener = contextListener(value);
      if (on) for (var j = 0, m = on.length; j < m; ++j) {
        if ((o = on[j]).type === typename.type && o.name === typename.name) {
          this.removeEventListener(o.type, o.listener, o.options);
          this.addEventListener(o.type, o.listener = listener, o.options = options);
          o.value = value;
          return;
        }
      }
      this.addEventListener(typename.type, listener, options);
      o = { type: typename.type, name: typename.name, value, listener, options };
      if (!on) this.__on = [o];
      else on.push(o);
    };
  }
  function on_default(typename, value, options) {
    var typenames = parseTypenames2(typename + ""), i, n = typenames.length, t;
    if (arguments.length < 2) {
      var on = this.node().__on;
      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
        for (i = 0, o = on[j]; i < n; ++i) {
          if ((t = typenames[i]).type === o.type && t.name === o.name) {
            return o.value;
          }
        }
      }
      return;
    }
    on = value ? onAdd : onRemove;
    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));
    return this;
  }

  // ../node_modules/d3-selection/src/selection/dispatch.js
  function dispatchEvent(node, type2, params) {
    var window2 = window_default(node), event = window2.CustomEvent;
    if (typeof event === "function") {
      event = new event(type2, params);
    } else {
      event = window2.document.createEvent("Event");
      if (params) event.initEvent(type2, params.bubbles, params.cancelable), event.detail = params.detail;
      else event.initEvent(type2, false, false);
    }
    node.dispatchEvent(event);
  }
  function dispatchConstant(type2, params) {
    return function() {
      return dispatchEvent(this, type2, params);
    };
  }
  function dispatchFunction(type2, params) {
    return function() {
      return dispatchEvent(this, type2, params.apply(this, arguments));
    };
  }
  function dispatch_default2(type2, params) {
    return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type2, params));
  }

  // ../node_modules/d3-selection/src/selection/iterator.js
  function* iterator_default() {
    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
        if (node = group[i]) yield node;
      }
    }
  }

  // ../node_modules/d3-selection/src/selection/index.js
  var root = [null];
  function Selection(groups, parents) {
    this._groups = groups;
    this._parents = parents;
  }
  function selection() {
    return new Selection([[document.documentElement]], root);
  }
  function selection_selection() {
    return this;
  }
  Selection.prototype = selection.prototype = {
    constructor: Selection,
    select: select_default,
    selectAll: selectAll_default,
    selectChild: selectChild_default,
    selectChildren: selectChildren_default,
    filter: filter_default,
    data: data_default,
    enter: enter_default,
    exit: exit_default,
    join: join_default,
    merge: merge_default,
    selection: selection_selection,
    order: order_default,
    sort: sort_default,
    call: call_default,
    nodes: nodes_default,
    node: node_default,
    size: size_default,
    empty: empty_default,
    each: each_default,
    attr: attr_default,
    style: style_default,
    property: property_default,
    classed: classed_default,
    text: text_default,
    html: html_default,
    raise: raise_default,
    lower: lower_default,
    append: append_default,
    insert: insert_default,
    remove: remove_default,
    clone: clone_default,
    datum: datum_default,
    on: on_default,
    dispatch: dispatch_default2,
    [Symbol.iterator]: iterator_default
  };
  var selection_default = selection;

  // ../node_modules/d3-selection/src/select.js
  function select_default2(selector) {
    return typeof selector === "string" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root);
  }

  // ../node_modules/d3-selection/src/sourceEvent.js
  function sourceEvent_default(event) {
    let sourceEvent;
    while (sourceEvent = event.sourceEvent) event = sourceEvent;
    return event;
  }

  // ../node_modules/d3-selection/src/pointer.js
  function pointer_default(event, node) {
    event = sourceEvent_default(event);
    if (node === void 0) node = event.currentTarget;
    if (node) {
      var svg = node.ownerSVGElement || node;
      if (svg.createSVGPoint) {
        var point = svg.createSVGPoint();
        point.x = event.clientX, point.y = event.clientY;
        point = point.matrixTransform(node.getScreenCTM().inverse());
        return [point.x, point.y];
      }
      if (node.getBoundingClientRect) {
        var rect = node.getBoundingClientRect();
        return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
      }
    }
    return [event.pageX, event.pageY];
  }

  // ../node_modules/d3-drag/src/noevent.js
  var nonpassivecapture = { capture: true, passive: false };
  function noevent_default(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
  }

  // ../node_modules/d3-drag/src/nodrag.js
  function nodrag_default(view) {
    var root2 = view.document.documentElement, selection2 = select_default2(view).on("dragstart.drag", noevent_default, nonpassivecapture);
    if ("onselectstart" in root2) {
      selection2.on("selectstart.drag", noevent_default, nonpassivecapture);
    } else {
      root2.__noselect = root2.style.MozUserSelect;
      root2.style.MozUserSelect = "none";
    }
  }
  function yesdrag(view, noclick) {
    var root2 = view.document.documentElement, selection2 = select_default2(view).on("dragstart.drag", null);
    if (noclick) {
      selection2.on("click.drag", noevent_default, nonpassivecapture);
      setTimeout(function() {
        selection2.on("click.drag", null);
      }, 0);
    }
    if ("onselectstart" in root2) {
      selection2.on("selectstart.drag", null);
    } else {
      root2.style.MozUserSelect = root2.__noselect;
      delete root2.__noselect;
    }
  }

  // ../node_modules/d3-color/src/define.js
  function define_default(constructor, factory, prototype) {
    constructor.prototype = factory.prototype = prototype;
    prototype.constructor = constructor;
  }
  function extend(parent, definition) {
    var prototype = Object.create(parent.prototype);
    for (var key in definition) prototype[key] = definition[key];
    return prototype;
  }

  // ../node_modules/d3-color/src/color.js
  function Color() {
  }
  var darker = 0.7;
  var brighter = 1 / darker;
  var reI = "\\s*([+-]?\\d+)\\s*";
  var reN = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*";
  var reP = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
  var reHex = /^#([0-9a-f]{3,8})$/;
  var reRgbInteger = new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`);
  var reRgbPercent = new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`);
  var reRgbaInteger = new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`);
  var reRgbaPercent = new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`);
  var reHslPercent = new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`);
  var reHslaPercent = new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);
  var named = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  };
  define_default(Color, color, {
    copy(channels) {
      return Object.assign(new this.constructor(), this, channels);
    },
    displayable() {
      return this.rgb().displayable();
    },
    hex: color_formatHex,
    // Deprecated! Use color.formatHex.
    formatHex: color_formatHex,
    formatHex8: color_formatHex8,
    formatHsl: color_formatHsl,
    formatRgb: color_formatRgb,
    toString: color_formatRgb
  });
  function color_formatHex() {
    return this.rgb().formatHex();
  }
  function color_formatHex8() {
    return this.rgb().formatHex8();
  }
  function color_formatHsl() {
    return hslConvert(this).formatHsl();
  }
  function color_formatRgb() {
    return this.rgb().formatRgb();
  }
  function color(format2) {
    var m, l;
    format2 = (format2 + "").trim().toLowerCase();
    return (m = reHex.exec(format2)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) : l === 3 ? new Rgb(m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, (m & 15) << 4 | m & 15, 1) : l === 8 ? rgba(m >> 24 & 255, m >> 16 & 255, m >> 8 & 255, (m & 255) / 255) : l === 4 ? rgba(m >> 12 & 15 | m >> 8 & 240, m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, ((m & 15) << 4 | m & 15) / 255) : null) : (m = reRgbInteger.exec(format2)) ? new Rgb(m[1], m[2], m[3], 1) : (m = reRgbPercent.exec(format2)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) : (m = reRgbaInteger.exec(format2)) ? rgba(m[1], m[2], m[3], m[4]) : (m = reRgbaPercent.exec(format2)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) : (m = reHslPercent.exec(format2)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) : (m = reHslaPercent.exec(format2)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) : named.hasOwnProperty(format2) ? rgbn(named[format2]) : format2 === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
  }
  function rgbn(n) {
    return new Rgb(n >> 16 & 255, n >> 8 & 255, n & 255, 1);
  }
  function rgba(r, g, b, a) {
    if (a <= 0) r = g = b = NaN;
    return new Rgb(r, g, b, a);
  }
  function rgbConvert(o) {
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Rgb();
    o = o.rgb();
    return new Rgb(o.r, o.g, o.b, o.opacity);
  }
  function rgb(r, g, b, opacity) {
    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
  }
  function Rgb(r, g, b, opacity) {
    this.r = +r;
    this.g = +g;
    this.b = +b;
    this.opacity = +opacity;
  }
  define_default(Rgb, rgb, extend(Color, {
    brighter(k) {
      k = k == null ? brighter : Math.pow(brighter, k);
      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    darker(k) {
      k = k == null ? darker : Math.pow(darker, k);
      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    rgb() {
      return this;
    },
    clamp() {
      return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
    },
    displayable() {
      return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
    },
    hex: rgb_formatHex,
    // Deprecated! Use color.formatHex.
    formatHex: rgb_formatHex,
    formatHex8: rgb_formatHex8,
    formatRgb: rgb_formatRgb,
    toString: rgb_formatRgb
  }));
  function rgb_formatHex() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;
  }
  function rgb_formatHex8() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
  }
  function rgb_formatRgb() {
    const a = clampa(this.opacity);
    return `${a === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? ")" : `, ${a})`}`;
  }
  function clampa(opacity) {
    return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));
  }
  function clampi(value) {
    return Math.max(0, Math.min(255, Math.round(value) || 0));
  }
  function hex(value) {
    value = clampi(value);
    return (value < 16 ? "0" : "") + value.toString(16);
  }
  function hsla(h, s, l, a) {
    if (a <= 0) h = s = l = NaN;
    else if (l <= 0 || l >= 1) h = s = NaN;
    else if (s <= 0) h = NaN;
    return new Hsl(h, s, l, a);
  }
  function hslConvert(o) {
    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Hsl();
    if (o instanceof Hsl) return o;
    o = o.rgb();
    var r = o.r / 255, g = o.g / 255, b = o.b / 255, min2 = Math.min(r, g, b), max2 = Math.max(r, g, b), h = NaN, s = max2 - min2, l = (max2 + min2) / 2;
    if (s) {
      if (r === max2) h = (g - b) / s + (g < b) * 6;
      else if (g === max2) h = (b - r) / s + 2;
      else h = (r - g) / s + 4;
      s /= l < 0.5 ? max2 + min2 : 2 - max2 - min2;
      h *= 60;
    } else {
      s = l > 0 && l < 1 ? 0 : h;
    }
    return new Hsl(h, s, l, o.opacity);
  }
  function hsl(h, s, l, opacity) {
    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
  }
  function Hsl(h, s, l, opacity) {
    this.h = +h;
    this.s = +s;
    this.l = +l;
    this.opacity = +opacity;
  }
  define_default(Hsl, hsl, extend(Color, {
    brighter(k) {
      k = k == null ? brighter : Math.pow(brighter, k);
      return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    darker(k) {
      k = k == null ? darker : Math.pow(darker, k);
      return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    rgb() {
      var h = this.h % 360 + (this.h < 0) * 360, s = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s, m1 = 2 * l - m2;
      return new Rgb(
        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
        hsl2rgb(h, m1, m2),
        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
        this.opacity
      );
    },
    clamp() {
      return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
    },
    displayable() {
      return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
    },
    formatHsl() {
      const a = clampa(this.opacity);
      return `${a === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? ")" : `, ${a})`}`;
    }
  }));
  function clamph(value) {
    value = (value || 0) % 360;
    return value < 0 ? value + 360 : value;
  }
  function clampt(value) {
    return Math.max(0, Math.min(1, value || 0));
  }
  function hsl2rgb(h, m1, m2) {
    return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
  }

  // ../node_modules/d3-interpolate/src/basis.js
  function basis(t1, v0, v1, v2, v3) {
    var t2 = t1 * t1, t3 = t2 * t1;
    return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
  }
  function basis_default(values) {
    var n = values.length - 1;
    return function(t) {
      var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n), v1 = values[i], v2 = values[i + 1], v0 = i > 0 ? values[i - 1] : 2 * v1 - v2, v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
      return basis((t - i / n) * n, v0, v1, v2, v3);
    };
  }

  // ../node_modules/d3-interpolate/src/basisClosed.js
  function basisClosed_default(values) {
    var n = values.length;
    return function(t) {
      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n), v0 = values[(i + n - 1) % n], v1 = values[i % n], v2 = values[(i + 1) % n], v3 = values[(i + 2) % n];
      return basis((t - i / n) * n, v0, v1, v2, v3);
    };
  }

  // ../node_modules/d3-interpolate/src/constant.js
  var constant_default2 = (x2) => () => x2;

  // ../node_modules/d3-interpolate/src/color.js
  function linear(a, d) {
    return function(t) {
      return a + t * d;
    };
  }
  function exponential(a, b, y2) {
    return a = Math.pow(a, y2), b = Math.pow(b, y2) - a, y2 = 1 / y2, function(t) {
      return Math.pow(a + t * b, y2);
    };
  }
  function gamma(y2) {
    return (y2 = +y2) === 1 ? nogamma : function(a, b) {
      return b - a ? exponential(a, b, y2) : constant_default2(isNaN(a) ? b : a);
    };
  }
  function nogamma(a, b) {
    var d = b - a;
    return d ? linear(a, d) : constant_default2(isNaN(a) ? b : a);
  }

  // ../node_modules/d3-interpolate/src/rgb.js
  var rgb_default = function rgbGamma(y2) {
    var color2 = gamma(y2);
    function rgb2(start2, end) {
      var r = color2((start2 = rgb(start2)).r, (end = rgb(end)).r), g = color2(start2.g, end.g), b = color2(start2.b, end.b), opacity = nogamma(start2.opacity, end.opacity);
      return function(t) {
        start2.r = r(t);
        start2.g = g(t);
        start2.b = b(t);
        start2.opacity = opacity(t);
        return start2 + "";
      };
    }
    rgb2.gamma = rgbGamma;
    return rgb2;
  }(1);
  function rgbSpline(spline) {
    return function(colors) {
      var n = colors.length, r = new Array(n), g = new Array(n), b = new Array(n), i, color2;
      for (i = 0; i < n; ++i) {
        color2 = rgb(colors[i]);
        r[i] = color2.r || 0;
        g[i] = color2.g || 0;
        b[i] = color2.b || 0;
      }
      r = spline(r);
      g = spline(g);
      b = spline(b);
      color2.opacity = 1;
      return function(t) {
        color2.r = r(t);
        color2.g = g(t);
        color2.b = b(t);
        return color2 + "";
      };
    };
  }
  var rgbBasis = rgbSpline(basis_default);
  var rgbBasisClosed = rgbSpline(basisClosed_default);

  // ../node_modules/d3-interpolate/src/number.js
  function number_default(a, b) {
    return a = +a, b = +b, function(t) {
      return a * (1 - t) + b * t;
    };
  }

  // ../node_modules/d3-interpolate/src/string.js
  var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
  var reB = new RegExp(reA.source, "g");
  function zero(b) {
    return function() {
      return b;
    };
  }
  function one(b) {
    return function(t) {
      return b(t) + "";
    };
  }
  function string_default(a, b) {
    var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
    a = a + "", b = b + "";
    while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
      if ((bs = bm.index) > bi) {
        bs = b.slice(bi, bs);
        if (s[i]) s[i] += bs;
        else s[++i] = bs;
      }
      if ((am = am[0]) === (bm = bm[0])) {
        if (s[i]) s[i] += bm;
        else s[++i] = bm;
      } else {
        s[++i] = null;
        q.push({ i, x: number_default(am, bm) });
      }
      bi = reB.lastIndex;
    }
    if (bi < b.length) {
      bs = b.slice(bi);
      if (s[i]) s[i] += bs;
      else s[++i] = bs;
    }
    return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function(t) {
      for (var i2 = 0, o; i2 < b; ++i2) s[(o = q[i2]).i] = o.x(t);
      return s.join("");
    });
  }

  // ../node_modules/d3-interpolate/src/transform/decompose.js
  var degrees = 180 / Math.PI;
  var identity = {
    translateX: 0,
    translateY: 0,
    rotate: 0,
    skewX: 0,
    scaleX: 1,
    scaleY: 1
  };
  function decompose_default(a, b, c, d, e, f) {
    var scaleX, scaleY, skewX;
    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
    return {
      translateX: e,
      translateY: f,
      rotate: Math.atan2(b, a) * degrees,
      skewX: Math.atan(skewX) * degrees,
      scaleX,
      scaleY
    };
  }

  // ../node_modules/d3-interpolate/src/transform/parse.js
  var svgNode;
  function parseCss(value) {
    const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
    return m.isIdentity ? identity : decompose_default(m.a, m.b, m.c, m.d, m.e, m.f);
  }
  function parseSvg(value) {
    if (value == null) return identity;
    if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
    svgNode.setAttribute("transform", value);
    if (!(value = svgNode.transform.baseVal.consolidate())) return identity;
    value = value.matrix;
    return decompose_default(value.a, value.b, value.c, value.d, value.e, value.f);
  }

  // ../node_modules/d3-interpolate/src/transform/index.js
  function interpolateTransform(parse2, pxComma, pxParen, degParen) {
    function pop(s) {
      return s.length ? s.pop() + " " : "";
    }
    function translate(xa, ya, xb, yb, s, q) {
      if (xa !== xb || ya !== yb) {
        var i = s.push("translate(", null, pxComma, null, pxParen);
        q.push({ i: i - 4, x: number_default(xa, xb) }, { i: i - 2, x: number_default(ya, yb) });
      } else if (xb || yb) {
        s.push("translate(" + xb + pxComma + yb + pxParen);
      }
    }
    function rotate(a, b, s, q) {
      if (a !== b) {
        if (a - b > 180) b += 360;
        else if (b - a > 180) a += 360;
        q.push({ i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: number_default(a, b) });
      } else if (b) {
        s.push(pop(s) + "rotate(" + b + degParen);
      }
    }
    function skewX(a, b, s, q) {
      if (a !== b) {
        q.push({ i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: number_default(a, b) });
      } else if (b) {
        s.push(pop(s) + "skewX(" + b + degParen);
      }
    }
    function scale(xa, ya, xb, yb, s, q) {
      if (xa !== xb || ya !== yb) {
        var i = s.push(pop(s) + "scale(", null, ",", null, ")");
        q.push({ i: i - 4, x: number_default(xa, xb) }, { i: i - 2, x: number_default(ya, yb) });
      } else if (xb !== 1 || yb !== 1) {
        s.push(pop(s) + "scale(" + xb + "," + yb + ")");
      }
    }
    return function(a, b) {
      var s = [], q = [];
      a = parse2(a), b = parse2(b);
      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
      rotate(a.rotate, b.rotate, s, q);
      skewX(a.skewX, b.skewX, s, q);
      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
      a = b = null;
      return function(t) {
        var i = -1, n = q.length, o;
        while (++i < n) s[(o = q[i]).i] = o.x(t);
        return s.join("");
      };
    };
  }
  var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
  var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");

  // ../node_modules/d3-interpolate/src/zoom.js
  var epsilon2 = 1e-12;
  function cosh(x2) {
    return ((x2 = Math.exp(x2)) + 1 / x2) / 2;
  }
  function sinh(x2) {
    return ((x2 = Math.exp(x2)) - 1 / x2) / 2;
  }
  function tanh(x2) {
    return ((x2 = Math.exp(2 * x2)) - 1) / (x2 + 1);
  }
  var zoom_default = function zoomRho(rho, rho2, rho4) {
    function zoom(p0, p1) {
      var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
      if (d2 < epsilon2) {
        S = Math.log(w1 / w0) / rho;
        i = function(t) {
          return [
            ux0 + t * dx,
            uy0 + t * dy,
            w0 * Math.exp(rho * t * S)
          ];
        };
      } else {
        var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
        S = (r1 - r0) / rho;
        i = function(t) {
          var s = t * S, coshr0 = cosh(r0), u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
          return [
            ux0 + u * dx,
            uy0 + u * dy,
            w0 * coshr0 / cosh(rho * s + r0)
          ];
        };
      }
      i.duration = S * 1e3 * rho / Math.SQRT2;
      return i;
    }
    zoom.rho = function(_) {
      var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
      return zoomRho(_1, _2, _4);
    };
    return zoom;
  }(Math.SQRT2, 2, 4);

  // ../node_modules/d3-timer/src/timer.js
  var frame = 0;
  var timeout = 0;
  var interval = 0;
  var pokeDelay = 1e3;
  var taskHead;
  var taskTail;
  var clockLast = 0;
  var clockNow = 0;
  var clockSkew = 0;
  var clock = typeof performance === "object" && performance.now ? performance : Date;
  var setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) {
    setTimeout(f, 17);
  };
  function now() {
    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
  }
  function clearNow() {
    clockNow = 0;
  }
  function Timer() {
    this._call = this._time = this._next = null;
  }
  Timer.prototype = timer.prototype = {
    constructor: Timer,
    restart: function(callback, delay, time) {
      if (typeof callback !== "function") throw new TypeError("callback is not a function");
      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
      if (!this._next && taskTail !== this) {
        if (taskTail) taskTail._next = this;
        else taskHead = this;
        taskTail = this;
      }
      this._call = callback;
      this._time = time;
      sleep();
    },
    stop: function() {
      if (this._call) {
        this._call = null;
        this._time = Infinity;
        sleep();
      }
    }
  };
  function timer(callback, delay, time) {
    var t = new Timer();
    t.restart(callback, delay, time);
    return t;
  }
  function timerFlush() {
    now();
    ++frame;
    var t = taskHead, e;
    while (t) {
      if ((e = clockNow - t._time) >= 0) t._call.call(void 0, e);
      t = t._next;
    }
    --frame;
  }
  function wake() {
    clockNow = (clockLast = clock.now()) + clockSkew;
    frame = timeout = 0;
    try {
      timerFlush();
    } finally {
      frame = 0;
      nap();
      clockNow = 0;
    }
  }
  function poke() {
    var now2 = clock.now(), delay = now2 - clockLast;
    if (delay > pokeDelay) clockSkew -= delay, clockLast = now2;
  }
  function nap() {
    var t0, t1 = taskHead, t2, time = Infinity;
    while (t1) {
      if (t1._call) {
        if (time > t1._time) time = t1._time;
        t0 = t1, t1 = t1._next;
      } else {
        t2 = t1._next, t1._next = null;
        t1 = t0 ? t0._next = t2 : taskHead = t2;
      }
    }
    taskTail = t0;
    sleep(time);
  }
  function sleep(time) {
    if (frame) return;
    if (timeout) timeout = clearTimeout(timeout);
    var delay = time - clockNow;
    if (delay > 24) {
      if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
      if (interval) interval = clearInterval(interval);
    } else {
      if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
      frame = 1, setFrame(wake);
    }
  }

  // ../node_modules/d3-timer/src/timeout.js
  function timeout_default(callback, delay, time) {
    var t = new Timer();
    delay = delay == null ? 0 : +delay;
    t.restart((elapsed) => {
      t.stop();
      callback(elapsed + delay);
    }, delay, time);
    return t;
  }

  // ../node_modules/d3-transition/src/transition/schedule.js
  var emptyOn = dispatch_default("start", "end", "cancel", "interrupt");
  var emptyTween = [];
  var CREATED = 0;
  var SCHEDULED = 1;
  var STARTING = 2;
  var STARTED = 3;
  var RUNNING = 4;
  var ENDING = 5;
  var ENDED = 6;
  function schedule_default(node, name, id3, index, group, timing) {
    var schedules = node.__transition;
    if (!schedules) node.__transition = {};
    else if (id3 in schedules) return;
    create(node, id3, {
      name,
      index,
      // For context during callback.
      group,
      // For context during callback.
      on: emptyOn,
      tween: emptyTween,
      time: timing.time,
      delay: timing.delay,
      duration: timing.duration,
      ease: timing.ease,
      timer: null,
      state: CREATED
    });
  }
  function init(node, id3) {
    var schedule = get2(node, id3);
    if (schedule.state > CREATED) throw new Error("too late; already scheduled");
    return schedule;
  }
  function set2(node, id3) {
    var schedule = get2(node, id3);
    if (schedule.state > STARTED) throw new Error("too late; already running");
    return schedule;
  }
  function get2(node, id3) {
    var schedule = node.__transition;
    if (!schedule || !(schedule = schedule[id3])) throw new Error("transition not found");
    return schedule;
  }
  function create(node, id3, self) {
    var schedules = node.__transition, tween;
    schedules[id3] = self;
    self.timer = timer(schedule, 0, self.time);
    function schedule(elapsed) {
      self.state = SCHEDULED;
      self.timer.restart(start2, self.delay, self.time);
      if (self.delay <= elapsed) start2(elapsed - self.delay);
    }
    function start2(elapsed) {
      var i, j, n, o;
      if (self.state !== SCHEDULED) return stop();
      for (i in schedules) {
        o = schedules[i];
        if (o.name !== self.name) continue;
        if (o.state === STARTED) return timeout_default(start2);
        if (o.state === RUNNING) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("interrupt", node, node.__data__, o.index, o.group);
          delete schedules[i];
        } else if (+i < id3) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node, node.__data__, o.index, o.group);
          delete schedules[i];
        }
      }
      timeout_default(function() {
        if (self.state === STARTED) {
          self.state = RUNNING;
          self.timer.restart(tick, self.delay, self.time);
          tick(elapsed);
        }
      });
      self.state = STARTING;
      self.on.call("start", node, node.__data__, self.index, self.group);
      if (self.state !== STARTING) return;
      self.state = STARTED;
      tween = new Array(n = self.tween.length);
      for (i = 0, j = -1; i < n; ++i) {
        if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
          tween[++j] = o;
        }
      }
      tween.length = j + 1;
    }
    function tick(elapsed) {
      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1), i = -1, n = tween.length;
      while (++i < n) {
        tween[i].call(node, t);
      }
      if (self.state === ENDING) {
        self.on.call("end", node, node.__data__, self.index, self.group);
        stop();
      }
    }
    function stop() {
      self.state = ENDED;
      self.timer.stop();
      delete schedules[id3];
      for (var i in schedules) return;
      delete node.__transition;
    }
  }

  // ../node_modules/d3-transition/src/interrupt.js
  function interrupt_default(node, name) {
    var schedules = node.__transition, schedule, active, empty2 = true, i;
    if (!schedules) return;
    name = name == null ? null : name + "";
    for (i in schedules) {
      if ((schedule = schedules[i]).name !== name) {
        empty2 = false;
        continue;
      }
      active = schedule.state > STARTING && schedule.state < ENDING;
      schedule.state = ENDED;
      schedule.timer.stop();
      schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
      delete schedules[i];
    }
    if (empty2) delete node.__transition;
  }

  // ../node_modules/d3-transition/src/selection/interrupt.js
  function interrupt_default2(name) {
    return this.each(function() {
      interrupt_default(this, name);
    });
  }

  // ../node_modules/d3-transition/src/transition/tween.js
  function tweenRemove(id3, name) {
    var tween0, tween1;
    return function() {
      var schedule = set2(this, id3), tween = schedule.tween;
      if (tween !== tween0) {
        tween1 = tween0 = tween;
        for (var i = 0, n = tween1.length; i < n; ++i) {
          if (tween1[i].name === name) {
            tween1 = tween1.slice();
            tween1.splice(i, 1);
            break;
          }
        }
      }
      schedule.tween = tween1;
    };
  }
  function tweenFunction(id3, name, value) {
    var tween0, tween1;
    if (typeof value !== "function") throw new Error();
    return function() {
      var schedule = set2(this, id3), tween = schedule.tween;
      if (tween !== tween0) {
        tween1 = (tween0 = tween).slice();
        for (var t = { name, value }, i = 0, n = tween1.length; i < n; ++i) {
          if (tween1[i].name === name) {
            tween1[i] = t;
            break;
          }
        }
        if (i === n) tween1.push(t);
      }
      schedule.tween = tween1;
    };
  }
  function tween_default(name, value) {
    var id3 = this._id;
    name += "";
    if (arguments.length < 2) {
      var tween = get2(this.node(), id3).tween;
      for (var i = 0, n = tween.length, t; i < n; ++i) {
        if ((t = tween[i]).name === name) {
          return t.value;
        }
      }
      return null;
    }
    return this.each((value == null ? tweenRemove : tweenFunction)(id3, name, value));
  }
  function tweenValue(transition2, name, value) {
    var id3 = transition2._id;
    transition2.each(function() {
      var schedule = set2(this, id3);
      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
    });
    return function(node) {
      return get2(node, id3).value[name];
    };
  }

  // ../node_modules/d3-transition/src/transition/interpolate.js
  function interpolate_default(a, b) {
    var c;
    return (typeof b === "number" ? number_default : b instanceof color ? rgb_default : (c = color(b)) ? (b = c, rgb_default) : string_default)(a, b);
  }

  // ../node_modules/d3-transition/src/transition/attr.js
  function attrRemove2(name) {
    return function() {
      this.removeAttribute(name);
    };
  }
  function attrRemoveNS2(fullname) {
    return function() {
      this.removeAttributeNS(fullname.space, fullname.local);
    };
  }
  function attrConstant2(name, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
      var string0 = this.getAttribute(name);
      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
  }
  function attrConstantNS2(fullname, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
      var string0 = this.getAttributeNS(fullname.space, fullname.local);
      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
  }
  function attrFunction2(name, interpolate, value) {
    var string00, string10, interpolate0;
    return function() {
      var string0, value1 = value(this), string1;
      if (value1 == null) return void this.removeAttribute(name);
      string0 = this.getAttribute(name);
      string1 = value1 + "";
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
  }
  function attrFunctionNS2(fullname, interpolate, value) {
    var string00, string10, interpolate0;
    return function() {
      var string0, value1 = value(this), string1;
      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
      string0 = this.getAttributeNS(fullname.space, fullname.local);
      string1 = value1 + "";
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
  }
  function attr_default2(name, value) {
    var fullname = namespace_default(name), i = fullname === "transform" ? interpolateTransformSvg : interpolate_default;
    return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS2 : attrFunction2)(fullname, i, tweenValue(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS2 : attrRemove2)(fullname) : (fullname.local ? attrConstantNS2 : attrConstant2)(fullname, i, value));
  }

  // ../node_modules/d3-transition/src/transition/attrTween.js
  function attrInterpolate(name, i) {
    return function(t) {
      this.setAttribute(name, i.call(this, t));
    };
  }
  function attrInterpolateNS(fullname, i) {
    return function(t) {
      this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
    };
  }
  function attrTweenNS(fullname, value) {
    var t0, i0;
    function tween() {
      var i = value.apply(this, arguments);
      if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
      return t0;
    }
    tween._value = value;
    return tween;
  }
  function attrTween(name, value) {
    var t0, i0;
    function tween() {
      var i = value.apply(this, arguments);
      if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
      return t0;
    }
    tween._value = value;
    return tween;
  }
  function attrTween_default(name, value) {
    var key = "attr." + name;
    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
    if (value == null) return this.tween(key, null);
    if (typeof value !== "function") throw new Error();
    var fullname = namespace_default(name);
    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
  }

  // ../node_modules/d3-transition/src/transition/delay.js
  function delayFunction(id3, value) {
    return function() {
      init(this, id3).delay = +value.apply(this, arguments);
    };
  }
  function delayConstant(id3, value) {
    return value = +value, function() {
      init(this, id3).delay = value;
    };
  }
  function delay_default(value) {
    var id3 = this._id;
    return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id3, value)) : get2(this.node(), id3).delay;
  }

  // ../node_modules/d3-transition/src/transition/duration.js
  function durationFunction(id3, value) {
    return function() {
      set2(this, id3).duration = +value.apply(this, arguments);
    };
  }
  function durationConstant(id3, value) {
    return value = +value, function() {
      set2(this, id3).duration = value;
    };
  }
  function duration_default(value) {
    var id3 = this._id;
    return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id3, value)) : get2(this.node(), id3).duration;
  }

  // ../node_modules/d3-transition/src/transition/ease.js
  function easeConstant(id3, value) {
    if (typeof value !== "function") throw new Error();
    return function() {
      set2(this, id3).ease = value;
    };
  }
  function ease_default(value) {
    var id3 = this._id;
    return arguments.length ? this.each(easeConstant(id3, value)) : get2(this.node(), id3).ease;
  }

  // ../node_modules/d3-transition/src/transition/easeVarying.js
  function easeVarying(id3, value) {
    return function() {
      var v = value.apply(this, arguments);
      if (typeof v !== "function") throw new Error();
      set2(this, id3).ease = v;
    };
  }
  function easeVarying_default(value) {
    if (typeof value !== "function") throw new Error();
    return this.each(easeVarying(this._id, value));
  }

  // ../node_modules/d3-transition/src/transition/filter.js
  function filter_default2(match) {
    if (typeof match !== "function") match = matcher_default(match);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
          subgroup.push(node);
        }
      }
    }
    return new Transition(subgroups, this._parents, this._name, this._id);
  }

  // ../node_modules/d3-transition/src/transition/merge.js
  function merge_default2(transition2) {
    if (transition2._id !== this._id) throw new Error();
    for (var groups0 = this._groups, groups1 = transition2._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
        if (node = group0[i] || group1[i]) {
          merge[i] = node;
        }
      }
    }
    for (; j < m0; ++j) {
      merges[j] = groups0[j];
    }
    return new Transition(merges, this._parents, this._name, this._id);
  }

  // ../node_modules/d3-transition/src/transition/on.js
  function start(name) {
    return (name + "").trim().split(/^|\s+/).every(function(t) {
      var i = t.indexOf(".");
      if (i >= 0) t = t.slice(0, i);
      return !t || t === "start";
    });
  }
  function onFunction(id3, name, listener) {
    var on0, on1, sit = start(name) ? init : set2;
    return function() {
      var schedule = sit(this, id3), on = schedule.on;
      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
      schedule.on = on1;
    };
  }
  function on_default2(name, listener) {
    var id3 = this._id;
    return arguments.length < 2 ? get2(this.node(), id3).on.on(name) : this.each(onFunction(id3, name, listener));
  }

  // ../node_modules/d3-transition/src/transition/remove.js
  function removeFunction(id3) {
    return function() {
      var parent = this.parentNode;
      for (var i in this.__transition) if (+i !== id3) return;
      if (parent) parent.removeChild(this);
    };
  }
  function remove_default2() {
    return this.on("end.remove", removeFunction(this._id));
  }

  // ../node_modules/d3-transition/src/transition/select.js
  function select_default3(select) {
    var name = this._name, id3 = this._id;
    if (typeof select !== "function") select = selector_default(select);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
          if ("__data__" in node) subnode.__data__ = node.__data__;
          subgroup[i] = subnode;
          schedule_default(subgroup[i], name, id3, i, subgroup, get2(node, id3));
        }
      }
    }
    return new Transition(subgroups, this._parents, name, id3);
  }

  // ../node_modules/d3-transition/src/transition/selectAll.js
  function selectAll_default2(select) {
    var name = this._name, id3 = this._id;
    if (typeof select !== "function") select = selectorAll_default(select);
    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
        if (node = group[i]) {
          for (var children2 = select.call(node, node.__data__, i, group), child, inherit2 = get2(node, id3), k = 0, l = children2.length; k < l; ++k) {
            if (child = children2[k]) {
              schedule_default(child, name, id3, k, children2, inherit2);
            }
          }
          subgroups.push(children2);
          parents.push(node);
        }
      }
    }
    return new Transition(subgroups, parents, name, id3);
  }

  // ../node_modules/d3-transition/src/transition/selection.js
  var Selection2 = selection_default.prototype.constructor;
  function selection_default2() {
    return new Selection2(this._groups, this._parents);
  }

  // ../node_modules/d3-transition/src/transition/style.js
  function styleNull(name, interpolate) {
    var string00, string10, interpolate0;
    return function() {
      var string0 = styleValue(this, name), string1 = (this.style.removeProperty(name), styleValue(this, name));
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
    };
  }
  function styleRemove2(name) {
    return function() {
      this.style.removeProperty(name);
    };
  }
  function styleConstant2(name, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
      var string0 = styleValue(this, name);
      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
  }
  function styleFunction2(name, interpolate, value) {
    var string00, string10, interpolate0;
    return function() {
      var string0 = styleValue(this, name), value1 = value(this), string1 = value1 + "";
      if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
  }
  function styleMaybeRemove(id3, name) {
    var on0, on1, listener0, key = "style." + name, event = "end." + key, remove2;
    return function() {
      var schedule = set2(this, id3), on = schedule.on, listener = schedule.value[key] == null ? remove2 || (remove2 = styleRemove2(name)) : void 0;
      if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
      schedule.on = on1;
    };
  }
  function style_default2(name, value, priority) {
    var i = (name += "") === "transform" ? interpolateTransformCss : interpolate_default;
    return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove2(name)) : typeof value === "function" ? this.styleTween(name, styleFunction2(name, i, tweenValue(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant2(name, i, value), priority).on("end.style." + name, null);
  }

  // ../node_modules/d3-transition/src/transition/styleTween.js
  function styleInterpolate(name, i, priority) {
    return function(t) {
      this.style.setProperty(name, i.call(this, t), priority);
    };
  }
  function styleTween(name, value, priority) {
    var t, i0;
    function tween() {
      var i = value.apply(this, arguments);
      if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
      return t;
    }
    tween._value = value;
    return tween;
  }
  function styleTween_default(name, value, priority) {
    var key = "style." + (name += "");
    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
    if (value == null) return this.tween(key, null);
    if (typeof value !== "function") throw new Error();
    return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
  }

  // ../node_modules/d3-transition/src/transition/text.js
  function textConstant2(value) {
    return function() {
      this.textContent = value;
    };
  }
  function textFunction2(value) {
    return function() {
      var value1 = value(this);
      this.textContent = value1 == null ? "" : value1;
    };
  }
  function text_default2(value) {
    return this.tween("text", typeof value === "function" ? textFunction2(tweenValue(this, "text", value)) : textConstant2(value == null ? "" : value + ""));
  }

  // ../node_modules/d3-transition/src/transition/textTween.js
  function textInterpolate(i) {
    return function(t) {
      this.textContent = i.call(this, t);
    };
  }
  function textTween(value) {
    var t0, i0;
    function tween() {
      var i = value.apply(this, arguments);
      if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
      return t0;
    }
    tween._value = value;
    return tween;
  }
  function textTween_default(value) {
    var key = "text";
    if (arguments.length < 1) return (key = this.tween(key)) && key._value;
    if (value == null) return this.tween(key, null);
    if (typeof value !== "function") throw new Error();
    return this.tween(key, textTween(value));
  }

  // ../node_modules/d3-transition/src/transition/transition.js
  function transition_default() {
    var name = this._name, id0 = this._id, id1 = newId();
    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
        if (node = group[i]) {
          var inherit2 = get2(node, id0);
          schedule_default(node, name, id1, i, group, {
            time: inherit2.time + inherit2.delay + inherit2.duration,
            delay: 0,
            duration: inherit2.duration,
            ease: inherit2.ease
          });
        }
      }
    }
    return new Transition(groups, this._parents, name, id1);
  }

  // ../node_modules/d3-transition/src/transition/end.js
  function end_default() {
    var on0, on1, that = this, id3 = that._id, size = that.size();
    return new Promise(function(resolve, reject) {
      var cancel = { value: reject }, end = { value: function() {
        if (--size === 0) resolve();
      } };
      that.each(function() {
        var schedule = set2(this, id3), on = schedule.on;
        if (on !== on0) {
          on1 = (on0 = on).copy();
          on1._.cancel.push(cancel);
          on1._.interrupt.push(cancel);
          on1._.end.push(end);
        }
        schedule.on = on1;
      });
      if (size === 0) resolve();
    });
  }

  // ../node_modules/d3-transition/src/transition/index.js
  var id = 0;
  function Transition(groups, parents, name, id3) {
    this._groups = groups;
    this._parents = parents;
    this._name = name;
    this._id = id3;
  }
  function transition(name) {
    return selection_default().transition(name);
  }
  function newId() {
    return ++id;
  }
  var selection_prototype = selection_default.prototype;
  Transition.prototype = transition.prototype = {
    constructor: Transition,
    select: select_default3,
    selectAll: selectAll_default2,
    selectChild: selection_prototype.selectChild,
    selectChildren: selection_prototype.selectChildren,
    filter: filter_default2,
    merge: merge_default2,
    selection: selection_default2,
    transition: transition_default,
    call: selection_prototype.call,
    nodes: selection_prototype.nodes,
    node: selection_prototype.node,
    size: selection_prototype.size,
    empty: selection_prototype.empty,
    each: selection_prototype.each,
    on: on_default2,
    attr: attr_default2,
    attrTween: attrTween_default,
    style: style_default2,
    styleTween: styleTween_default,
    text: text_default2,
    textTween: textTween_default,
    remove: remove_default2,
    tween: tween_default,
    delay: delay_default,
    duration: duration_default,
    ease: ease_default,
    easeVarying: easeVarying_default,
    end: end_default,
    [Symbol.iterator]: selection_prototype[Symbol.iterator]
  };

  // ../node_modules/d3-ease/src/cubic.js
  function cubicInOut(t) {
    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
  }

  // ../node_modules/d3-transition/src/selection/transition.js
  var defaultTiming = {
    time: null,
    // Set on use.
    delay: 0,
    duration: 250,
    ease: cubicInOut
  };
  function inherit(node, id3) {
    var timing;
    while (!(timing = node.__transition) || !(timing = timing[id3])) {
      if (!(node = node.parentNode)) {
        throw new Error(`transition ${id3} not found`);
      }
    }
    return timing;
  }
  function transition_default2(name) {
    var id3, timing;
    if (name instanceof Transition) {
      id3 = name._id, name = name._name;
    } else {
      id3 = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";
    }
    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
        if (node = group[i]) {
          schedule_default(node, name, id3, i, group, timing || inherit(node, id3));
        }
      }
    }
    return new Transition(groups, this._parents, name, id3);
  }

  // ../node_modules/d3-transition/src/selection/index.js
  selection_default.prototype.interrupt = interrupt_default2;
  selection_default.prototype.transition = transition_default2;

  // ../node_modules/d3-brush/src/brush.js
  var { abs, max, min } = Math;
  function number1(e) {
    return [+e[0], +e[1]];
  }
  function number2(e) {
    return [number1(e[0]), number1(e[1])];
  }
  var X = {
    name: "x",
    handles: ["w", "e"].map(type),
    input: function(x2, e) {
      return x2 == null ? null : [[+x2[0], e[0][1]], [+x2[1], e[1][1]]];
    },
    output: function(xy) {
      return xy && [xy[0][0], xy[1][0]];
    }
  };
  var Y = {
    name: "y",
    handles: ["n", "s"].map(type),
    input: function(y2, e) {
      return y2 == null ? null : [[e[0][0], +y2[0]], [e[1][0], +y2[1]]];
    },
    output: function(xy) {
      return xy && [xy[0][1], xy[1][1]];
    }
  };
  var XY = {
    name: "xy",
    handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
    input: function(xy) {
      return xy == null ? null : number2(xy);
    },
    output: function(xy) {
      return xy;
    }
  };
  function type(t) {
    return { type: t };
  }

  // ../node_modules/d3-path/src/path.js
  var pi = Math.PI;
  var tau = 2 * pi;
  var epsilon = 1e-6;
  var tauEpsilon = tau - epsilon;
  function append(strings) {
    this._ += strings[0];
    for (let i = 1, n = strings.length; i < n; ++i) {
      this._ += arguments[i] + strings[i];
    }
  }
  function appendRound(digits) {
    let d = Math.floor(digits);
    if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);
    if (d > 15) return append;
    const k = 10 ** d;
    return function(strings) {
      this._ += strings[0];
      for (let i = 1, n = strings.length; i < n; ++i) {
        this._ += Math.round(arguments[i] * k) / k + strings[i];
      }
    };
  }
  var Path = class {
    constructor(digits) {
      this._x0 = this._y0 = // start of current subpath
      this._x1 = this._y1 = null;
      this._ = "";
      this._append = digits == null ? append : appendRound(digits);
    }
    moveTo(x2, y2) {
      this._append`M${this._x0 = this._x1 = +x2},${this._y0 = this._y1 = +y2}`;
    }
    closePath() {
      if (this._x1 !== null) {
        this._x1 = this._x0, this._y1 = this._y0;
        this._append`Z`;
      }
    }
    lineTo(x2, y2) {
      this._append`L${this._x1 = +x2},${this._y1 = +y2}`;
    }
    quadraticCurveTo(x1, y1, x2, y2) {
      this._append`Q${+x1},${+y1},${this._x1 = +x2},${this._y1 = +y2}`;
    }
    bezierCurveTo(x1, y1, x2, y2, x3, y3) {
      this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x3},${this._y1 = +y3}`;
    }
    arcTo(x1, y1, x2, y2, r) {
      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
      if (r < 0) throw new Error(`negative radius: ${r}`);
      let x0 = this._x1, y0 = this._y1, x21 = x2 - x1, y21 = y2 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01;
      if (this._x1 === null) {
        this._append`M${this._x1 = x1},${this._y1 = y1}`;
      } else if (!(l01_2 > epsilon)) ;
      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
        this._append`L${this._x1 = x1},${this._y1 = y1}`;
      } else {
        let x20 = x2 - x0, y20 = y2 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
        if (Math.abs(t01 - 1) > epsilon) {
          this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;
        }
        this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;
      }
    }
    arc(x2, y2, r, a0, a1, ccw) {
      x2 = +x2, y2 = +y2, r = +r, ccw = !!ccw;
      if (r < 0) throw new Error(`negative radius: ${r}`);
      let dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x2 + dx, y0 = y2 + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
      if (this._x1 === null) {
        this._append`M${x0},${y0}`;
      } else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
        this._append`L${x0},${y0}`;
      }
      if (!r) return;
      if (da < 0) da = da % tau + tau;
      if (da > tauEpsilon) {
        this._append`A${r},${r},0,1,${cw},${x2 - dx},${y2 - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;
      } else if (da > epsilon) {
        this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x2 + r * Math.cos(a1)},${this._y1 = y2 + r * Math.sin(a1)}`;
      }
    }
    rect(x2, y2, w, h) {
      this._append`M${this._x0 = this._x1 = +x2},${this._y0 = this._y1 = +y2}h${w = +w}v${+h}h${-w}Z`;
    }
    toString() {
      return this._;
    }
  };
  function path() {
    return new Path();
  }
  path.prototype = Path.prototype;

  // ../node_modules/d3-hierarchy/src/hierarchy/count.js
  function count(node) {
    var sum = 0, children2 = node.children, i = children2 && children2.length;
    if (!i) sum = 1;
    else while (--i >= 0) sum += children2[i].value;
    node.value = sum;
  }
  function count_default() {
    return this.eachAfter(count);
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/each.js
  function each_default2(callback, that) {
    let index = -1;
    for (const node of this) {
      callback.call(that, node, ++index, this);
    }
    return this;
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js
  function eachBefore_default(callback, that) {
    var node = this, nodes = [node], children2, i, index = -1;
    while (node = nodes.pop()) {
      callback.call(that, node, ++index, this);
      if (children2 = node.children) {
        for (i = children2.length - 1; i >= 0; --i) {
          nodes.push(children2[i]);
        }
      }
    }
    return this;
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js
  function eachAfter_default(callback, that) {
    var node = this, nodes = [node], next = [], children2, i, n, index = -1;
    while (node = nodes.pop()) {
      next.push(node);
      if (children2 = node.children) {
        for (i = 0, n = children2.length; i < n; ++i) {
          nodes.push(children2[i]);
        }
      }
    }
    while (node = next.pop()) {
      callback.call(that, node, ++index, this);
    }
    return this;
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/find.js
  function find_default(callback, that) {
    let index = -1;
    for (const node of this) {
      if (callback.call(that, node, ++index, this)) {
        return node;
      }
    }
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/sum.js
  function sum_default(value) {
    return this.eachAfter(function(node) {
      var sum = +value(node.data) || 0, children2 = node.children, i = children2 && children2.length;
      while (--i >= 0) sum += children2[i].value;
      node.value = sum;
    });
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/sort.js
  function sort_default2(compare) {
    return this.eachBefore(function(node) {
      if (node.children) {
        node.children.sort(compare);
      }
    });
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/path.js
  function path_default(end) {
    var start2 = this, ancestor = leastCommonAncestor(start2, end), nodes = [start2];
    while (start2 !== ancestor) {
      start2 = start2.parent;
      nodes.push(start2);
    }
    var k = nodes.length;
    while (end !== ancestor) {
      nodes.splice(k, 0, end);
      end = end.parent;
    }
    return nodes;
  }
  function leastCommonAncestor(a, b) {
    if (a === b) return a;
    var aNodes = a.ancestors(), bNodes = b.ancestors(), c = null;
    a = aNodes.pop();
    b = bNodes.pop();
    while (a === b) {
      c = a;
      a = aNodes.pop();
      b = bNodes.pop();
    }
    return c;
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/ancestors.js
  function ancestors_default() {
    var node = this, nodes = [node];
    while (node = node.parent) {
      nodes.push(node);
    }
    return nodes;
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/descendants.js
  function descendants_default() {
    return Array.from(this);
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/leaves.js
  function leaves_default() {
    var leaves = [];
    this.eachBefore(function(node) {
      if (!node.children) {
        leaves.push(node);
      }
    });
    return leaves;
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/links.js
  function links_default() {
    var root2 = this, links2 = [];
    root2.each(function(node) {
      if (node !== root2) {
        links2.push({ source: node.parent, target: node });
      }
    });
    return links2;
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/iterator.js
  function* iterator_default2() {
    var node = this, current, next = [node], children2, i, n;
    do {
      current = next.reverse(), next = [];
      while (node = current.pop()) {
        yield node;
        if (children2 = node.children) {
          for (i = 0, n = children2.length; i < n; ++i) {
            next.push(children2[i]);
          }
        }
      }
    } while (next.length);
  }

  // ../node_modules/d3-hierarchy/src/hierarchy/index.js
  function hierarchy(data, children2) {
    if (data instanceof Map) {
      data = [void 0, data];
      if (children2 === void 0) children2 = mapChildren;
    } else if (children2 === void 0) {
      children2 = objectChildren;
    }
    var root2 = new Node(data), node, nodes = [root2], child, childs, i, n;
    while (node = nodes.pop()) {
      if ((childs = children2(node.data)) && (n = (childs = Array.from(childs)).length)) {
        node.children = childs;
        for (i = n - 1; i >= 0; --i) {
          nodes.push(child = childs[i] = new Node(childs[i]));
          child.parent = node;
          child.depth = node.depth + 1;
        }
      }
    }
    return root2.eachBefore(computeHeight);
  }
  function node_copy() {
    return hierarchy(this).eachBefore(copyData);
  }
  function objectChildren(d) {
    return d.children;
  }
  function mapChildren(d) {
    return Array.isArray(d) ? d[1] : null;
  }
  function copyData(node) {
    if (node.data.value !== void 0) node.value = node.data.value;
    node.data = node.data.data;
  }
  function computeHeight(node) {
    var height = 0;
    do
      node.height = height;
    while ((node = node.parent) && node.height < ++height);
  }
  function Node(data) {
    this.data = data;
    this.depth = this.height = 0;
    this.parent = null;
  }
  Node.prototype = hierarchy.prototype = {
    constructor: Node,
    count: count_default,
    each: each_default2,
    eachAfter: eachAfter_default,
    eachBefore: eachBefore_default,
    find: find_default,
    sum: sum_default,
    sort: sort_default2,
    path: path_default,
    ancestors: ancestors_default,
    descendants: descendants_default,
    leaves: leaves_default,
    links: links_default,
    copy: node_copy,
    [Symbol.iterator]: iterator_default2
  };

  // ../node_modules/d3-hierarchy/src/tree.js
  function defaultSeparation(a, b) {
    return a.parent === b.parent ? 1 : 2;
  }
  function nextLeft(v) {
    var children2 = v.children;
    return children2 ? children2[0] : v.t;
  }
  function nextRight(v) {
    var children2 = v.children;
    return children2 ? children2[children2.length - 1] : v.t;
  }
  function moveSubtree(wm, wp, shift) {
    var change = shift / (wp.i - wm.i);
    wp.c -= change;
    wp.s += shift;
    wm.c += change;
    wp.z += shift;
    wp.m += shift;
  }
  function executeShifts(v) {
    var shift = 0, change = 0, children2 = v.children, i = children2.length, w;
    while (--i >= 0) {
      w = children2[i];
      w.z += shift;
      w.m += shift;
      shift += w.s + (change += w.c);
    }
  }
  function nextAncestor(vim, v, ancestor) {
    return vim.a.parent === v.parent ? vim.a : ancestor;
  }
  function TreeNode(node, i) {
    this._ = node;
    this.parent = null;
    this.children = null;
    this.A = null;
    this.a = this;
    this.z = 0;
    this.m = 0;
    this.c = 0;
    this.s = 0;
    this.t = null;
    this.i = i;
  }
  TreeNode.prototype = Object.create(Node.prototype);
  function treeRoot(root2) {
    var tree2 = new TreeNode(root2, 0), node, nodes = [tree2], child, children2, i, n;
    while (node = nodes.pop()) {
      if (children2 = node._.children) {
        node.children = new Array(n = children2.length);
        for (i = n - 1; i >= 0; --i) {
          nodes.push(child = node.children[i] = new TreeNode(children2[i], i));
          child.parent = node;
        }
      }
    }
    (tree2.parent = new TreeNode(null, 0)).children = [tree2];
    return tree2;
  }
  function tree_default() {
    var separation = defaultSeparation, dx = 1, dy = 1, nodeSize = null;
    function tree2(root2) {
      var t = treeRoot(root2);
      t.eachAfter(firstWalk), t.parent.m = -t.z;
      t.eachBefore(secondWalk);
      if (nodeSize) root2.eachBefore(sizeNode);
      else {
        var left = root2, right = root2, bottom = root2;
        root2.eachBefore(function(node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var s = left === right ? 1 : separation(left, right) / 2, tx = s - left.x, kx = dx / (right.x + s + tx), ky = dy / (bottom.depth || 1);
        root2.eachBefore(function(node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
      return root2;
    }
    function firstWalk(v) {
      var children2 = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
      if (children2) {
        executeShifts(v);
        var midpoint = (children2[0].z + children2[children2.length - 1].z) / 2;
        if (w) {
          v.z = w.z + separation(v._, w._);
          v.m = v.z - midpoint;
        } else {
          v.z = midpoint;
        }
      } else if (w) {
        v.z = w.z + separation(v._, w._);
      }
      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
    }
    function secondWalk(v) {
      v._.x = v.z + v.parent.m;
      v.m += v.parent.m;
    }
    function apportion(v, w, ancestor) {
      if (w) {
        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
          vom = nextLeft(vom);
          vop = nextRight(vop);
          vop.a = v;
          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
          if (shift > 0) {
            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
            sip += shift;
            sop += shift;
          }
          sim += vim.m;
          sip += vip.m;
          som += vom.m;
          sop += vop.m;
        }
        if (vim && !nextRight(vop)) {
          vop.t = vim;
          vop.m += sim - sop;
        }
        if (vip && !nextLeft(vom)) {
          vom.t = vip;
          vom.m += sip - som;
          ancestor = v;
        }
      }
      return ancestor;
    }
    function sizeNode(node) {
      node.x *= dx;
      node.y = node.depth * dy;
    }
    tree2.separation = function(x2) {
      return arguments.length ? (separation = x2, tree2) : separation;
    };
    tree2.size = function(x2) {
      return arguments.length ? (nodeSize = false, dx = +x2[0], dy = +x2[1], tree2) : nodeSize ? null : [dx, dy];
    };
    tree2.nodeSize = function(x2) {
      return arguments.length ? (nodeSize = true, dx = +x2[0], dy = +x2[1], tree2) : nodeSize ? [dx, dy] : null;
    };
    return tree2;
  }

  // ../node_modules/d3-shape/src/constant.js
  function constant_default4(x2) {
    return function constant() {
      return x2;
    };
  }

  // ../node_modules/d3-shape/src/path.js
  function withPath(shape) {
    let digits = 3;
    shape.digits = function(_) {
      if (!arguments.length) return digits;
      if (_ == null) {
        digits = null;
      } else {
        const d = Math.floor(_);
        if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);
        digits = d;
      }
      return shape;
    };
    return () => new Path(digits);
  }

  // ../node_modules/d3-shape/src/array.js
  var slice = Array.prototype.slice;

  // ../node_modules/d3-shape/src/point.js
  function x(p) {
    return p[0];
  }
  function y(p) {
    return p[1];
  }

  // ../node_modules/d3-shape/src/curve/bump.js
  var Bump = class {
    constructor(context, x2) {
      this._context = context;
      this._x = x2;
    }
    areaStart() {
      this._line = 0;
    }
    areaEnd() {
      this._line = NaN;
    }
    lineStart() {
      this._point = 0;
    }
    lineEnd() {
      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
      this._line = 1 - this._line;
    }
    point(x2, y2) {
      x2 = +x2, y2 = +y2;
      switch (this._point) {
        case 0: {
          this._point = 1;
          if (this._line) this._context.lineTo(x2, y2);
          else this._context.moveTo(x2, y2);
          break;
        }
        case 1:
          this._point = 2;
        // falls through
        default: {
          if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x2) / 2, this._y0, this._x0, y2, x2, y2);
          else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y2) / 2, x2, this._y0, x2, y2);
          break;
        }
      }
      this._x0 = x2, this._y0 = y2;
    }
  };
  function bumpY(context) {
    return new Bump(context, false);
  }

  // ../node_modules/d3-shape/src/link.js
  function linkSource(d) {
    return d.source;
  }
  function linkTarget(d) {
    return d.target;
  }
  function link(curve) {
    let source = linkSource, target = linkTarget, x2 = x, y2 = y, context = null, output = null, path2 = withPath(link2);
    function link2() {
      let buffer;
      const argv = slice.call(arguments);
      const s = source.apply(this, argv);
      const t = target.apply(this, argv);
      if (context == null) output = curve(buffer = path2());
      output.lineStart();
      argv[0] = s, output.point(+x2.apply(this, argv), +y2.apply(this, argv));
      argv[0] = t, output.point(+x2.apply(this, argv), +y2.apply(this, argv));
      output.lineEnd();
      if (buffer) return output = null, buffer + "" || null;
    }
    link2.source = function(_) {
      return arguments.length ? (source = _, link2) : source;
    };
    link2.target = function(_) {
      return arguments.length ? (target = _, link2) : target;
    };
    link2.x = function(_) {
      return arguments.length ? (x2 = typeof _ === "function" ? _ : constant_default4(+_), link2) : x2;
    };
    link2.y = function(_) {
      return arguments.length ? (y2 = typeof _ === "function" ? _ : constant_default4(+_), link2) : y2;
    };
    link2.context = function(_) {
      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link2) : context;
    };
    return link2;
  }
  function linkVertical() {
    return link(bumpY);
  }

  // ../node_modules/d3-zoom/src/constant.js
  var constant_default5 = (x2) => () => x2;

  // ../node_modules/d3-zoom/src/event.js
  function ZoomEvent(type2, {
    sourceEvent,
    target,
    transform: transform2,
    dispatch: dispatch2
  }) {
    Object.defineProperties(this, {
      type: { value: type2, enumerable: true, configurable: true },
      sourceEvent: { value: sourceEvent, enumerable: true, configurable: true },
      target: { value: target, enumerable: true, configurable: true },
      transform: { value: transform2, enumerable: true, configurable: true },
      _: { value: dispatch2 }
    });
  }

  // ../node_modules/d3-zoom/src/transform.js
  function Transform(k, x2, y2) {
    this.k = k;
    this.x = x2;
    this.y = y2;
  }
  Transform.prototype = {
    constructor: Transform,
    scale: function(k) {
      return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
    },
    translate: function(x2, y2) {
      return x2 === 0 & y2 === 0 ? this : new Transform(this.k, this.x + this.k * x2, this.y + this.k * y2);
    },
    apply: function(point) {
      return [point[0] * this.k + this.x, point[1] * this.k + this.y];
    },
    applyX: function(x2) {
      return x2 * this.k + this.x;
    },
    applyY: function(y2) {
      return y2 * this.k + this.y;
    },
    invert: function(location) {
      return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
    },
    invertX: function(x2) {
      return (x2 - this.x) / this.k;
    },
    invertY: function(y2) {
      return (y2 - this.y) / this.k;
    },
    rescaleX: function(x2) {
      return x2.copy().domain(x2.range().map(this.invertX, this).map(x2.invert, x2));
    },
    rescaleY: function(y2) {
      return y2.copy().domain(y2.range().map(this.invertY, this).map(y2.invert, y2));
    },
    toString: function() {
      return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
    }
  };
  var identity2 = new Transform(1, 0, 0);
  transform.prototype = Transform.prototype;
  function transform(node) {
    while (!node.__zoom) if (!(node = node.parentNode)) return identity2;
    return node.__zoom;
  }

  // ../node_modules/d3-zoom/src/noevent.js
  function nopropagation2(event) {
    event.stopImmediatePropagation();
  }
  function noevent_default3(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
  }

  // ../node_modules/d3-zoom/src/zoom.js
  function defaultFilter(event) {
    return (!event.ctrlKey || event.type === "wheel") && !event.button;
  }
  function defaultExtent() {
    var e = this;
    if (e instanceof SVGElement) {
      e = e.ownerSVGElement || e;
      if (e.hasAttribute("viewBox")) {
        e = e.viewBox.baseVal;
        return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
      }
      return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
    }
    return [[0, 0], [e.clientWidth, e.clientHeight]];
  }
  function defaultTransform() {
    return this.__zoom || identity2;
  }
  function defaultWheelDelta(event) {
    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 2e-3) * (event.ctrlKey ? 10 : 1);
  }
  function defaultTouchable() {
    return navigator.maxTouchPoints || "ontouchstart" in this;
  }
  function defaultConstrain(transform2, extent, translateExtent) {
    var dx0 = transform2.invertX(extent[0][0]) - translateExtent[0][0], dx1 = transform2.invertX(extent[1][0]) - translateExtent[1][0], dy0 = transform2.invertY(extent[0][1]) - translateExtent[0][1], dy1 = transform2.invertY(extent[1][1]) - translateExtent[1][1];
    return transform2.translate(
      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),
      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)
    );
  }
  function zoom_default2() {
    var filter2 = defaultFilter, extent = defaultExtent, constrain = defaultConstrain, wheelDelta = defaultWheelDelta, touchable = defaultTouchable, scaleExtent = [0, Infinity], translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]], duration = 250, interpolate = zoom_default, listeners = dispatch_default("start", "zoom", "end"), touchstarting, touchfirst, touchending, touchDelay = 500, wheelDelay = 150, clickDistance2 = 0, tapDistance = 10;
    function zoom(selection2) {
      selection2.property("__zoom", defaultTransform).on("wheel.zoom", wheeled, { passive: false }).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
    }
    zoom.transform = function(collection, transform2, point, event) {
      var selection2 = collection.selection ? collection.selection() : collection;
      selection2.property("__zoom", defaultTransform);
      if (collection !== selection2) {
        schedule(collection, transform2, point, event);
      } else {
        selection2.interrupt().each(function() {
          gesture(this, arguments).event(event).start().zoom(null, typeof transform2 === "function" ? transform2.apply(this, arguments) : transform2).end();
        });
      }
    };
    zoom.scaleBy = function(selection2, k, p, event) {
      zoom.scaleTo(selection2, function() {
        var k0 = this.__zoom.k, k1 = typeof k === "function" ? k.apply(this, arguments) : k;
        return k0 * k1;
      }, p, event);
    };
    zoom.scaleTo = function(selection2, k, p, event) {
      zoom.transform(selection2, function() {
        var e = extent.apply(this, arguments), t0 = this.__zoom, p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p, p1 = t0.invert(p0), k1 = typeof k === "function" ? k.apply(this, arguments) : k;
        return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
      }, p, event);
    };
    zoom.translateBy = function(selection2, x2, y2, event) {
      zoom.transform(selection2, function() {
        return constrain(this.__zoom.translate(
          typeof x2 === "function" ? x2.apply(this, arguments) : x2,
          typeof y2 === "function" ? y2.apply(this, arguments) : y2
        ), extent.apply(this, arguments), translateExtent);
      }, null, event);
    };
    zoom.translateTo = function(selection2, x2, y2, p, event) {
      zoom.transform(selection2, function() {
        var e = extent.apply(this, arguments), t = this.__zoom, p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
        return constrain(identity2.translate(p0[0], p0[1]).scale(t.k).translate(
          typeof x2 === "function" ? -x2.apply(this, arguments) : -x2,
          typeof y2 === "function" ? -y2.apply(this, arguments) : -y2
        ), e, translateExtent);
      }, p, event);
    };
    function scale(transform2, k) {
      k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
      return k === transform2.k ? transform2 : new Transform(k, transform2.x, transform2.y);
    }
    function translate(transform2, p0, p1) {
      var x2 = p0[0] - p1[0] * transform2.k, y2 = p0[1] - p1[1] * transform2.k;
      return x2 === transform2.x && y2 === transform2.y ? transform2 : new Transform(transform2.k, x2, y2);
    }
    function centroid(extent2) {
      return [(+extent2[0][0] + +extent2[1][0]) / 2, (+extent2[0][1] + +extent2[1][1]) / 2];
    }
    function schedule(transition2, transform2, point, event) {
      transition2.on("start.zoom", function() {
        gesture(this, arguments).event(event).start();
      }).on("interrupt.zoom end.zoom", function() {
        gesture(this, arguments).event(event).end();
      }).tween("zoom", function() {
        var that = this, args = arguments, g = gesture(that, args).event(event), e = extent.apply(that, args), p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point, w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]), a = that.__zoom, b = typeof transform2 === "function" ? transform2.apply(that, args) : transform2, i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
        return function(t) {
          if (t === 1) t = b;
          else {
            var l = i(t), k = w / l[2];
            t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
          }
          g.zoom(null, t);
        };
      });
    }
    function gesture(that, args, clean) {
      return !clean && that.__zooming || new Gesture(that, args);
    }
    function Gesture(that, args) {
      this.that = that;
      this.args = args;
      this.active = 0;
      this.sourceEvent = null;
      this.extent = extent.apply(that, args);
      this.taps = 0;
    }
    Gesture.prototype = {
      event: function(event) {
        if (event) this.sourceEvent = event;
        return this;
      },
      start: function() {
        if (++this.active === 1) {
          this.that.__zooming = this;
          this.emit("start");
        }
        return this;
      },
      zoom: function(key, transform2) {
        if (this.mouse && key !== "mouse") this.mouse[1] = transform2.invert(this.mouse[0]);
        if (this.touch0 && key !== "touch") this.touch0[1] = transform2.invert(this.touch0[0]);
        if (this.touch1 && key !== "touch") this.touch1[1] = transform2.invert(this.touch1[0]);
        this.that.__zoom = transform2;
        this.emit("zoom");
        return this;
      },
      end: function() {
        if (--this.active === 0) {
          delete this.that.__zooming;
          this.emit("end");
        }
        return this;
      },
      emit: function(type2) {
        var d = select_default2(this.that).datum();
        listeners.call(
          type2,
          this.that,
          new ZoomEvent(type2, {
            sourceEvent: this.sourceEvent,
            target: zoom,
            type: type2,
            transform: this.that.__zoom,
            dispatch: listeners
          }),
          d
        );
      }
    };
    function wheeled(event, ...args) {
      if (!filter2.apply(this, arguments)) return;
      var g = gesture(this, args).event(event), t = this.__zoom, k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))), p = pointer_default(event);
      if (g.wheel) {
        if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
          g.mouse[1] = t.invert(g.mouse[0] = p);
        }
        clearTimeout(g.wheel);
      } else if (t.k === k) return;
      else {
        g.mouse = [p, t.invert(p)];
        interrupt_default(this);
        g.start();
      }
      noevent_default3(event);
      g.wheel = setTimeout(wheelidled, wheelDelay);
      g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));
      function wheelidled() {
        g.wheel = null;
        g.end();
      }
    }
    function mousedowned(event, ...args) {
      if (touchending || !filter2.apply(this, arguments)) return;
      var currentTarget = event.currentTarget, g = gesture(this, args, true).event(event), v = select_default2(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true), p = pointer_default(event, currentTarget), x0 = event.clientX, y0 = event.clientY;
      nodrag_default(event.view);
      nopropagation2(event);
      g.mouse = [p, this.__zoom.invert(p)];
      interrupt_default(this);
      g.start();
      function mousemoved(event2) {
        noevent_default3(event2);
        if (!g.moved) {
          var dx = event2.clientX - x0, dy = event2.clientY - y0;
          g.moved = dx * dx + dy * dy > clickDistance2;
        }
        g.event(event2).zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = pointer_default(event2, currentTarget), g.mouse[1]), g.extent, translateExtent));
      }
      function mouseupped(event2) {
        v.on("mousemove.zoom mouseup.zoom", null);
        yesdrag(event2.view, g.moved);
        noevent_default3(event2);
        g.event(event2).end();
      }
    }
    function dblclicked(event, ...args) {
      if (!filter2.apply(this, arguments)) return;
      var t0 = this.__zoom, p0 = pointer_default(event.changedTouches ? event.changedTouches[0] : event, this), p1 = t0.invert(p0), k1 = t0.k * (event.shiftKey ? 0.5 : 2), t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);
      noevent_default3(event);
      if (duration > 0) select_default2(this).transition().duration(duration).call(schedule, t1, p0, event);
      else select_default2(this).call(zoom.transform, t1, p0, event);
    }
    function touchstarted(event, ...args) {
      if (!filter2.apply(this, arguments)) return;
      var touches = event.touches, n = touches.length, g = gesture(this, args, event.changedTouches.length === n).event(event), started, i, t, p;
      nopropagation2(event);
      for (i = 0; i < n; ++i) {
        t = touches[i], p = pointer_default(t, this);
        p = [p, this.__zoom.invert(p), t.identifier];
        if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;
        else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
      }
      if (touchstarting) touchstarting = clearTimeout(touchstarting);
      if (started) {
        if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() {
          touchstarting = null;
        }, touchDelay);
        interrupt_default(this);
        g.start();
      }
    }
    function touchmoved(event, ...args) {
      if (!this.__zooming) return;
      var g = gesture(this, args).event(event), touches = event.changedTouches, n = touches.length, i, t, p, l;
      noevent_default3(event);
      for (i = 0; i < n; ++i) {
        t = touches[i], p = pointer_default(t, this);
        if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;
        else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
      }
      t = g.that.__zoom;
      if (g.touch1) {
        var p0 = g.touch0[0], l0 = g.touch0[1], p1 = g.touch1[0], l1 = g.touch1[1], dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp, dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
        t = scale(t, Math.sqrt(dp / dl));
        p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
        l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
      } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];
      else return;
      g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
    }
    function touchended(event, ...args) {
      if (!this.__zooming) return;
      var g = gesture(this, args).event(event), touches = event.changedTouches, n = touches.length, i, t;
      nopropagation2(event);
      if (touchending) clearTimeout(touchending);
      touchending = setTimeout(function() {
        touchending = null;
      }, touchDelay);
      for (i = 0; i < n; ++i) {
        t = touches[i];
        if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;
        else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
      }
      if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
      if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);
      else {
        g.end();
        if (g.taps === 2) {
          t = pointer_default(t, this);
          if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {
            var p = select_default2(this).on("dblclick.zoom");
            if (p) p.apply(this, arguments);
          }
        }
      }
    }
    zoom.wheelDelta = function(_) {
      return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : constant_default5(+_), zoom) : wheelDelta;
    };
    zoom.filter = function(_) {
      return arguments.length ? (filter2 = typeof _ === "function" ? _ : constant_default5(!!_), zoom) : filter2;
    };
    zoom.touchable = function(_) {
      return arguments.length ? (touchable = typeof _ === "function" ? _ : constant_default5(!!_), zoom) : touchable;
    };
    zoom.extent = function(_) {
      return arguments.length ? (extent = typeof _ === "function" ? _ : constant_default5([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
    };
    zoom.scaleExtent = function(_) {
      return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
    };
    zoom.translateExtent = function(_) {
      return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
    };
    zoom.constrain = function(_) {
      return arguments.length ? (constrain = _, zoom) : constrain;
    };
    zoom.duration = function(_) {
      return arguments.length ? (duration = +_, zoom) : duration;
    };
    zoom.interpolate = function(_) {
      return arguments.length ? (interpolate = _, zoom) : interpolate;
    };
    zoom.on = function() {
      var value = listeners.on.apply(listeners, arguments);
      return value === listeners ? zoom : value;
    };
    zoom.clickDistance = function(_) {
      return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
    };
    zoom.tapDistance = function(_) {
      return arguments.length ? (tapDistance = +_, zoom) : tapDistance;
    };
    return zoom;
  }

  // src/view/breakResult/cookieMap.ts
  var CookieMap = class {
    key;
    constructor(storageKey) {
      this.key = storageKey;
      this.migrateFromCookie();
    }
    // Migrate data from cookie to localStorage
    migrateFromCookie() {
      const cookieValue = this.getCookie();
      if (cookieValue) {
        try {
          const parsed = JSON.parse(decodeURIComponent(cookieValue));
          localStorage.setItem(this.key, JSON.stringify(parsed));
          this.deleteCookie();
        } catch (e) {
          console.warn("Failed to migrate cookie data:", e);
        }
      }
    }
    getCookie() {
      const cookie = document.cookie.split("; ").find((row) => row.startsWith(this.key + "="));
      return cookie ? cookie.split("=")[1] : null;
    }
    deleteCookie() {
      document.cookie = `${this.key}=; Max-Age=0; path=/;`;
    }
    loadMap() {
      const raw = localStorage.getItem(this.key);
      if (!raw) return /* @__PURE__ */ new Map();
      try {
        const obj = JSON.parse(raw);
        const map = /* @__PURE__ */ new Map();
        for (const key in obj) {
          if (Array.isArray(obj[key])) {
            map.set(key, obj[key]);
          }
        }
        return map;
      } catch {
        return /* @__PURE__ */ new Map();
      }
    }
    saveMap(map) {
      const obj = {};
      for (const [key, values] of map.entries()) {
        obj[key] = values;
      }
      localStorage.setItem(this.key, JSON.stringify(obj));
    }
    add(key, value) {
      const map = this.loadMap();
      const values = map.get(key) || [];
      if (!values.includes(value)) {
        values.push(value);
        map.set(key, values);
        this.saveMap(map);
      }
    }
    remove(key, value) {
      const map = this.loadMap();
      const values = map.get(key);
      if (!values) return;
      const index = values.indexOf(value);
      if (index !== -1) {
        values.splice(index, 1);
        if (values.length === 0) {
          map.delete(key);
        } else {
          map.set(key, values);
        }
        this.saveMap(map);
      }
    }
    has(key, value) {
      const map = this.loadMap();
      const values = map.get(key);
      return values ? values.includes(value) : false;
    }
    get(key) {
      const map = this.loadMap();
      return map.get(key) || [];
    }
    keys() {
      return Array.from(this.loadMap().keys());
    }
    toObject() {
      const map = this.loadMap();
      const obj = {};
      for (const [key, value] of map.entries()) {
        obj[key] = value;
      }
      return obj;
    }
  };

  // src/view/transformation/chestLoot.ts
  var chestLoot = {
    "abandoned_mineshaft": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "golden_apple",
              "weight": 20
            },
            {
              "type": "item",
              "name": "enchanted_golden_apple"
            },
            {
              "type": "item",
              "name": "name_tag",
              "weight": 30
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "book",
              "weight": 10
            },
            {
              "type": "item",
              "name": "iron_pickaxe",
              "weight": 5
            },
            {
              "type": "empty",
              "weight": 5
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 9,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "redstone",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 9,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "lapis_lazuli",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "glow_berries",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "melon_seeds",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "pumpkin_seeds",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "beetroot_seeds",
              "weight": 10
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 4,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "rail",
              "weight": 20
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "powered_rail",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "detector_rail",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "activator_rail",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 16,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "torch",
              "weight": 15
            }
          ],
          "rolls": 3
        }
      ],
      "random_sequence": "chests/abandoned_mineshaft"
    },
    "ancient_city": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "enchanted_golden_apple"
            },
            {
              "type": "item",
              "name": "music_disc_otherside"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "compass",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "sculk_catalyst",
              "weight": 2
            },
            {
              "type": "item",
              "name": "name_tag",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0.8
                  },
                  "function": "set_damage"
                },
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 50,
                    "min": 30
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_hoe",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "lead",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "diamond_horse_armor",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "saddle",
              "weight": 2
            },
            {
              "type": "item",
              "name": "music_disc_13",
              "weight": 2
            },
            {
              "type": "item",
              "name": "music_disc_cat",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 50,
                    "min": 30
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_leggings",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "swift_sneak"
                }
              ],
              "name": "book",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "sculk",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "sculk_sensor",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "candle",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 15,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "amethyst_shard",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "experience_bottle",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 15,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "glow_berries",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_leggings",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "echo_shard",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "disc_fragment_5",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "function": "set_potion",
                  "id": "strong_regeneration"
                }
              ],
              "name": "potion",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "book",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "book",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 15,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bone",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 15,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "soul_torch",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 15,
                    "min": 6
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 7
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 10,
            "min": 5
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 75
            },
            {
              "type": "item",
              "name": "ward_armor_trim_smithing_template",
              "weight": 4
            },
            {
              "type": "item",
              "name": "silence_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/ancient_city"
    },
    "ancient_city_ice_box": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "effects": [
                    {
                      "type": "night_vision",
                      "duration": {
                        "type": "uniform",
                        "max": 10,
                        "min": 7
                      }
                    },
                    {
                      "type": "blindness",
                      "duration": {
                        "type": "uniform",
                        "max": 7,
                        "min": 5
                      }
                    }
                  ],
                  "function": "set_stew_effect"
                },
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "suspicious_stew"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "golden_carrot"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "baked_potato"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "packed_ice",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "snowball",
              "weight": 4
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 10,
            "min": 4
          }
        }
      ],
      "random_sequence": "chests/ancient_city_ice_box"
    },
    "bastion_bridge": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "lodestone"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.5,
                    "min": 0.1
                  },
                  "function": "set_damage"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "crossbow"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 28,
                    "min": 10
                  },
                  "function": "set_count"
                }
              ],
              "name": "spectral_arrow"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 12,
                    "min": 8
                  },
                  "function": "set_count"
                }
              ],
              "name": "gilded_blackstone"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "crying_obsidian"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "gold_block"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 9,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 9,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "golden_sword"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_chestplate"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_helmet"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_leggings"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_boots"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_axe"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 2,
            "min": 1
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "string"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "leather"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 17,
                    "min": 5
                  },
                  "function": "set_count"
                }
              ],
              "name": "arrow"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_nugget"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_nugget"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 4,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 11
            },
            {
              "type": "item",
              "name": "snout_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 9
            },
            {
              "type": "item",
              "name": "netherite_upgrade_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/bastion_bridge"
    },
    "bastion_hoglin_stable": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.8,
                    "min": 0.15
                  },
                  "function": "set_damage"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_shovel",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.95,
                    "min": 0.15
                  },
                  "function": "set_damage"
                },
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_pickaxe",
              "weight": 12
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "netherite_scrap",
              "weight": 8
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "ancient_debris",
              "weight": 12
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 2,
                  "function": "set_count"
                }
              ],
              "name": "ancient_debris",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "saddle",
              "weight": 12
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_block",
              "weight": 16
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 17,
                    "min": 8
                  },
                  "function": "set_count"
                }
              ],
              "name": "golden_carrot",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "golden_apple",
              "weight": 10
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_axe"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "crying_obsidian"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "glowstone"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "gilded_blackstone"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "soul_sand"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "crimson_nylium"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_nugget"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "leather"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 17,
                    "min": 5
                  },
                  "function": "set_count"
                }
              ],
              "name": "arrow"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "string"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "porkchop"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "cooked_porkchop"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "crimson_fungus"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "crimson_roots"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 4,
            "min": 3
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 11
            },
            {
              "type": "item",
              "name": "snout_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 9
            },
            {
              "type": "item",
              "name": "netherite_upgrade_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/bastion_hoglin_stable"
    },
    "bastion_other": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_pickaxe",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "diamond_shovel",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.9,
                    "min": 0.1
                  },
                  "function": "set_damage"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "crossbow",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "ancient_debris",
              "weight": 12
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "netherite_scrap",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 22,
                    "min": 10
                  },
                  "function": "set_count"
                }
              ],
              "name": "spectral_arrow",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "piglin_banner_pattern",
              "weight": 9
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "music_disc_pigstep",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 17,
                    "min": 6
                  },
                  "function": "set_count"
                }
              ],
              "name": "golden_carrot",
              "weight": 12
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "golden_apple",
              "weight": 9
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "soul_speed"
                }
              ],
              "name": "book",
              "weight": 10
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.9,
                    "min": 0.1
                  },
                  "function": "set_damage"
                },
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_sword",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "iron_block",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "function": "enchant_randomly",
                  "options": "soul_speed"
                }
              ],
              "name": "golden_boots"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_axe"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "gold_block",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "crossbow"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "golden_sword"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "golden_chestplate"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "golden_helmet"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "golden_leggings"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "golden_boots"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "crying_obsidian",
              "weight": 2
            }
          ],
          "rolls": 2
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gilded_blackstone",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "chain"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "magma_cream",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "bone_block"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_nugget"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "obsidian"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_nugget"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "string"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 17,
                    "min": 5
                  },
                  "function": "set_count"
                }
              ],
              "name": "arrow",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "cooked_porkchop"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 4,
            "min": 3
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 11
            },
            {
              "type": "item",
              "name": "snout_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 9
            },
            {
              "type": "item",
              "name": "netherite_upgrade_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/bastion_other"
    },
    "bastion_treasure": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "netherite_ingot",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "ancient_debris",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "netherite_scrap",
              "weight": 8
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 2,
                  "function": "set_count"
                }
              ],
              "name": "ancient_debris",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0.8
                  },
                  "function": "set_damage"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_sword",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0.8
                  },
                  "function": "set_damage"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_chestplate",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0.8
                  },
                  "function": "set_damage"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_helmet",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0.8
                  },
                  "function": "set_damage"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_leggings",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0.8
                  },
                  "function": "set_damage"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_boots",
              "weight": 6
            },
            {
              "type": "item",
              "name": "diamond_sword",
              "weight": 6
            },
            {
              "type": "item",
              "name": "diamond_chestplate",
              "weight": 5
            },
            {
              "type": "item",
              "name": "diamond_helmet",
              "weight": 5
            },
            {
              "type": "item",
              "name": "diamond_boots",
              "weight": 5
            },
            {
              "type": "item",
              "name": "diamond_leggings",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "enchanted_golden_apple",
              "weight": 2
            }
          ],
          "rolls": 3
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 25,
                    "min": 12
                  },
                  "function": "set_count"
                }
              ],
              "name": "spectral_arrow"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_block"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_block"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 9,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 9,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "crying_obsidian"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 23,
                    "min": 8
                  },
                  "function": "set_count"
                }
              ],
              "name": "quartz"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 15,
                    "min": 5
                  },
                  "function": "set_count"
                }
              ],
              "name": "gilded_blackstone"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "magma_cream"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 4,
            "min": 3
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 11
            },
            {
              "type": "item",
              "name": "snout_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "netherite_upgrade_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/bastion_treasure"
    },
    "buried_treasure": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "heart_of_the_sea"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 20
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "tnt",
              "weight": 5
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 5
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "prismarine_crystals",
              "weight": 5
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 1
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "leather_chestplate"
            },
            {
              "type": "item",
              "name": "iron_sword"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 1,
            "min": 0
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "cooked_cod"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "cooked_salmon"
            }
          ],
          "rolls": 2
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "potion"
            }
          ],
          "functions": [
            {
              "function": "set_potion",
              "id": "water_breathing"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 2,
            "min": 0
          }
        }
      ],
      "random_sequence": "chests/buried_treasure"
    },
    "desert_pyramid": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "bone",
              "weight": 25
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "spider_eye",
              "weight": 25
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "rotten_flesh",
              "weight": 25
            },
            {
              "type": "item",
              "name": "saddle",
              "weight": 20
            },
            {
              "type": "item",
              "name": "iron_horse_armor",
              "weight": 15
            },
            {
              "type": "item",
              "name": "golden_horse_armor",
              "weight": 10
            },
            {
              "type": "item",
              "name": "diamond_horse_armor",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "book",
              "weight": 20
            },
            {
              "type": "item",
              "name": "golden_apple",
              "weight": 20
            },
            {
              "type": "item",
              "name": "enchanted_golden_apple",
              "weight": 2
            },
            {
              "type": "empty",
              "weight": 15
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 4,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bone",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gunpowder",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "rotten_flesh",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "string",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "sand",
              "weight": 10
            }
          ],
          "rolls": 4
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 2,
                  "function": "set_count"
                }
              ],
              "name": "dune_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/desert_pyramid"
    },
    "end_city_treasure": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "beetroot_seeds",
              "weight": 5
            },
            {
              "type": "item",
              "name": "saddle",
              "weight": 3
            },
            {
              "type": "item",
              "name": "iron_horse_armor"
            },
            {
              "type": "item",
              "name": "golden_horse_armor"
            },
            {
              "type": "item",
              "name": "diamond_horse_armor"
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_sword",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_boots",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_chestplate",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_leggings",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_helmet",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_pickaxe",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_shovel",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_sword",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_boots",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_chestplate",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_leggings",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_helmet",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_pickaxe",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 39,
                    "min": 20
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_shovel",
              "weight": 3
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 6,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 14
            },
            {
              "type": "item",
              "name": "spire_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/end_city_treasure"
    },
    "igloo_chest": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "apple",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_nugget",
              "weight": 10
            },
            {
              "type": "item",
              "name": "stone_axe",
              "weight": 2
            },
            {
              "type": "item",
              "name": "rotten_flesh",
              "weight": 10
            },
            {
              "type": "item",
              "name": "emerald"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat",
              "weight": 10
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "golden_apple"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/igloo_chest"
    },
    "jungle_temple": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bamboo",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "bone",
              "weight": 20
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "rotten_flesh",
              "weight": 16
            },
            {
              "type": "item",
              "name": "saddle",
              "weight": 3
            },
            {
              "type": "item",
              "name": "iron_horse_armor"
            },
            {
              "type": "item",
              "name": "golden_horse_armor"
            },
            {
              "type": "item",
              "name": "diamond_horse_armor"
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": 30,
                  "options": "#on_random_loot"
                }
              ],
              "name": "book"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 6,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 2,
                  "function": "set_count"
                }
              ],
              "name": "wild_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/jungle_temple"
    },
    "jungle_temple_dispenser": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "arrow",
              "weight": 30
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 2,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/jungle_temple_dispenser"
    },
    "nether_bridge": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 15
            },
            {
              "type": "item",
              "name": "golden_sword",
              "weight": 5
            },
            {
              "type": "item",
              "name": "golden_chestplate",
              "weight": 5
            },
            {
              "type": "item",
              "name": "flint_and_steel",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "nether_wart",
              "weight": 5
            },
            {
              "type": "item",
              "name": "saddle",
              "weight": 10
            },
            {
              "type": "item",
              "name": "golden_horse_armor",
              "weight": 8
            },
            {
              "type": "item",
              "name": "iron_horse_armor",
              "weight": 5
            },
            {
              "type": "item",
              "name": "diamond_horse_armor",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "obsidian",
              "weight": 2
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 4,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 14
            },
            {
              "type": "item",
              "name": "rib_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/nether_bridge"
    },
    "pillager_outpost": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "crossbow"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 1,
            "min": 0
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat",
              "weight": 7
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "potato",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "carrot",
              "weight": 5
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "dark_oak_log"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 1
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "experience_bottle",
              "weight": 7
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "string",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "arrow",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "tripwire_hook",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "book"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "goat_horn"
            }
          ],
          "functions": [
            {
              "function": "set_instrument",
              "options": "#regular_goat_horns"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 1,
            "min": 0
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 2,
                  "function": "set_count"
                }
              ],
              "name": "sentry_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/pillager_outpost"
    },
    "ruined_portal": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "obsidian",
              "weight": 40
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "flint",
              "weight": 40
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 18,
                    "min": 9
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_nugget",
              "weight": 40
            },
            {
              "type": "item",
              "name": "flint_and_steel",
              "weight": 40
            },
            {
              "type": "item",
              "name": "fire_charge",
              "weight": 40
            },
            {
              "type": "item",
              "name": "golden_apple",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 24,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_nugget",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_sword",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_axe",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_hoe",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_shovel",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_pickaxe",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_boots",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_chestplate",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_helmet",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "golden_leggings",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 12,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "glistering_melon_slice",
              "weight": 5
            },
            {
              "type": "item",
              "name": "golden_horse_armor",
              "weight": 5
            },
            {
              "type": "item",
              "name": "light_weighted_pressure_plate",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 12,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "golden_carrot",
              "weight": 5
            },
            {
              "type": "item",
              "name": "clock",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 5
            },
            {
              "type": "item",
              "name": "bell"
            },
            {
              "type": "item",
              "name": "enchanted_golden_apple"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_block"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 4
          }
        }
      ],
      "random_sequence": "chests/ruined_portal"
    },
    "shipwreck_map": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "decoration": "red_x",
                  "function": "exploration_map",
                  "skip_existing_chunks": false,
                  "zoom": 1
                },
                {
                  "function": "set_name",
                  "name": {
                    "translate": "filled_map.buried_treasure"
                  },
                  "target": "item_name"
                }
              ],
              "name": "map"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "compass"
            },
            {
              "type": "item",
              "name": "map"
            },
            {
              "type": "item",
              "name": "clock"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "paper",
              "weight": 20
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "feather",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "book",
              "weight": 5
            }
          ],
          "rolls": 3
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 2,
                  "function": "set_count"
                }
              ],
              "name": "coast_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/shipwreck_map"
    },
    "shipwreck_supply": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 12,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "paper",
              "weight": 8
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "potato",
              "weight": 7
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "moss_block",
              "weight": 7
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "poisonous_potato",
              "weight": 7
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "carrot",
              "weight": 7
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 21,
                    "min": 8
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat",
              "weight": 7
            },
            {
              "type": "item",
              "functions": [
                {
                  "effects": [
                    {
                      "type": "night_vision",
                      "duration": {
                        "type": "uniform",
                        "max": 10,
                        "min": 7
                      }
                    },
                    {
                      "type": "jump_boost",
                      "duration": {
                        "type": "uniform",
                        "max": 10,
                        "min": 7
                      }
                    },
                    {
                      "type": "weakness",
                      "duration": {
                        "type": "uniform",
                        "max": 8,
                        "min": 6
                      }
                    },
                    {
                      "type": "blindness",
                      "duration": {
                        "type": "uniform",
                        "max": 7,
                        "min": 5
                      }
                    },
                    {
                      "type": "poison",
                      "duration": {
                        "type": "uniform",
                        "max": 20,
                        "min": 10
                      }
                    },
                    {
                      "type": "saturation",
                      "duration": {
                        "type": "uniform",
                        "max": 10,
                        "min": 7
                      }
                    }
                  ],
                  "function": "set_stew_effect"
                }
              ],
              "name": "suspicious_stew",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 24,
                    "min": 5
                  },
                  "function": "set_count"
                }
              ],
              "name": "rotten_flesh",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "pumpkin",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bamboo",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gunpowder",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "tnt"
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "leather_helmet",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "leather_chestplate",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "leather_leggings",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "leather_boots",
              "weight": 3
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 10,
            "min": 3
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 2,
                  "function": "set_count"
                }
              ],
              "name": "coast_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/shipwreck_supply"
    },
    "shipwreck_treasure": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 90
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald",
              "weight": 40
            },
            {
              "type": "item",
              "name": "diamond",
              "weight": 5
            },
            {
              "type": "item",
              "name": "experience_bottle",
              "weight": 5
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 6,
            "min": 3
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_nugget",
              "weight": 50
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_nugget",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "lapis_lazuli",
              "weight": 20
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 5,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 2,
                  "function": "set_count"
                }
              ],
              "name": "coast_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/shipwreck_treasure"
    },
    "simple_dungeon": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "saddle",
              "weight": 20
            },
            {
              "type": "item",
              "name": "golden_apple",
              "weight": 15
            },
            {
              "type": "item",
              "name": "enchanted_golden_apple",
              "weight": 2
            },
            {
              "type": "item",
              "name": "music_disc_otherside",
              "weight": 2
            },
            {
              "type": "item",
              "name": "music_disc_13",
              "weight": 15
            },
            {
              "type": "item",
              "name": "music_disc_cat",
              "weight": 15
            },
            {
              "type": "item",
              "name": "name_tag",
              "weight": 20
            },
            {
              "type": "item",
              "name": "golden_horse_armor",
              "weight": 10
            },
            {
              "type": "item",
              "name": "iron_horse_armor",
              "weight": 15
            },
            {
              "type": "item",
              "name": "diamond_horse_armor",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "book",
              "weight": 10
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 1
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 5
            },
            {
              "type": "item",
              "name": "bread",
              "weight": 20
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat",
              "weight": 20
            },
            {
              "type": "item",
              "name": "bucket",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "redstone",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "melon_seeds",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "pumpkin_seeds",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "beetroot_seeds",
              "weight": 10
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 4,
            "min": 1
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bone",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gunpowder",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "rotten_flesh",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "string",
              "weight": 10
            }
          ],
          "rolls": 3
        }
      ],
      "random_sequence": "chests/simple_dungeon"
    },
    "spawn_bonus_chest": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "stone_axe"
            },
            {
              "type": "item",
              "name": "wooden_axe",
              "weight": 3
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "stone_pickaxe"
            },
            {
              "type": "item",
              "name": "wooden_pickaxe",
              "weight": 3
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "apple",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "salmon",
              "weight": 3
            }
          ],
          "rolls": 3
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 12,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "stick",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 12,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "oak_planks",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "oak_log",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "spruce_log",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "birch_log",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "jungle_log",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "acacia_log",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "dark_oak_log",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "mangrove_log",
              "weight": 3
            }
          ],
          "rolls": 4
        }
      ],
      "random_sequence": "chests/spawn_bonus_chest"
    },
    "stronghold_corridor": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "ender_pearl",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 9,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "redstone",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "apple",
              "weight": 15
            },
            {
              "type": "item",
              "name": "iron_pickaxe",
              "weight": 5
            },
            {
              "type": "item",
              "name": "iron_sword",
              "weight": 5
            },
            {
              "type": "item",
              "name": "iron_chestplate",
              "weight": 5
            },
            {
              "type": "item",
              "name": "iron_helmet",
              "weight": 5
            },
            {
              "type": "item",
              "name": "iron_leggings",
              "weight": 5
            },
            {
              "type": "item",
              "name": "iron_boots",
              "weight": 5
            },
            {
              "type": "item",
              "name": "golden_apple"
            },
            {
              "type": "item",
              "name": "saddle"
            },
            {
              "type": "item",
              "name": "iron_horse_armor"
            },
            {
              "type": "item",
              "name": "golden_horse_armor"
            },
            {
              "type": "item",
              "name": "diamond_horse_armor"
            },
            {
              "type": "item",
              "name": "music_disc_otherside"
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": 30,
                  "options": "#on_random_loot"
                }
              ],
              "name": "book"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 9
            },
            {
              "type": "item",
              "name": "eye_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/stronghold_corridor"
    },
    "stronghold_crossing": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 9,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "redstone",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "apple",
              "weight": 15
            },
            {
              "type": "item",
              "name": "iron_pickaxe"
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": 30,
                  "options": "#on_random_loot"
                }
              ],
              "name": "book"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 4,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/stronghold_crossing"
    },
    "stronghold_library": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "book",
              "weight": 20
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "paper",
              "weight": 20
            },
            {
              "type": "item",
              "name": "map"
            },
            {
              "type": "item",
              "name": "compass"
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": 30,
                  "options": "#on_random_loot"
                }
              ],
              "name": "book",
              "weight": 10
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 10,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "eye_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/stronghold_library"
    },
    "trial_chambers_corridor": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.9,
                    "min": 0.4
                  },
                  "function": "set_damage"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_axe"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "honeycomb"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.8,
                    "min": 0.15
                  },
                  "function": "set_damage"
                }
              ],
              "name": "stone_axe",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.8,
                    "min": 0.15
                  },
                  "function": "set_damage"
                }
              ],
              "name": "stone_pickaxe",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "ender_pearl",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bamboo_hanging_sign",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "bamboo_planks",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "scaffolding",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "torch",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 20,
                    "min": 8
                  },
                  "function": "set_count"
                }
              ],
              "name": "tuff",
              "weight": 3
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/trial_chambers/corridor"
    },
    "trial_chambers_entrance": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "trial_key"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "stick",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "wooden_axe",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "honeycomb",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 5
                  },
                  "function": "set_count"
                }
              ],
              "name": "arrow",
              "weight": 10
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 2
          }
        }
      ],
      "random_sequence": "chests/trial_chambers/entrance"
    },
    "trial_chambers_intersection": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "diamond_block"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald_block",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.5,
                    "min": 0.1
                  },
                  "function": "set_damage"
                }
              ],
              "name": "diamond_axe",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.5,
                    "min": 0.1
                  },
                  "function": "set_damage"
                }
              ],
              "name": "diamond_pickaxe",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "cake",
              "weight": 20
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 20,
                    "min": 8
                  },
                  "function": "set_count"
                }
              ],
              "name": "amethyst_shard",
              "weight": 20
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_block",
              "weight": 20
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/trial_chambers/intersection"
    },
    "trial_chambers_intersection_barrel": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.9,
                    "min": 0.4
                  },
                  "function": "set_damage"
                },
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_axe"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.8,
                    "min": 0.15
                  },
                  "function": "set_damage"
                }
              ],
              "name": "diamond_pickaxe"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.8,
                    "min": 0.15
                  },
                  "function": "set_damage"
                }
              ],
              "name": "compass"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bucket"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.8,
                    "min": 0.15
                  },
                  "function": "set_damage"
                }
              ],
              "name": "golden_axe",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.8,
                    "min": 0.15
                  },
                  "function": "set_damage"
                }
              ],
              "name": "golden_pickaxe",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 15,
                    "min": 5
                  },
                  "function": "set_count"
                }
              ],
              "name": "bamboo_planks",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 6
                  },
                  "function": "set_count"
                }
              ],
              "name": "baked_potato",
              "weight": 10
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/trial_chambers/intersection_barrel"
    },
    "trial_chambers_reward": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "loot_table",
              "value": "chests/trial_chambers/reward_rare",
              "weight": 8
            },
            {
              "type": "loot_table",
              "value": "chests/trial_chambers/reward_common",
              "weight": 2
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "loot_table",
              "value": "chests/trial_chambers/reward_common"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 1
          }
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "chance": 0.25,
              "condition": "random_chance"
            }
          ],
          "entries": [
            {
              "type": "loot_table",
              "value": "chests/trial_chambers/reward_unique"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/trial_chambers/reward"
    },
    "trial_chambers_reward_common": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "arrow",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 2
                  },
                  "function": "set_count"
                },
                {
                  "function": "set_potion",
                  "id": "poison"
                }
              ],
              "name": "tipped_arrow",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "wind_charge",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "honey_bottle",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "amplifier": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_ominous_bottle_amplifier"
                }
              ],
              "name": "ominous_bottle",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 12,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "wind_charge"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/trial_chambers/reward_common"
    },
    "trial_chambers_reward_ominous": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "loot_table",
              "value": "chests/trial_chambers/reward_ominous_rare",
              "weight": 8
            },
            {
              "type": "loot_table",
              "value": "chests/trial_chambers/reward_ominous_common",
              "weight": 2
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "loot_table",
              "value": "chests/trial_chambers/reward_ominous_common"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 1
          }
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "chance": 0.75,
              "condition": "random_chance"
            }
          ],
          "entries": [
            {
              "type": "loot_table",
              "value": "chests/trial_chambers/reward_ominous_unique"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/trial_chambers/reward_ominous"
    },
    "trial_chambers_reward_ominous_common": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 12,
                    "min": 8
                  },
                  "function": "set_count"
                }
              ],
              "name": "wind_charge",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 12,
                    "min": 4
                  },
                  "function": "set_count"
                },
                {
                  "function": "set_potion",
                  "id": "strong_slowness"
                }
              ],
              "name": "tipped_arrow",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "amplifier": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_ominous_bottle_amplifier"
                }
              ],
              "name": "ominous_bottle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/trial_chambers/reward_ominous_common"
    },
    "trial_chambers_reward_ominous_rare": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "emerald_block",
              "weight": 5
            },
            {
              "type": "item",
              "name": "iron_block",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 20,
                    "min": 5
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "crossbow",
              "weight": 4
            },
            {
              "type": "item",
              "name": "golden_apple",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 20,
                    "min": 10
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_axe",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 20,
                    "min": 10
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_chestplate",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": [
                    "knockback",
                    "punch",
                    "smite",
                    "looting",
                    "multishot"
                  ]
                }
              ],
              "name": "book",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": [
                    "breach",
                    "density"
                  ]
                }
              ],
              "name": "book",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "enchantments": {
                    "wind_burst": 1
                  },
                  "function": "set_enchantments"
                }
              ],
              "name": "book",
              "weight": 2
            },
            {
              "type": "item",
              "name": "diamond_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/trial_chambers/reward_ominous_rare"
    },
    "trial_chambers_reward_ominous_unique": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "enchanted_golden_apple",
              "weight": 3
            },
            {
              "type": "item",
              "name": "flow_armor_trim_smithing_template",
              "weight": 3
            },
            {
              "type": "item",
              "name": "flow_banner_pattern",
              "weight": 2
            },
            {
              "type": "item",
              "name": "music_disc_creator"
            },
            {
              "type": "item",
              "name": "heavy_core"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/trial_chambers/reward_ominous_unique"
    },
    "trial_chambers_reward_rare": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0.5
                  },
                  "function": "set_damage"
                }
              ],
              "name": "shield",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 15,
                    "min": 5
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "bow",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 20,
                    "min": 5
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "crossbow",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 10,
                    "min": 0
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_axe",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 10,
                    "min": 0
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "iron_chestplate",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "golden_carrot",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": [
                    "sharpness",
                    "bane_of_arthropods",
                    "efficiency",
                    "fortune",
                    "silk_touch",
                    "feather_falling"
                  ]
                }
              ],
              "name": "book",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": [
                    "riptide",
                    "loyalty",
                    "channeling",
                    "impaling",
                    "mending"
                  ]
                }
              ],
              "name": "book",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 15,
                    "min": 5
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_chestplate"
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_with_levels",
                  "levels": {
                    "type": "uniform",
                    "max": 15,
                    "min": 5
                  },
                  "options": "#on_random_loot"
                }
              ],
              "name": "diamond_axe"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/trial_chambers/reward_rare"
    },
    "trial_chambers_reward_unique": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "golden_apple",
              "weight": 4
            },
            {
              "type": "item",
              "name": "bolt_armor_trim_smithing_template",
              "weight": 3
            },
            {
              "type": "item",
              "name": "guster_banner_pattern",
              "weight": 2
            },
            {
              "type": "item",
              "name": "music_disc_precipice",
              "weight": 2
            },
            {
              "type": "item",
              "name": "trident"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/trial_chambers/reward_unique"
    },
    "trial_chambers_supply": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 14,
                    "min": 4
                  },
                  "function": "set_count"
                }
              ],
              "name": "arrow",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 4
                  },
                  "function": "set_count"
                },
                {
                  "function": "set_potion",
                  "id": "poison"
                }
              ],
              "name": "tipped_arrow"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 4
                  },
                  "function": "set_count"
                },
                {
                  "function": "set_potion",
                  "id": "slowness"
                }
              ],
              "name": "tipped_arrow"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "baked_potato",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "glow_berries",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "acacia_planks"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "moss_block"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "bone_meal"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 10,
                    "min": 5
                  },
                  "function": "set_count"
                }
              ],
              "name": "tuff"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "torch"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "set_potion",
                  "id": "regeneration"
                }
              ],
              "name": "potion"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "set_potion",
                  "id": "strength"
                }
              ],
              "name": "potion"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "damage": {
                    "type": "uniform",
                    "max": 0.8,
                    "min": 0.15
                  },
                  "function": "set_damage"
                }
              ],
              "name": "stone_pickaxe",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "milk_bucket"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 5,
            "min": 3
          }
        }
      ],
      "random_sequence": "chests/trial_chambers/supply"
    },
    "underwater_ruin_big": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_nugget",
              "weight": 10
            },
            {
              "type": "item",
              "name": "emerald"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat",
              "weight": 10
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "golden_apple"
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "book",
              "weight": 5
            },
            {
              "type": "item",
              "name": "leather_chestplate"
            },
            {
              "type": "item",
              "name": "golden_helmet"
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "fishing_rod",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "decoration": "red_x",
                  "function": "exploration_map",
                  "skip_existing_chunks": false,
                  "zoom": 1
                },
                {
                  "function": "set_name",
                  "name": {
                    "translate": "filled_map.buried_treasure"
                  },
                  "target": "item_name"
                }
              ],
              "name": "map",
              "weight": 10
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/underwater_ruin_big"
    },
    "underwater_ruin_small": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 10
            },
            {
              "type": "item",
              "name": "stone_axe",
              "weight": 2
            },
            {
              "type": "item",
              "name": "rotten_flesh",
              "weight": 5
            },
            {
              "type": "item",
              "name": "emerald"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat",
              "weight": 10
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 2
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "leather_chestplate"
            },
            {
              "type": "item",
              "name": "golden_helmet"
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "fishing_rod",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "decoration": "red_x",
                  "function": "exploration_map",
                  "skip_existing_chunks": false,
                  "zoom": 1
                },
                {
                  "function": "set_name",
                  "name": {
                    "translate": "filled_map.buried_treasure"
                  },
                  "target": "item_name"
                }
              ],
              "name": "map",
              "weight": 5
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/underwater_ruin_small"
    },
    "village_armorer": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 4
            },
            {
              "type": "item",
              "name": "iron_helmet"
            },
            {
              "type": "item",
              "name": "emerald"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 5,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/village/village_armorer"
    },
    "village_butcher": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "emerald"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "porkchop",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "beef",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "mutton",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 3
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 5,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/village/village_butcher"
    },
    "village_cartographer": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "map",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "paper",
              "weight": 15
            },
            {
              "type": "item",
              "name": "compass",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "stick",
              "weight": 5
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 5,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/village/village_cartographer"
    },
    "village_desert_house": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "clay_ball"
            },
            {
              "type": "item",
              "name": "green_dye"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "cactus",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 10
            },
            {
              "type": "item",
              "name": "book"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "dead_bush",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 3
          }
        }
      ],
      "random_sequence": "chests/village/village_desert_house"
    },
    "village_fisher": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "emerald"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "cod",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "salmon"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "water_bucket"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "barrel"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat_seeds",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 2
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 5,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/village/village_fisher"
    },
    "village_fletcher": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "emerald"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "arrow",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "feather",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "egg",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "flint",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "stick",
              "weight": 6
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 5,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/village/village_fletcher"
    },
    "village_mason": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "clay_ball"
            },
            {
              "type": "item",
              "name": "flower_pot"
            },
            {
              "type": "item",
              "name": "stone",
              "weight": 2
            },
            {
              "type": "item",
              "name": "stone_bricks",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 4
            },
            {
              "type": "item",
              "name": "yellow_dye"
            },
            {
              "type": "item",
              "name": "smooth_stone"
            },
            {
              "type": "item",
              "name": "emerald"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 5,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/village/village_mason"
    },
    "village_plains_house": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_nugget"
            },
            {
              "type": "item",
              "name": "dandelion",
              "weight": 2
            },
            {
              "type": "item",
              "name": "poppy"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "potato",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "apple",
              "weight": 10
            },
            {
              "type": "item",
              "name": "book"
            },
            {
              "type": "item",
              "name": "feather"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "oak_sapling",
              "weight": 5
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 3
          }
        }
      ],
      "random_sequence": "chests/village/village_plains_house"
    },
    "village_savanna_house": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_nugget"
            },
            {
              "type": "item",
              "name": "short_grass",
              "weight": 5
            },
            {
              "type": "item",
              "name": "tall_grass",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat_seeds",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "acacia_sapling",
              "weight": 10
            },
            {
              "type": "item",
              "name": "saddle"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "torch"
            },
            {
              "type": "item",
              "name": "bucket"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 3
          }
        }
      ],
      "random_sequence": "chests/village/village_savanna_house"
    },
    "village_shepherd": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "white_wool",
              "weight": 6
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "black_wool",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gray_wool",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "brown_wool",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "light_gray_wool",
              "weight": 2
            },
            {
              "type": "item",
              "name": "emerald"
            },
            {
              "type": "item",
              "name": "shears"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 6,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat",
              "weight": 6
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 5,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/village/village_shepherd"
    },
    "village_snowy_house": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "blue_ice"
            },
            {
              "type": "item",
              "name": "snow_block",
              "weight": 4
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "potato",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "beetroot_seeds",
              "weight": 10
            },
            {
              "type": "item",
              "name": "beetroot_soup"
            },
            {
              "type": "item",
              "name": "furnace"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "snowball",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 5
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 3
          }
        }
      ],
      "random_sequence": "chests/village/village_snowy_house"
    },
    "village_taiga_house": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_nugget"
            },
            {
              "type": "item",
              "name": "fern",
              "weight": 2
            },
            {
              "type": "item",
              "name": "large_fern",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "potato",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "sweet_berries",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "pumpkin_seeds",
              "weight": 5
            },
            {
              "type": "item",
              "name": "pumpkin_pie"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "spruce_sapling",
              "weight": 5
            },
            {
              "type": "item",
              "name": "spruce_sign"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "spruce_log",
              "weight": 10
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 3
          }
        }
      ],
      "random_sequence": "chests/village/village_taiga_house"
    },
    "village_tannery": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "leather"
            },
            {
              "type": "item",
              "name": "leather_chestplate",
              "weight": 2
            },
            {
              "type": "item",
              "name": "leather_boots",
              "weight": 2
            },
            {
              "type": "item",
              "name": "leather_helmet",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 5
            },
            {
              "type": "item",
              "name": "leather_leggings",
              "weight": 2
            },
            {
              "type": "item",
              "name": "saddle"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 5,
            "min": 1
          }
        }
      ],
      "random_sequence": "chests/village/village_tannery"
    },
    "village_temple": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "redstone",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 7
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "rotten_flesh",
              "weight": 7
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "lapis_lazuli"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "emerald"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 3
          }
        }
      ],
      "random_sequence": "chests/village/village_temple"
    },
    "village_toolsmith": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 15
            },
            {
              "type": "item",
              "name": "iron_pickaxe",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "stick",
              "weight": 20
            },
            {
              "type": "item",
              "name": "iron_shovel",
              "weight": 5
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 3
          }
        }
      ],
      "random_sequence": "chests/village/village_toolsmith"
    },
    "village_weaponsmith": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "diamond",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bread",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "apple",
              "weight": 15
            },
            {
              "type": "item",
              "name": "iron_pickaxe",
              "weight": 5
            },
            {
              "type": "item",
              "name": "iron_sword",
              "weight": 5
            },
            {
              "type": "item",
              "name": "iron_chestplate",
              "weight": 5
            },
            {
              "type": "item",
              "name": "iron_helmet",
              "weight": 5
            },
            {
              "type": "item",
              "name": "iron_leggings",
              "weight": 5
            },
            {
              "type": "item",
              "name": "iron_boots",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "obsidian",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 7,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "oak_sapling",
              "weight": 5
            },
            {
              "type": "item",
              "name": "saddle",
              "weight": 3
            },
            {
              "type": "item",
              "name": "iron_horse_armor"
            },
            {
              "type": "item",
              "name": "golden_horse_armor"
            },
            {
              "type": "item",
              "name": "diamond_horse_armor"
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 8,
            "min": 3
          }
        }
      ],
      "random_sequence": "chests/village/village_weaponsmith"
    },
    "woodland_mansion": {
      "type": "chest",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "lead",
              "weight": 20
            },
            {
              "type": "item",
              "name": "golden_apple",
              "weight": 15
            },
            {
              "type": "item",
              "name": "enchanted_golden_apple",
              "weight": 2
            },
            {
              "type": "item",
              "name": "music_disc_13",
              "weight": 15
            },
            {
              "type": "item",
              "name": "music_disc_cat",
              "weight": 15
            },
            {
              "type": "item",
              "name": "name_tag",
              "weight": 20
            },
            {
              "type": "item",
              "name": "chainmail_chestplate",
              "weight": 10
            },
            {
              "type": "item",
              "name": "diamond_hoe",
              "weight": 15
            },
            {
              "type": "item",
              "name": "diamond_chestplate",
              "weight": 5
            },
            {
              "type": "item",
              "functions": [
                {
                  "function": "enchant_randomly",
                  "options": "#on_random_loot"
                }
              ],
              "name": "book",
              "weight": 10
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 1
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gold_ingot",
              "weight": 5
            },
            {
              "type": "item",
              "name": "bread",
              "weight": 20
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "wheat",
              "weight": 20
            },
            {
              "type": "item",
              "name": "bucket",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "redstone",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "coal",
              "weight": 15
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "melon_seeds",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "pumpkin_seeds",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "beetroot_seeds",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                }
              ],
              "name": "resin_clump",
              "weight": 50
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 4,
            "min": 1
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "bone",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "gunpowder",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "rotten_flesh",
              "weight": 10
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 1
                  },
                  "function": "set_count"
                }
              ],
              "name": "string",
              "weight": 10
            }
          ],
          "rolls": 3
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty"
            },
            {
              "type": "item",
              "name": "vex_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "chests/woodland_mansion"
    }
  };
  function isChest(value) {
    return value in chestLoot;
  }

  // src/view/transformation/entityLoot.ts
  var entityLoot = {
    "allay": {
      "type": "entity",
      "random_sequence": "entities/allay"
    },
    "armadillo": {
      "type": "entity",
      "random_sequence": "entities/armadillo"
    },
    "armor_stand_entity": {
      "type": "entity",
      "random_sequence": "entities/armor_stand"
    },
    "axolotl": {
      "type": "entity",
      "random_sequence": "entities/axolotl"
    },
    "bat": {
      "type": "entity",
      "random_sequence": "entities/bat"
    },
    "bee": {
      "type": "entity",
      "random_sequence": "entities/bee"
    },
    "blaze": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "blaze_rod"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/blaze"
    },
    "bogged": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "arrow"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "bone"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase",
                  "limit": 1
                },
                {
                  "function": "set_potion",
                  "id": "poison"
                }
              ],
              "name": "tipped_arrow"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/bogged"
    },
    "breeze": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "breeze_rod"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/breeze"
    },
    "camel": {
      "type": "entity",
      "random_sequence": "entities/camel"
    },
    "cat": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                }
              ],
              "name": "string"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/cat"
    },
    "cave_spider": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "string"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": -1
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "spider_eye"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/cave_spider"
    },
    "chicken_entity": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "feather"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "chicken"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/chicken"
    },
    "cod_entity": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                }
              ],
              "name": "cod"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "chance": 0.05,
              "condition": "random_chance"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bone_meal"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/cod"
    },
    "cow": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "leather"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "beef"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/cow"
    },
    "creaking": {
      "type": "entity",
      "random_sequence": "entities/creaking"
    },
    "creeper": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "gunpowder"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "entity_properties",
              "entity": "attacker",
              "predicate": {
                "type": "#skeletons"
              }
            }
          ],
          "entries": [
            {
              "type": "tag",
              "expand": true,
              "name": "creeper_drop_music_discs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/creeper"
    },
    "dolphin": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                },
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                }
              ],
              "name": "cod"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/dolphin"
    },
    "donkey": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "leather"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/donkey"
    },
    "drowned": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "rotten_flesh"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            },
            {
              "condition": "random_chance_with_enchanted_bonus",
              "enchanted_chance": {
                "type": "linear",
                "base": 0.13,
                "per_level_above_first": 0.02
              },
              "enchantment": "looting",
              "unenchanted_chance": 0.11
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "copper_ingot"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/drowned"
    },
    "elder_guardian": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "prismarine_shard"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                },
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                }
              ],
              "name": "cod",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "prismarine_crystals",
              "weight": 2
            },
            {
              "type": "empty"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "wet_sponge"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            },
            {
              "condition": "random_chance_with_enchanted_bonus",
              "enchanted_chance": {
                "type": "linear",
                "base": 0.035,
                "per_level_above_first": 0.01
              },
              "enchantment": "looting",
              "unenchanted_chance": 0.025
            }
          ],
          "entries": [
            {
              "type": "loot_table",
              "functions": [
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                }
              ],
              "value": "gameplay/fishing/fish"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "empty",
              "weight": 4
            },
            {
              "type": "item",
              "name": "tide_armor_trim_smithing_template"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/elder_guardian"
    },
    "enderman": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "ender_pearl"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/enderman"
    },
    "endermite": {
      "type": "entity",
      "random_sequence": "entities/endermite"
    },
    "ender_dragon": {
      "type": "entity",
      "random_sequence": "entities/ender_dragon"
    },
    "evoker": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "totem_of_undying"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "emerald"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/evoker"
    },
    "fox": {
      "type": "entity",
      "random_sequence": "entities/fox"
    },
    "frog": {
      "type": "entity",
      "random_sequence": "entities/frog"
    },
    "ghast": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "ghast_tear"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "gunpowder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/ghast"
    },
    "giant": {
      "type": "entity",
      "random_sequence": "entities/giant"
    },
    "glow_squid": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "glow_ink_sac"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/glow_squid"
    },
    "goat": {
      "type": "entity",
      "random_sequence": "entities/goat"
    },
    "guardian": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "prismarine_shard"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                },
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                }
              ],
              "name": "cod",
              "weight": 2
            },
            {
              "type": "item",
              "functions": [
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "prismarine_crystals",
              "weight": 2
            },
            {
              "type": "empty"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            },
            {
              "condition": "random_chance_with_enchanted_bonus",
              "enchanted_chance": {
                "type": "linear",
                "base": 0.035,
                "per_level_above_first": 0.01
              },
              "enchantment": "looting",
              "unenchanted_chance": 0.025
            }
          ],
          "entries": [
            {
              "type": "loot_table",
              "functions": [
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                }
              ],
              "value": "gameplay/fishing/fish"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/guardian"
    },
    "hoglin": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                },
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "porkchop"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "leather"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/hoglin"
    },
    "horse": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "leather"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/horse"
    },
    "husk": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "rotten_flesh"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            },
            {
              "condition": "random_chance_with_enchanted_bonus",
              "enchanted_chance": {
                "type": "linear",
                "base": 0.035,
                "per_level_above_first": 0.01
              },
              "enchantment": "looting",
              "unenchanted_chance": 0.025
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "iron_ingot"
            },
            {
              "type": "item",
              "name": "carrot"
            },
            {
              "type": "item",
              "functions": [
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                }
              ],
              "name": "potato"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/husk"
    },
    "illusioner": {
      "type": "entity",
      "random_sequence": "entities/illusioner"
    },
    "iron_golem": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                }
              ],
              "name": "poppy"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 3
                  },
                  "function": "set_count"
                }
              ],
              "name": "iron_ingot"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/iron_golem"
    },
    "llama": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "leather"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/llama"
    },
    "magma_cube": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "condition": "inverted",
                  "term": {
                    "condition": "damage_source_properties",
                    "predicate": {
                      "source_entity": {
                        "type": "frog"
                      }
                    }
                  }
                },
                {
                  "condition": "entity_properties",
                  "entity": "this",
                  "predicate": {
                    "type_specific": {
                      "type": "slime",
                      "size": {
                        "min": 2
                      }
                    }
                  }
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": -2
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "magma_cream"
            },
            {
              "type": "item",
              "conditions": [
                {
                  "condition": "damage_source_properties",
                  "predicate": {
                    "source_entity": {
                      "type": "frog",
                      "type_specific": {
                        "type": "frog",
                        "variant": "warm"
                      }
                    }
                  }
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "pearlescent_froglight"
            },
            {
              "type": "item",
              "conditions": [
                {
                  "condition": "damage_source_properties",
                  "predicate": {
                    "source_entity": {
                      "type": "frog",
                      "type_specific": {
                        "type": "frog",
                        "variant": "cold"
                      }
                    }
                  }
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "verdant_froglight"
            },
            {
              "type": "item",
              "conditions": [
                {
                  "condition": "damage_source_properties",
                  "predicate": {
                    "source_entity": {
                      "type": "frog",
                      "type_specific": {
                        "type": "frog",
                        "variant": "temperate"
                      }
                    }
                  }
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "ochre_froglight"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/magma_cube"
    },
    "mooshroom": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "leather"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "beef"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/mooshroom"
    },
    "mule": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "leather"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/mule"
    },
    "ocelot": {
      "type": "entity",
      "random_sequence": "entities/ocelot"
    },
    "panda": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "bamboo"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/panda"
    },
    "parrot": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "feather"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/parrot"
    },
    "phantom": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "phantom_membrane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/phantom"
    },
    "pig": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "porkchop"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/pig"
    },
    "piglin": {
      "type": "entity",
      "random_sequence": "entities/piglin"
    },
    "piglin_brute": {
      "type": "entity",
      "random_sequence": "entities/piglin_brute"
    },
    "pillager": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "entity_properties",
              "entity": "this",
              "predicate": {
                "type_specific": {
                  "type": "raider",
                  "is_captain": true
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "amplifier": {
                    "type": "uniform",
                    "max": 4,
                    "min": 0
                  },
                  "function": "set_ominous_bottle_amplifier"
                }
              ],
              "name": "ominous_bottle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/pillager"
    },
    "player": {
      "type": "entity",
      "random_sequence": "entities/player"
    },
    "polar_bear": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                },
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "cod",
              "weight": 3
            },
            {
              "type": "item",
              "functions": [
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                },
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "salmon"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/polar_bear"
    },
    "pufferfish_entity": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "pufferfish"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "chance": 0.05,
              "condition": "random_chance"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bone_meal"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/pufferfish"
    },
    "rabbit_entity": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "rabbit_hide"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "rabbit"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            },
            {
              "condition": "random_chance_with_enchanted_bonus",
              "enchanted_chance": {
                "type": "linear",
                "base": 0.13,
                "per_level_above_first": 0.03
              },
              "enchantment": "looting",
              "unenchanted_chance": 0.1
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "rabbit_foot"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/rabbit"
    },
    "ravager": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "saddle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/ravager"
    },
    "salmon_entity": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                }
              ],
              "name": "salmon"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "chance": 0.05,
              "condition": "random_chance"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bone_meal"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/salmon"
    },
    "sheep": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "mutton"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "white",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/white"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "orange",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/orange"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "magenta",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/magenta"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "light_blue",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/light_blue"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "yellow",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/yellow"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "lime",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/lime"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "pink",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/pink"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "gray",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/gray"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "light_gray",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/light_gray"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "cyan",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/cyan"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "purple",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/purple"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "blue",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/blue"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "brown",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/brown"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "green",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/green"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "red",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/red"
                },
                {
                  "type": "loot_table",
                  "conditions": [
                    {
                      "condition": "entity_properties",
                      "entity": "this",
                      "predicate": {
                        "type_specific": {
                          "type": "sheep",
                          "color": "black",
                          "sheared": false
                        }
                      }
                    }
                  ],
                  "value": "entities/sheep/black"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/sheep"
    },
    "shulker": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "random_chance_with_enchanted_bonus",
              "enchanted_chance": {
                "type": "linear",
                "base": 0.5625,
                "per_level_above_first": 0.0625
              },
              "enchantment": "looting",
              "unenchanted_chance": 0.5
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "shulker_shell"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/shulker"
    },
    "silverfish": {
      "type": "entity",
      "random_sequence": "entities/silverfish"
    },
    "skeleton": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "arrow"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "bone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/skeleton"
    },
    "skeleton_horse": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "bone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/skeleton_horse"
    },
    "slime": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "entity_properties",
              "entity": "this",
              "predicate": {
                "type_specific": {
                  "type": "slime",
                  "size": 1
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "condition": "inverted",
                  "term": {
                    "condition": "damage_source_properties",
                    "predicate": {
                      "source_entity": {
                        "type": "frog"
                      }
                    }
                  }
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "slime_ball"
            },
            {
              "type": "item",
              "conditions": [
                {
                  "condition": "damage_source_properties",
                  "predicate": {
                    "source_entity": {
                      "type": "frog"
                    }
                  }
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "slime_ball"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/slime"
    },
    "sniffer": {
      "type": "entity",
      "random_sequence": "entities/sniffer"
    },
    "snow_golem": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 15,
                    "min": 0
                  },
                  "function": "set_count"
                }
              ],
              "name": "snowball"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/snow_golem"
    },
    "spider": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "string"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": -1
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "spider_eye"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/spider"
    },
    "squid": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "ink_sac"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/squid"
    },
    "stray": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "arrow"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "bone"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase",
                  "limit": 1
                },
                {
                  "function": "set_potion",
                  "id": "slowness"
                }
              ],
              "name": "tipped_arrow"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/stray"
    },
    "strider": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 5,
                    "min": 2
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "string"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/strider"
    },
    "tadpole": {
      "type": "entity",
      "random_sequence": "entities/tadpole"
    },
    "trader_llama": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "leather"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/trader_llama"
    },
    "tropical_fish_entity": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 1,
                  "function": "set_count"
                }
              ],
              "name": "tropical_fish"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "chance": 0.05,
              "condition": "random_chance"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bone_meal"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/tropical_fish"
    },
    "turtle": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "seagrass",
              "weight": 3
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "damage_source_properties",
              "predicate": {
                "tags": [
                  {
                    "expected": true,
                    "id": "is_lightning"
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bowl"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/turtle"
    },
    "vex": {
      "type": "entity",
      "random_sequence": "entities/vex"
    },
    "villager": {
      "type": "entity",
      "random_sequence": "entities/villager"
    },
    "vindicator": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "emerald"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/vindicator"
    },
    "wandering_trader": {
      "type": "entity",
      "random_sequence": "entities/wandering_trader"
    },
    "warden": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "sculk_catalyst"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/warden"
    },
    "witch": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "glowstone_dust"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "sugar"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "spider_eye"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "glass_bottle"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "gunpowder"
            },
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "stick",
              "weight": 2
            }
          ],
          "rolls": {
            "type": "uniform",
            "max": 3,
            "min": 1
          }
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 8,
                    "min": 4
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "redstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/witch"
    },
    "wither": {
      "type": "entity",
      "random_sequence": "entities/wither"
    },
    "wither_skeleton": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": -1
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "coal"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "bone"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            },
            {
              "condition": "random_chance_with_enchanted_bonus",
              "enchanted_chance": {
                "type": "linear",
                "base": 0.035,
                "per_level_above_first": 0.01
              },
              "enchantment": "looting",
              "unenchanted_chance": 0.025
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "wither_skeleton_skull"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/wither_skeleton"
    },
    "wolf": {
      "type": "entity",
      "random_sequence": "entities/wolf"
    },
    "zoglin": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 3,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "rotten_flesh"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/zoglin"
    },
    "zombie": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "rotten_flesh"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            },
            {
              "condition": "random_chance_with_enchanted_bonus",
              "enchanted_chance": {
                "type": "linear",
                "base": 0.035,
                "per_level_above_first": 0.01
              },
              "enchantment": "looting",
              "unenchanted_chance": 0.025
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "iron_ingot"
            },
            {
              "type": "item",
              "name": "carrot"
            },
            {
              "type": "item",
              "functions": [
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                }
              ],
              "name": "potato"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/zombie"
    },
    "zombie_horse": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "rotten_flesh"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/zombie_horse"
    },
    "zombie_villager": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "rotten_flesh"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            },
            {
              "condition": "random_chance_with_enchanted_bonus",
              "enchanted_chance": {
                "type": "linear",
                "base": 0.035,
                "per_level_above_first": 0.01
              },
              "enchantment": "looting",
              "unenchanted_chance": 0.025
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "iron_ingot"
            },
            {
              "type": "item",
              "name": "carrot"
            },
            {
              "type": "item",
              "functions": [
                {
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "entity_properties",
                          "entity": "this",
                          "predicate": {
                            "flags": {
                              "is_on_fire": true
                            }
                          }
                        },
                        {
                          "condition": "entity_properties",
                          "entity": "direct_attacker",
                          "predicate": {
                            "equipment": {
                              "mainhand": {
                                "predicates": {
                                  "enchantments": [
                                    {
                                      "enchantments": "#smelts_loot"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "function": "furnace_smelt"
                }
              ],
              "name": "potato"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/zombie_villager"
    },
    "zombified_piglin": {
      "type": "entity",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "rotten_flesh"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "enchantment": "looting",
                  "function": "enchanted_count_increase"
                }
              ],
              "name": "gold_nugget"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "killed_by_player"
            },
            {
              "condition": "random_chance_with_enchanted_bonus",
              "enchanted_chance": {
                "type": "linear",
                "base": 0.035,
                "per_level_above_first": 0.01
              },
              "enchantment": "looting",
              "unenchanted_chance": 0.025
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "gold_ingot"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "entities/zombified_piglin"
    }
  };
  function isEntity(value) {
    return value in entityLoot;
  }

  // src/view/object/tags.ts
  var tagNames = {
    "#acacia_logs": {
      "values": [
        "acacia_log",
        "acacia_wood",
        "stripped_acacia_log",
        "stripped_acacia_wood"
      ]
    },
    "#anvil": {
      "values": [
        "anvil",
        "chipped_anvil",
        "damaged_anvil"
      ]
    },
    "#armadillo_food": {
      "values": [
        "spider_eye"
      ]
    },
    "#arrows": {
      "values": [
        "arrow",
        "tipped_arrow",
        "spectral_arrow"
      ]
    },
    "#axes": {
      "values": [
        "diamond_axe",
        "stone_axe",
        "golden_axe",
        "netherite_axe",
        "wooden_axe",
        "iron_axe"
      ]
    },
    "#axolotl_food": {
      "values": [
        "tropical_fish_bucket"
      ]
    },
    "#bamboo_blocks": {
      "values": [
        "bamboo_block",
        "stripped_bamboo_block"
      ]
    },
    "#banners": {
      "values": [
        "white_banner",
        "orange_banner",
        "magenta_banner",
        "light_blue_banner",
        "yellow_banner",
        "lime_banner",
        "pink_banner",
        "gray_banner",
        "light_gray_banner",
        "cyan_banner",
        "purple_banner",
        "blue_banner",
        "brown_banner",
        "green_banner",
        "red_banner",
        "black_banner"
      ]
    },
    "#beacon_payment_items": {
      "values": [
        "netherite_ingot",
        "emerald",
        "diamond",
        "gold_ingot",
        "iron_ingot"
      ]
    },
    "#beds": {
      "values": [
        "red_bed",
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "white_bed",
        "yellow_bed"
      ]
    },
    "#bee_food": {
      "values": [
        "dandelion",
        "open_eyeblossom",
        "poppy",
        "blue_orchid",
        "allium",
        "azure_bluet",
        "red_tulip",
        "orange_tulip",
        "white_tulip",
        "pink_tulip",
        "oxeye_daisy",
        "cornflower",
        "lily_of_the_valley",
        "wither_rose",
        "torchflower",
        "sunflower",
        "lilac",
        "peony",
        "rose_bush",
        "pitcher_plant",
        "flowering_azalea_leaves",
        "flowering_azalea",
        "mangrove_propagule",
        "cherry_leaves",
        "pink_petals",
        "chorus_flower",
        "spore_blossom"
      ]
    },
    "#birch_logs": {
      "values": [
        "birch_log",
        "birch_wood",
        "stripped_birch_log",
        "stripped_birch_wood"
      ]
    },
    "#boats": {
      "values": [
        "oak_boat",
        "spruce_boat",
        "birch_boat",
        "jungle_boat",
        "acacia_boat",
        "dark_oak_boat",
        "pale_oak_boat",
        "mangrove_boat",
        "bamboo_raft",
        "cherry_boat",
        "#chest_boats"
      ]
    },
    "#bookshelf_books": {
      "values": [
        "book",
        "written_book",
        "enchanted_book",
        "writable_book",
        "knowledge_book"
      ]
    },
    "#book_cloning_target": {
      "values": [
        "writable_book"
      ]
    },
    "#breaks_decorated_pots": {
      "values": [
        "#swords",
        "#axes",
        "#pickaxes",
        "#shovels",
        "#hoes",
        "trident",
        "mace"
      ]
    },
    "#brewing_fuel": {
      "values": [
        "blaze_powder"
      ]
    },
    "#bundles": {
      "values": [
        "bundle",
        "black_bundle",
        "blue_bundle",
        "brown_bundle",
        "cyan_bundle",
        "gray_bundle",
        "green_bundle",
        "light_blue_bundle",
        "light_gray_bundle",
        "lime_bundle",
        "magenta_bundle",
        "orange_bundle",
        "pink_bundle",
        "purple_bundle",
        "red_bundle",
        "yellow_bundle",
        "white_bundle"
      ]
    },
    "#buttons": {
      "values": [
        "#wooden_buttons",
        "#stone_buttons"
      ]
    },
    "#camel_food": {
      "values": [
        "cactus"
      ]
    },
    "#candles": {
      "values": [
        "candle",
        "white_candle",
        "orange_candle",
        "magenta_candle",
        "light_blue_candle",
        "yellow_candle",
        "lime_candle",
        "pink_candle",
        "gray_candle",
        "light_gray_candle",
        "cyan_candle",
        "purple_candle",
        "blue_candle",
        "brown_candle",
        "green_candle",
        "red_candle",
        "black_candle"
      ]
    },
    "#cat_food": {
      "values": [
        "cod",
        "salmon"
      ]
    },
    "#cherry_logs": {
      "values": [
        "cherry_log",
        "cherry_wood",
        "stripped_cherry_log",
        "stripped_cherry_wood"
      ]
    },
    "#chest_armor": {
      "values": [
        "leather_chestplate",
        "chainmail_chestplate",
        "golden_chestplate",
        "iron_chestplate",
        "diamond_chestplate",
        "netherite_chestplate"
      ]
    },
    "#chest_boats": {
      "values": [
        "oak_chest_boat",
        "spruce_chest_boat",
        "birch_chest_boat",
        "jungle_chest_boat",
        "acacia_chest_boat",
        "dark_oak_chest_boat",
        "pale_oak_chest_boat",
        "mangrove_chest_boat",
        "bamboo_chest_raft",
        "cherry_chest_boat"
      ]
    },
    "#chicken_food": {
      "values": [
        "wheat_seeds",
        "melon_seeds",
        "pumpkin_seeds",
        "beetroot_seeds",
        "torchflower_seeds",
        "pitcher_pod"
      ]
    },
    "#cluster_max_harvestables": {
      "values": [
        "diamond_pickaxe",
        "golden_pickaxe",
        "iron_pickaxe",
        "netherite_pickaxe",
        "stone_pickaxe",
        "wooden_pickaxe"
      ]
    },
    "#coals": {
      "values": [
        "coal",
        "charcoal"
      ]
    },
    "#coal_ores": {
      "values": [
        "coal_ore",
        "deepslate_coal_ore"
      ]
    },
    "#compasses": {
      "values": [
        "compass",
        "recovery_compass"
      ]
    },
    "#completes_find_tree_tutorial": {
      "values": [
        "#logs",
        "#leaves",
        "#wart_blocks"
      ]
    },
    "#copper_ores": {
      "values": [
        "copper_ore",
        "deepslate_copper_ore"
      ]
    },
    "#cow_food": {
      "values": [
        "wheat"
      ]
    },
    "#creeper_drop_music_discs": {
      "values": [
        "music_disc_13",
        "music_disc_cat",
        "music_disc_blocks",
        "music_disc_chirp",
        "music_disc_far",
        "music_disc_mall",
        "music_disc_mellohi",
        "music_disc_stal",
        "music_disc_strad",
        "music_disc_ward",
        "music_disc_11",
        "music_disc_wait"
      ]
    },
    "#creeper_igniters": {
      "values": [
        "flint_and_steel",
        "fire_charge"
      ]
    },
    "#crimson_stems": {
      "values": [
        "crimson_stem",
        "stripped_crimson_stem",
        "crimson_hyphae",
        "stripped_crimson_hyphae"
      ]
    },
    "#dampens_vibrations": {
      "values": [
        "#wool",
        "#wool_carpets"
      ]
    },
    "#dark_oak_logs": {
      "values": [
        "dark_oak_log",
        "dark_oak_wood",
        "stripped_dark_oak_log",
        "stripped_dark_oak_wood"
      ]
    },
    "#decorated_pot_ingredients": {
      "values": [
        "brick",
        "#decorated_pot_sherds"
      ]
    },
    "#decorated_pot_sherds": {
      "values": [
        "angler_pottery_sherd",
        "archer_pottery_sherd",
        "arms_up_pottery_sherd",
        "blade_pottery_sherd",
        "brewer_pottery_sherd",
        "burn_pottery_sherd",
        "danger_pottery_sherd",
        "explorer_pottery_sherd",
        "friend_pottery_sherd",
        "heart_pottery_sherd",
        "heartbreak_pottery_sherd",
        "howl_pottery_sherd",
        "miner_pottery_sherd",
        "mourner_pottery_sherd",
        "plenty_pottery_sherd",
        "prize_pottery_sherd",
        "sheaf_pottery_sherd",
        "shelter_pottery_sherd",
        "skull_pottery_sherd",
        "snort_pottery_sherd",
        "flow_pottery_sherd",
        "guster_pottery_sherd",
        "scrape_pottery_sherd"
      ]
    },
    "#diamond_ores": {
      "values": [
        "diamond_ore",
        "deepslate_diamond_ore"
      ]
    },
    "#diamond_tool_materials": {
      "values": [
        "diamond"
      ]
    },
    "#dirt": {
      "values": [
        "dirt",
        "grass_block",
        "podzol",
        "coarse_dirt",
        "mycelium",
        "rooted_dirt",
        "moss_block",
        "pale_moss_block",
        "mud",
        "muddy_mangrove_roots"
      ]
    },
    "#doors": {
      "values": [
        "#wooden_doors",
        "copper_door",
        "exposed_copper_door",
        "weathered_copper_door",
        "oxidized_copper_door",
        "waxed_copper_door",
        "waxed_exposed_copper_door",
        "waxed_weathered_copper_door",
        "waxed_oxidized_copper_door",
        "iron_door"
      ]
    },
    "#drowned_preferred_weapons": {
      "values": [
        "trident"
      ]
    },
    "#duplicates_allays": {
      "values": [
        "amethyst_shard"
      ]
    },
    "#dyeable": {
      "values": [
        "leather_helmet",
        "leather_chestplate",
        "leather_leggings",
        "leather_boots",
        "leather_horse_armor",
        "wolf_armor"
      ]
    },
    "#emerald_ores": {
      "values": [
        "emerald_ore",
        "deepslate_emerald_ore"
      ]
    },
    "#fences": {
      "values": [
        "#wooden_fences",
        "nether_brick_fence"
      ]
    },
    "#fence_gates": {
      "values": [
        "acacia_fence_gate",
        "birch_fence_gate",
        "dark_oak_fence_gate",
        "pale_oak_fence_gate",
        "jungle_fence_gate",
        "oak_fence_gate",
        "spruce_fence_gate",
        "crimson_fence_gate",
        "warped_fence_gate",
        "mangrove_fence_gate",
        "bamboo_fence_gate",
        "cherry_fence_gate"
      ]
    },
    "#fishes": {
      "values": [
        "cod",
        "cooked_cod",
        "salmon",
        "cooked_salmon",
        "pufferfish",
        "tropical_fish"
      ]
    },
    "#flowers": {
      "values": [
        "#small_flowers",
        "sunflower",
        "lilac",
        "peony",
        "rose_bush",
        "pitcher_plant",
        "flowering_azalea_leaves",
        "flowering_azalea",
        "mangrove_propagule",
        "cherry_leaves",
        "pink_petals",
        "chorus_flower",
        "spore_blossom"
      ]
    },
    "#foot_armor": {
      "values": [
        "leather_boots",
        "chainmail_boots",
        "golden_boots",
        "iron_boots",
        "diamond_boots",
        "netherite_boots"
      ]
    },
    "#fox_food": {
      "values": [
        "sweet_berries",
        "glow_berries"
      ]
    },
    "#freeze_immune_wearables": {
      "values": [
        "leather_boots",
        "leather_leggings",
        "leather_chestplate",
        "leather_helmet",
        "leather_horse_armor"
      ]
    },
    "#frog_food": {
      "values": [
        "slime_ball"
      ]
    },
    "#furnace_minecart_fuel": {
      "values": [
        "coal",
        "charcoal"
      ]
    },
    "#gaze_disguise_equipment": {
      "values": [
        "carved_pumpkin"
      ]
    },
    "#goat_food": {
      "values": [
        "wheat"
      ]
    },
    "#gold_ores": {
      "values": [
        "gold_ore",
        "nether_gold_ore",
        "deepslate_gold_ore"
      ]
    },
    "#gold_tool_materials": {
      "values": [
        "gold_ingot"
      ]
    },
    "#hanging_signs": {
      "values": [
        "oak_hanging_sign",
        "spruce_hanging_sign",
        "birch_hanging_sign",
        "acacia_hanging_sign",
        "cherry_hanging_sign",
        "jungle_hanging_sign",
        "dark_oak_hanging_sign",
        "pale_oak_hanging_sign",
        "crimson_hanging_sign",
        "warped_hanging_sign",
        "mangrove_hanging_sign",
        "bamboo_hanging_sign"
      ]
    },
    "#head_armor": {
      "values": [
        "leather_helmet",
        "chainmail_helmet",
        "golden_helmet",
        "iron_helmet",
        "diamond_helmet",
        "netherite_helmet",
        "turtle_helmet"
      ]
    },
    "#hoes": {
      "values": [
        "diamond_hoe",
        "stone_hoe",
        "golden_hoe",
        "netherite_hoe",
        "wooden_hoe",
        "iron_hoe"
      ]
    },
    "#hoglin_food": {
      "values": [
        "crimson_fungus"
      ]
    },
    "#horse_food": {
      "values": [
        "wheat",
        "sugar",
        "hay_block",
        "apple",
        "golden_carrot",
        "golden_apple",
        "enchanted_golden_apple"
      ]
    },
    "#horse_tempt_items": {
      "values": [
        "golden_carrot",
        "golden_apple",
        "enchanted_golden_apple"
      ]
    },
    "#ignored_by_piglin_babies": {
      "values": [
        "leather"
      ]
    },
    "#iron_ores": {
      "values": [
        "iron_ore",
        "deepslate_iron_ore"
      ]
    },
    "#iron_tool_materials": {
      "values": [
        "iron_ingot"
      ]
    },
    "#jungle_logs": {
      "values": [
        "jungle_log",
        "jungle_wood",
        "stripped_jungle_log",
        "stripped_jungle_wood"
      ]
    },
    "#lapis_ores": {
      "values": [
        "lapis_ore",
        "deepslate_lapis_ore"
      ]
    },
    "#leaves": {
      "values": [
        "jungle_leaves",
        "oak_leaves",
        "spruce_leaves",
        "pale_oak_leaves",
        "dark_oak_leaves",
        "acacia_leaves",
        "birch_leaves",
        "azalea_leaves",
        "flowering_azalea_leaves",
        "mangrove_leaves",
        "cherry_leaves"
      ]
    },
    "#lectern_books": {
      "values": [
        "written_book",
        "writable_book"
      ]
    },
    "#leg_armor": {
      "values": [
        "leather_leggings",
        "chainmail_leggings",
        "golden_leggings",
        "iron_leggings",
        "diamond_leggings",
        "netherite_leggings"
      ]
    },
    "#llama_food": {
      "values": [
        "wheat",
        "hay_block"
      ]
    },
    "#llama_tempt_items": {
      "values": [
        "hay_block"
      ]
    },
    "#logs": {
      "values": [
        "#logs_that_burn",
        "#crimson_stems",
        "#warped_stems"
      ]
    },
    "#logs_that_burn": {
      "values": [
        "#dark_oak_logs",
        "#pale_oak_logs",
        "#oak_logs",
        "#acacia_logs",
        "#birch_logs",
        "#jungle_logs",
        "#spruce_logs",
        "#mangrove_logs",
        "#cherry_logs"
      ]
    },
    "#mangrove_logs": {
      "values": [
        "mangrove_log",
        "mangrove_wood",
        "stripped_mangrove_log",
        "stripped_mangrove_wood"
      ]
    },
    "#map_invisibility_equipment": {
      "values": [
        "carved_pumpkin"
      ]
    },
    "#meat": {
      "values": [
        "beef",
        "chicken",
        "cooked_beef",
        "cooked_chicken",
        "cooked_mutton",
        "cooked_porkchop",
        "cooked_rabbit",
        "mutton",
        "porkchop",
        "rabbit",
        "rotten_flesh"
      ]
    },
    "#netherite_tool_materials": {
      "values": [
        "netherite_ingot"
      ]
    },
    "#non_flammable_wood": {
      "values": [
        "warped_stem",
        "stripped_warped_stem",
        "warped_hyphae",
        "stripped_warped_hyphae",
        "crimson_stem",
        "stripped_crimson_stem",
        "crimson_hyphae",
        "stripped_crimson_hyphae",
        "crimson_planks",
        "warped_planks",
        "crimson_slab",
        "warped_slab",
        "crimson_pressure_plate",
        "warped_pressure_plate",
        "crimson_fence",
        "warped_fence",
        "crimson_trapdoor",
        "warped_trapdoor",
        "crimson_fence_gate",
        "warped_fence_gate",
        "crimson_stairs",
        "warped_stairs",
        "crimson_button",
        "warped_button",
        "crimson_door",
        "warped_door",
        "crimson_sign",
        "warped_sign",
        "warped_hanging_sign",
        "crimson_hanging_sign"
      ]
    },
    "#noteblock_top_instruments": {
      "values": [
        "zombie_head",
        "skeleton_skull",
        "creeper_head",
        "dragon_head",
        "wither_skeleton_skull",
        "piglin_head",
        "player_head"
      ]
    },
    "#oak_logs": {
      "values": [
        "oak_log",
        "oak_wood",
        "stripped_oak_log",
        "stripped_oak_wood"
      ]
    },
    "#ocelot_food": {
      "values": [
        "cod",
        "salmon"
      ]
    },
    "#pale_oak_logs": {
      "values": [
        "pale_oak_log",
        "pale_oak_wood",
        "stripped_pale_oak_log",
        "stripped_pale_oak_wood"
      ]
    },
    "#panda_eats_from_ground": {
      "values": [
        "#panda_food",
        "cake"
      ]
    },
    "#panda_food": {
      "values": [
        "bamboo"
      ]
    },
    "#parrot_food": {
      "values": [
        "wheat_seeds",
        "melon_seeds",
        "pumpkin_seeds",
        "beetroot_seeds",
        "torchflower_seeds",
        "pitcher_pod"
      ]
    },
    "#parrot_poisonous_food": {
      "values": [
        "cookie"
      ]
    },
    "#pickaxes": {
      "values": [
        "diamond_pickaxe",
        "stone_pickaxe",
        "golden_pickaxe",
        "netherite_pickaxe",
        "wooden_pickaxe",
        "iron_pickaxe"
      ]
    },
    "#piglin_food": {
      "values": [
        "porkchop",
        "cooked_porkchop"
      ]
    },
    "#piglin_loved": {
      "values": [
        "#gold_ores",
        "gold_block",
        "gilded_blackstone",
        "light_weighted_pressure_plate",
        "gold_ingot",
        "bell",
        "clock",
        "golden_carrot",
        "glistering_melon_slice",
        "golden_apple",
        "enchanted_golden_apple",
        "golden_helmet",
        "golden_chestplate",
        "golden_leggings",
        "golden_boots",
        "golden_horse_armor",
        "golden_sword",
        "golden_pickaxe",
        "golden_shovel",
        "golden_axe",
        "golden_hoe",
        "raw_gold",
        "raw_gold_block"
      ]
    },
    "#piglin_preferred_weapons": {
      "values": [
        "crossbow"
      ]
    },
    "#piglin_repellents": {
      "values": [
        "soul_torch",
        "soul_lantern",
        "soul_campfire"
      ]
    },
    "#piglin_safe_armor": {
      "values": [
        "golden_helmet",
        "golden_chestplate",
        "golden_leggings",
        "golden_boots"
      ]
    },
    "#pig_food": {
      "values": [
        "carrot",
        "potato",
        "beetroot"
      ]
    },
    "#pillager_preferred_weapons": {
      "values": [
        "crossbow"
      ]
    },
    "#planks": {
      "values": [
        "oak_planks",
        "spruce_planks",
        "birch_planks",
        "jungle_planks",
        "acacia_planks",
        "dark_oak_planks",
        "pale_oak_planks",
        "crimson_planks",
        "warped_planks",
        "mangrove_planks",
        "bamboo_planks",
        "cherry_planks"
      ]
    },
    "#rabbit_food": {
      "values": [
        "carrot",
        "golden_carrot",
        "dandelion"
      ]
    },
    "#rails": {
      "values": [
        "rail",
        "powered_rail",
        "detector_rail",
        "activator_rail"
      ]
    },
    "#redstone_ores": {
      "values": [
        "redstone_ore",
        "deepslate_redstone_ore"
      ]
    },
    "#repairs_chain_armor": {
      "values": [
        "iron_ingot"
      ]
    },
    "#repairs_diamond_armor": {
      "values": [
        "diamond"
      ]
    },
    "#repairs_gold_armor": {
      "values": [
        "gold_ingot"
      ]
    },
    "#repairs_iron_armor": {
      "values": [
        "iron_ingot"
      ]
    },
    "#repairs_leather_armor": {
      "values": [
        "leather"
      ]
    },
    "#repairs_netherite_armor": {
      "values": [
        "netherite_ingot"
      ]
    },
    "#repairs_turtle_helmet": {
      "values": [
        "turtle_scute"
      ]
    },
    "#repairs_wolf_armor": {
      "values": [
        "armadillo_scute"
      ]
    },
    "#sand": {
      "values": [
        "sand",
        "red_sand",
        "suspicious_sand",
        "suspicious_sand"
      ]
    },
    "#saplings": {
      "values": [
        "oak_sapling",
        "spruce_sapling",
        "birch_sapling",
        "jungle_sapling",
        "acacia_sapling",
        "dark_oak_sapling",
        "pale_oak_sapling",
        "azalea",
        "flowering_azalea",
        "mangrove_propagule",
        "cherry_sapling"
      ]
    },
    "#sheep_food": {
      "values": [
        "wheat"
      ]
    },
    "#shovels": {
      "values": [
        "diamond_shovel",
        "stone_shovel",
        "golden_shovel",
        "netherite_shovel",
        "wooden_shovel",
        "iron_shovel"
      ]
    },
    "#shulker_boxes": {
      "values": [
        "shulker_box",
        "black_shulker_box",
        "blue_shulker_box",
        "brown_shulker_box",
        "cyan_shulker_box",
        "gray_shulker_box",
        "green_shulker_box",
        "light_blue_shulker_box",
        "light_gray_shulker_box",
        "lime_shulker_box",
        "magenta_shulker_box",
        "orange_shulker_box",
        "pink_shulker_box",
        "purple_shulker_box",
        "red_shulker_box",
        "white_shulker_box",
        "yellow_shulker_box"
      ]
    },
    "#signs": {
      "values": [
        "oak_sign",
        "spruce_sign",
        "birch_sign",
        "acacia_sign",
        "jungle_sign",
        "dark_oak_sign",
        "pale_oak_sign",
        "crimson_sign",
        "warped_sign",
        "mangrove_sign",
        "bamboo_sign",
        "cherry_sign"
      ]
    },
    "#skeleton_preferred_weapons": {
      "values": [
        "bow"
      ]
    },
    "#skulls": {
      "values": [
        "player_head",
        "creeper_head",
        "zombie_head",
        "skeleton_skull",
        "wither_skeleton_skull",
        "dragon_head",
        "piglin_head"
      ]
    },
    "#slabs": {
      "values": [
        "#wooden_slabs",
        "bamboo_mosaic_slab",
        "stone_slab",
        "smooth_stone_slab",
        "stone_brick_slab",
        "sandstone_slab",
        "purpur_slab",
        "quartz_slab",
        "red_sandstone_slab",
        "brick_slab",
        "cobblestone_slab",
        "nether_brick_slab",
        "petrified_oak_slab",
        "prismarine_slab",
        "prismarine_brick_slab",
        "dark_prismarine_slab",
        "polished_granite_slab",
        "smooth_red_sandstone_slab",
        "mossy_stone_brick_slab",
        "polished_diorite_slab",
        "mossy_cobblestone_slab",
        "end_stone_brick_slab",
        "smooth_sandstone_slab",
        "smooth_quartz_slab",
        "granite_slab",
        "andesite_slab",
        "red_nether_brick_slab",
        "polished_andesite_slab",
        "diorite_slab",
        "cut_sandstone_slab",
        "cut_red_sandstone_slab",
        "blackstone_slab",
        "polished_blackstone_brick_slab",
        "polished_blackstone_slab",
        "cobbled_deepslate_slab",
        "polished_deepslate_slab",
        "deepslate_tile_slab",
        "deepslate_brick_slab",
        "waxed_weathered_cut_copper_slab",
        "waxed_exposed_cut_copper_slab",
        "waxed_cut_copper_slab",
        "oxidized_cut_copper_slab",
        "weathered_cut_copper_slab",
        "exposed_cut_copper_slab",
        "cut_copper_slab",
        "waxed_oxidized_cut_copper_slab",
        "mud_brick_slab",
        "tuff_slab",
        "polished_tuff_slab",
        "tuff_brick_slab",
        "resin_brick_slab"
      ]
    },
    "#small_flowers": {
      "values": [
        "dandelion",
        "open_eyeblossom",
        "poppy",
        "blue_orchid",
        "allium",
        "azure_bluet",
        "red_tulip",
        "orange_tulip",
        "white_tulip",
        "pink_tulip",
        "oxeye_daisy",
        "cornflower",
        "lily_of_the_valley",
        "wither_rose",
        "torchflower",
        "closed_eyeblossom"
      ]
    },
    "#smelts_to_glass": {
      "values": [
        "sand",
        "red_sand"
      ]
    },
    "#sniffer_food": {
      "values": [
        "torchflower_seeds"
      ]
    },
    "#soul_fire_base_blocks": {
      "values": [
        "soul_sand",
        "soul_soil"
      ]
    },
    "#spruce_logs": {
      "values": [
        "spruce_log",
        "spruce_wood",
        "stripped_spruce_log",
        "stripped_spruce_wood"
      ]
    },
    "#stairs": {
      "values": [
        "#wooden_stairs",
        "bamboo_mosaic_stairs",
        "cobblestone_stairs",
        "sandstone_stairs",
        "nether_brick_stairs",
        "stone_brick_stairs",
        "brick_stairs",
        "purpur_stairs",
        "quartz_stairs",
        "red_sandstone_stairs",
        "prismarine_brick_stairs",
        "prismarine_stairs",
        "dark_prismarine_stairs",
        "polished_granite_stairs",
        "smooth_red_sandstone_stairs",
        "mossy_stone_brick_stairs",
        "polished_diorite_stairs",
        "mossy_cobblestone_stairs",
        "end_stone_brick_stairs",
        "stone_stairs",
        "smooth_sandstone_stairs",
        "smooth_quartz_stairs",
        "granite_stairs",
        "andesite_stairs",
        "red_nether_brick_stairs",
        "polished_andesite_stairs",
        "diorite_stairs",
        "blackstone_stairs",
        "polished_blackstone_brick_stairs",
        "polished_blackstone_stairs",
        "cobbled_deepslate_stairs",
        "polished_deepslate_stairs",
        "deepslate_tile_stairs",
        "deepslate_brick_stairs",
        "oxidized_cut_copper_stairs",
        "weathered_cut_copper_stairs",
        "exposed_cut_copper_stairs",
        "cut_copper_stairs",
        "waxed_weathered_cut_copper_stairs",
        "waxed_exposed_cut_copper_stairs",
        "waxed_cut_copper_stairs",
        "waxed_oxidized_cut_copper_stairs",
        "mud_brick_stairs",
        "tuff_stairs",
        "polished_tuff_stairs",
        "tuff_brick_stairs",
        "resin_brick_stairs"
      ]
    },
    "#stone_bricks": {
      "values": [
        "stone_bricks",
        "mossy_stone_bricks",
        "cracked_stone_bricks",
        "chiseled_stone_bricks"
      ]
    },
    "#stone_buttons": {
      "values": [
        "stone_button",
        "polished_blackstone_button"
      ]
    },
    "#stone_crafting_materials": {
      "values": [
        "cobblestone",
        "blackstone",
        "cobbled_deepslate"
      ]
    },
    "#stone_tool_materials": {
      "values": [
        "cobblestone",
        "blackstone",
        "cobbled_deepslate"
      ]
    },
    "#strider_food": {
      "values": [
        "warped_fungus"
      ]
    },
    "#strider_tempt_items": {
      "values": [
        "#strider_food",
        "warped_fungus_on_a_stick"
      ]
    },
    "#swords": {
      "values": [
        "diamond_sword",
        "stone_sword",
        "golden_sword",
        "netherite_sword",
        "wooden_sword",
        "iron_sword"
      ]
    },
    "#terracotta": {
      "values": [
        "terracotta",
        "white_terracotta",
        "orange_terracotta",
        "magenta_terracotta",
        "light_blue_terracotta",
        "yellow_terracotta",
        "lime_terracotta",
        "pink_terracotta",
        "gray_terracotta",
        "light_gray_terracotta",
        "cyan_terracotta",
        "purple_terracotta",
        "blue_terracotta",
        "brown_terracotta",
        "green_terracotta",
        "red_terracotta",
        "black_terracotta"
      ]
    },
    "#trapdoors": {
      "values": [
        "#wooden_trapdoors",
        "iron_trapdoor",
        "copper_trapdoor",
        "exposed_copper_trapdoor",
        "weathered_copper_trapdoor",
        "oxidized_copper_trapdoor",
        "waxed_copper_trapdoor",
        "waxed_exposed_copper_trapdoor",
        "waxed_weathered_copper_trapdoor",
        "waxed_oxidized_copper_trapdoor"
      ]
    },
    "#trimmable_armor": {
      "values": [
        "#foot_armor",
        "#leg_armor",
        "#chest_armor",
        "#head_armor"
      ]
    },
    "#trim_materials": {
      "values": [
        "amethyst_shard",
        "copper_ingot",
        "diamond",
        "emerald",
        "gold_ingot",
        "iron_ingot",
        "lapis_lazuli",
        "netherite_ingot",
        "quartz",
        "redstone",
        "resin_brick"
      ]
    },
    "#turtle_food": {
      "values": [
        "seagrass"
      ]
    },
    "#villager_picks_up": {
      "values": [
        "#villager_plantable_seeds",
        "bread",
        "wheat",
        "beetroot"
      ]
    },
    "#villager_plantable_seeds": {
      "values": [
        "wheat_seeds",
        "potato",
        "carrot",
        "beetroot_seeds",
        "torchflower_seeds",
        "pitcher_pod"
      ]
    },
    "#walls": {
      "values": [
        "cobblestone_wall",
        "mossy_cobblestone_wall",
        "brick_wall",
        "prismarine_wall",
        "red_sandstone_wall",
        "mossy_stone_brick_wall",
        "granite_wall",
        "stone_brick_wall",
        "nether_brick_wall",
        "andesite_wall",
        "red_nether_brick_wall",
        "sandstone_wall",
        "end_stone_brick_wall",
        "diorite_wall",
        "blackstone_wall",
        "polished_blackstone_brick_wall",
        "polished_blackstone_wall",
        "cobbled_deepslate_wall",
        "polished_deepslate_wall",
        "deepslate_tile_wall",
        "deepslate_brick_wall",
        "mud_brick_wall",
        "tuff_wall",
        "polished_tuff_wall",
        "tuff_brick_wall",
        "resin_brick_wall"
      ]
    },
    "#warped_stems": {
      "values": [
        "warped_stem",
        "stripped_warped_stem",
        "warped_hyphae",
        "stripped_warped_hyphae"
      ]
    },
    "#wart_blocks": {
      "values": [
        "nether_wart_block",
        "warped_wart_block"
      ]
    },
    "#wither_skeleton_disliked_weapons": {
      "values": [
        "bow",
        "crossbow"
      ]
    },
    "#wolf_food": {
      "values": [
        "#meat",
        "cod",
        "cooked_cod",
        "salmon",
        "cooked_salmon",
        "tropical_fish",
        "pufferfish",
        "rabbit_stew"
      ]
    },
    "#wooden_buttons": {
      "values": [
        "oak_button",
        "spruce_button",
        "birch_button",
        "jungle_button",
        "acacia_button",
        "dark_oak_button",
        "pale_oak_button",
        "crimson_button",
        "warped_button",
        "mangrove_button",
        "bamboo_button",
        "cherry_button"
      ]
    },
    "#wooden_doors": {
      "values": [
        "oak_door",
        "spruce_door",
        "birch_door",
        "jungle_door",
        "acacia_door",
        "dark_oak_door",
        "pale_oak_door",
        "crimson_door",
        "warped_door",
        "mangrove_door",
        "bamboo_door",
        "cherry_door"
      ]
    },
    "#wooden_fences": {
      "values": [
        "oak_fence",
        "acacia_fence",
        "dark_oak_fence",
        "pale_oak_fence",
        "spruce_fence",
        "birch_fence",
        "jungle_fence",
        "crimson_fence",
        "warped_fence",
        "mangrove_fence",
        "bamboo_fence",
        "cherry_fence"
      ]
    },
    "#wooden_pressure_plates": {
      "values": [
        "oak_pressure_plate",
        "spruce_pressure_plate",
        "birch_pressure_plate",
        "jungle_pressure_plate",
        "acacia_pressure_plate",
        "dark_oak_pressure_plate",
        "pale_oak_pressure_plate",
        "crimson_pressure_plate",
        "warped_pressure_plate",
        "mangrove_pressure_plate",
        "bamboo_pressure_plate",
        "cherry_pressure_plate"
      ]
    },
    "#wooden_slabs": {
      "values": [
        "oak_slab",
        "spruce_slab",
        "birch_slab",
        "jungle_slab",
        "acacia_slab",
        "dark_oak_slab",
        "pale_oak_slab",
        "crimson_slab",
        "warped_slab",
        "mangrove_slab",
        "bamboo_slab",
        "cherry_slab"
      ]
    },
    "#wooden_stairs": {
      "values": [
        "oak_stairs",
        "spruce_stairs",
        "birch_stairs",
        "jungle_stairs",
        "acacia_stairs",
        "dark_oak_stairs",
        "pale_oak_stairs",
        "crimson_stairs",
        "warped_stairs",
        "mangrove_stairs",
        "bamboo_stairs",
        "cherry_stairs"
      ]
    },
    "#wooden_tool_materials": {
      "values": [
        "#planks"
      ]
    },
    "#wooden_trapdoors": {
      "values": [
        "acacia_trapdoor",
        "birch_trapdoor",
        "dark_oak_trapdoor",
        "pale_oak_trapdoor",
        "jungle_trapdoor",
        "oak_trapdoor",
        "spruce_trapdoor",
        "crimson_trapdoor",
        "warped_trapdoor",
        "mangrove_trapdoor",
        "bamboo_trapdoor",
        "cherry_trapdoor"
      ]
    },
    "#wool": {
      "values": [
        "white_wool",
        "orange_wool",
        "magenta_wool",
        "light_blue_wool",
        "yellow_wool",
        "lime_wool",
        "pink_wool",
        "gray_wool",
        "light_gray_wool",
        "cyan_wool",
        "purple_wool",
        "blue_wool",
        "brown_wool",
        "green_wool",
        "red_wool",
        "black_wool"
      ]
    },
    "#wool_carpets": {
      "values": [
        "white_carpet",
        "orange_carpet",
        "magenta_carpet",
        "light_blue_carpet",
        "yellow_carpet",
        "lime_carpet",
        "pink_carpet",
        "gray_carpet",
        "light_gray_carpet",
        "cyan_carpet",
        "purple_carpet",
        "blue_carpet",
        "brown_carpet",
        "green_carpet",
        "red_carpet",
        "black_carpet"
      ]
    }
  };
  function tagToItems(tag) {
    let items = [];
    tagNames[tag].values.forEach((value) => {
      if (isItem(value)) {
        items.push(value);
      } else {
        items.push(...tagToItems(value));
      }
    });
    return items;
  }

  // src/view/transformation/blockDrops.ts
  var blockDrops = {
    "acacia_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_button"
    },
    "acacia_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "acacia_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "acacia_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_door"
    },
    "acacia_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_fence"
    },
    "acacia_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_fence_gate"
    },
    "acacia_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_hanging_sign"
    },
    "acacia_leaves": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "acacia_leaves"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chances": [
                        0.05,
                        0.0625,
                        0.083333336,
                        0.1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "acacia_sapling"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "chances": [
                    0.02,
                    0.022222223,
                    0.025,
                    0.033333335,
                    0.1
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stick"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_leaves"
    },
    "acacia_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_log"
    },
    "acacia_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_planks"
    },
    "acacia_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_pressure_plate"
    },
    "acacia_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_sapling"
    },
    "acacia_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_sign"
    },
    "acacia_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "acacia_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "acacia_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_slab"
    },
    "acacia_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_stairs"
    },
    "acacia_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_trapdoor"
    },
    "acacia_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/acacia_wood"
    },
    "activator_rail": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "activator_rail"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/activator_rail"
    },
    "allium": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "allium"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/allium"
    },
    "amethyst_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "amethyst_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/amethyst_block"
    },
    "amethyst_cluster": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "amethyst_cluster"
                },
                {
                  "type": "alternatives",
                  "children": [
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "#cluster_max_harvestables"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 4,
                          "function": "set_count"
                        },
                        {
                          "enchantment": "fortune",
                          "formula": "ore_drops",
                          "function": "apply_bonus"
                        }
                      ],
                      "name": "amethyst_shard"
                    },
                    {
                      "type": "item",
                      "functions": [
                        {
                          "add": false,
                          "count": 2,
                          "function": "set_count"
                        },
                        {
                          "function": "explosion_decay"
                        }
                      ],
                      "name": "amethyst_shard"
                    }
                  ]
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/amethyst_cluster"
    },
    "ancient_debris": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "ancient_debris"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/ancient_debris"
    },
    "andesite": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "andesite"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/andesite"
    },
    "andesite_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "andesite_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "andesite_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/andesite_slab"
    },
    "andesite_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "andesite_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/andesite_stairs"
    },
    "andesite_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "andesite_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/andesite_wall"
    },
    "anvil": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "anvil"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/anvil"
    },
    "attached_melon_stem": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.53333336
                  },
                  "function": "set_count"
                }
              ],
              "name": "melon_seeds"
            }
          ],
          "functions": [
            {
              "function": "explosion_decay"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/attached_melon_stem"
    },
    "attached_pumpkin_stem": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.53333336
                  },
                  "function": "set_count"
                }
              ],
              "name": "pumpkin_seeds"
            }
          ],
          "functions": [
            {
              "function": "explosion_decay"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/attached_pumpkin_stem"
    },
    "azalea": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "azalea"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/azalea"
    },
    "azalea_leaves": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "azalea_leaves"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chances": [
                        0.05,
                        0.0625,
                        0.083333336,
                        0.1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "azalea"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "chances": [
                    0.02,
                    0.022222223,
                    0.025,
                    0.033333335,
                    0.1
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stick"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/azalea_leaves"
    },
    "azure_bluet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "azure_bluet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/azure_bluet"
    },
    "bamboo": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo"
    },
    "bamboo_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_block"
    },
    "bamboo_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_button"
    },
    "bamboo_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "bamboo_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "bamboo_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_door"
    },
    "bamboo_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_fence"
    },
    "bamboo_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_fence_gate"
    },
    "bamboo_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_hanging_sign"
    },
    "bamboo_mosaic": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_mosaic"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_mosaic"
    },
    "bamboo_mosaic_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "bamboo_mosaic_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "bamboo_mosaic_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_mosaic_slab"
    },
    "bamboo_mosaic_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_mosaic_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_mosaic_stairs"
    },
    "bamboo_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_planks"
    },
    "bamboo_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_pressure_plate"
    },
    "bamboo_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_sapling"
    },
    "bamboo_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_sign"
    },
    "bamboo_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "bamboo_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "bamboo_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_slab"
    },
    "bamboo_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_stairs"
    },
    "bamboo_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bamboo_trapdoor"
    },
    "barrel": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "barrel"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/barrel"
    },
    "basalt": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "basalt"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/basalt"
    },
    "beacon": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "beacon"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/beacon"
    },
    "beehive": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "functions": [
                    {
                      "function": "copy_components",
                      "include": [
                        "bees"
                      ],
                      "source": "block_entity"
                    },
                    {
                      "block": "beehive",
                      "function": "copy_state",
                      "properties": [
                        "honey_level"
                      ]
                    }
                  ],
                  "name": "beehive"
                },
                {
                  "type": "item",
                  "name": "beehive"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/beehive"
    },
    "beetroots": {
      "type": "block",
      "functions": [
        {
          "function": "explosion_decay"
        }
      ],
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "block": "beetroots",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "3"
                      }
                    }
                  ],
                  "name": "beetroot"
                },
                {
                  "type": "item",
                  "name": "beetroot_seeds"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "beetroots",
              "condition": "block_state_property",
              "properties": {
                "age": "3"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "enchantment": "fortune",
                  "formula": "binomial_with_bonus_count",
                  "function": "apply_bonus",
                  "parameters": {
                    "extra": 3,
                    "probability": 0.5714286
                  }
                }
              ],
              "name": "beetroot_seeds"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/beetroots"
    },
    "bee_nest": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "bees"
                  ],
                  "source": "block_entity"
                },
                {
                  "block": "bee_nest",
                  "function": "copy_state",
                  "properties": [
                    "honey_level"
                  ]
                }
              ],
              "name": "bee_nest"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bee_nest"
    },
    "bell": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bell"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bell"
    },
    "big_dripleaf": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "big_dripleaf"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/big_dripleaf"
    },
    "big_dripleaf_stem": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "big_dripleaf"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/big_dripleaf_stem"
    },
    "birch_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_button"
    },
    "birch_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "birch_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "birch_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_door"
    },
    "birch_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_fence"
    },
    "birch_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_fence_gate"
    },
    "birch_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_hanging_sign"
    },
    "birch_leaves": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "birch_leaves"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chances": [
                        0.05,
                        0.0625,
                        0.083333336,
                        0.1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "birch_sapling"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "chances": [
                    0.02,
                    0.022222223,
                    0.025,
                    0.033333335,
                    0.1
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stick"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_leaves"
    },
    "birch_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_log"
    },
    "birch_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_planks"
    },
    "birch_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_pressure_plate"
    },
    "birch_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_sapling"
    },
    "birch_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_sign"
    },
    "birch_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "birch_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "birch_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_slab"
    },
    "birch_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_stairs"
    },
    "birch_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_trapdoor"
    },
    "birch_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/birch_wood"
    },
    "blackstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blackstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blackstone"
    },
    "blackstone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "blackstone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "blackstone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blackstone_slab"
    },
    "blackstone_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blackstone_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blackstone_stairs"
    },
    "blackstone_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blackstone_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blackstone_wall"
    },
    "black_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "black_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_banner"
    },
    "black_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "black_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "black_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_bed"
    },
    "black_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "black_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "black_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "black_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "black_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_candle"
    },
    "black_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "black_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_candle_cake"
    },
    "black_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "black_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_carpet"
    },
    "black_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "black_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_concrete"
    },
    "black_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "black_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_concrete_powder"
    },
    "black_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "black_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_glazed_terracotta"
    },
    "black_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "black_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_shulker_box"
    },
    "black_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "black_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_stained_glass"
    },
    "black_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "black_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_stained_glass_pane"
    },
    "black_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "black_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_terracotta"
    },
    "black_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "black_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/black_wool"
    },
    "blast_furnace": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "blast_furnace"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blast_furnace"
    },
    "blue_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "blue_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_banner"
    },
    "blue_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "blue_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "blue_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_bed"
    },
    "blue_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "blue_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "blue_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "blue_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "blue_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_candle"
    },
    "blue_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "blue_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_candle_cake"
    },
    "blue_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blue_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_carpet"
    },
    "blue_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blue_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_concrete"
    },
    "blue_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blue_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_concrete_powder"
    },
    "blue_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blue_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_glazed_terracotta"
    },
    "blue_ice": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blue_ice"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_ice"
    },
    "blue_orchid": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blue_orchid"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_orchid"
    },
    "blue_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "blue_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_shulker_box"
    },
    "blue_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blue_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_stained_glass"
    },
    "blue_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blue_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_stained_glass_pane"
    },
    "blue_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blue_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_terracotta"
    },
    "blue_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blue_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/blue_wool"
    },
    "bone_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bone_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bone_block"
    },
    "bookshelf": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "bookshelf"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": 3,
                      "function": "set_count"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "book"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bookshelf"
    },
    "brain_coral": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brain_coral"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brain_coral"
    },
    "brain_coral_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "brain_coral_block"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "dead_brain_coral_block"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brain_coral_block"
    },
    "brain_coral_fan": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brain_coral_fan"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brain_coral_fan"
    },
    "brewing_stand": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "brewing_stand"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brewing_stand"
    },
    "bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bricks"
    },
    "brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "brick_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brick_slab"
    },
    "brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brick_stairs"
    },
    "brick_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brick_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brick_wall"
    },
    "brown_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "brown_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_banner"
    },
    "brown_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "brown_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "brown_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_bed"
    },
    "brown_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "brown_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "brown_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "brown_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "brown_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_candle"
    },
    "brown_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "brown_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_candle_cake"
    },
    "brown_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brown_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_carpet"
    },
    "brown_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brown_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_concrete"
    },
    "brown_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brown_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_concrete_powder"
    },
    "brown_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brown_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_glazed_terracotta"
    },
    "brown_mushroom": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brown_mushroom"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_mushroom"
    },
    "brown_mushroom_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "brown_mushroom_block"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 2,
                        "min": -6
                      },
                      "function": "set_count"
                    },
                    {
                      "function": "limit_count",
                      "limit": {
                        "min": 0
                      }
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "brown_mushroom"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_mushroom_block"
    },
    "brown_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "brown_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_shulker_box"
    },
    "brown_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brown_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_stained_glass"
    },
    "brown_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brown_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_stained_glass_pane"
    },
    "brown_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brown_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_terracotta"
    },
    "brown_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brown_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/brown_wool"
    },
    "bubble_coral": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bubble_coral"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bubble_coral"
    },
    "bubble_coral_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "bubble_coral_block"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "dead_bubble_coral_block"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bubble_coral_block"
    },
    "bubble_coral_fan": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bubble_coral_fan"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/bubble_coral_fan"
    },
    "budding_amethyst": {
      "type": "block",
      "random_sequence": "blocks/budding_amethyst"
    },
    "cactus": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cactus"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cactus"
    },
    "cake": {
      "type": "block",
      "random_sequence": "blocks/cake"
    },
    "calcite": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "calcite"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/calcite"
    },
    "calibrated_sculk_sensor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "calibrated_sculk_sensor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/calibrated_sculk_sensor"
    },
    "campfire": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "campfire"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": 2,
                      "function": "set_count"
                    }
                  ],
                  "name": "charcoal"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/campfire"
    },
    "candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/candle"
    },
    "candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/candle_cake"
    },
    "carrots": {
      "type": "block",
      "functions": [
        {
          "function": "explosion_decay"
        }
      ],
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "carrot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "carrots",
              "condition": "block_state_property",
              "properties": {
                "age": "7"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "enchantment": "fortune",
                  "formula": "binomial_with_bonus_count",
                  "function": "apply_bonus",
                  "parameters": {
                    "extra": 3,
                    "probability": 0.5714286
                  }
                }
              ],
              "name": "carrot"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/carrots"
    },
    "cartography_table": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cartography_table"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cartography_table"
    },
    "carved_pumpkin": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "carved_pumpkin"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/carved_pumpkin"
    },
    "cauldron": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cauldron"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cauldron"
    },
    "cave_vines": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "cave_vines",
              "condition": "block_state_property",
              "properties": {
                "berries": "true"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "glow_berries"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cave_vines"
    },
    "cave_vines_plant": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "cave_vines_plant",
              "condition": "block_state_property",
              "properties": {
                "berries": "true"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "glow_berries"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cave_vines_plant"
    },
    "chain": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chain"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chain"
    },
    "cherry_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_button"
    },
    "cherry_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "cherry_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "cherry_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_door"
    },
    "cherry_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_fence"
    },
    "cherry_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_fence_gate"
    },
    "cherry_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_hanging_sign"
    },
    "cherry_leaves": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "cherry_leaves"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chances": [
                        0.05,
                        0.0625,
                        0.083333336,
                        0.1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "cherry_sapling"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "chances": [
                    0.02,
                    0.022222223,
                    0.025,
                    0.033333335,
                    0.1
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stick"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_leaves"
    },
    "cherry_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_log"
    },
    "cherry_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_planks"
    },
    "cherry_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_pressure_plate"
    },
    "cherry_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_sapling"
    },
    "cherry_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_sign"
    },
    "cherry_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "cherry_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "cherry_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_slab"
    },
    "cherry_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_stairs"
    },
    "cherry_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_trapdoor"
    },
    "cherry_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cherry_wood"
    },
    "chest": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "chest"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chest"
    },
    "chipped_anvil": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chipped_anvil"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chipped_anvil"
    },
    "chiseled_bookshelf": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_bookshelf"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_bookshelf"
    },
    "chiseled_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_copper"
    },
    "chiseled_deepslate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_deepslate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_deepslate"
    },
    "chiseled_nether_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_nether_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_nether_bricks"
    },
    "chiseled_polished_blackstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_polished_blackstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_polished_blackstone"
    },
    "chiseled_quartz_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_quartz_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_quartz_block"
    },
    "chiseled_red_sandstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_red_sandstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_red_sandstone"
    },
    "chiseled_resin_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_resin_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_resin_bricks"
    },
    "chiseled_sandstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_sandstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_sandstone"
    },
    "chiseled_stone_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_stone_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_stone_bricks"
    },
    "chiseled_tuff": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_tuff"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_tuff"
    },
    "chiseled_tuff_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_tuff_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chiseled_tuff_bricks"
    },
    "chorus_flower": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "condition": "survives_explosion"
                },
                {
                  "condition": "entity_properties",
                  "entity": "this",
                  "predicate": {}
                }
              ],
              "name": "chorus_flower"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chorus_flower"
    },
    "chorus_plant": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 1,
                    "min": 0
                  },
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "chorus_fruit"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/chorus_plant"
    },
    "clay": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "clay"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": 4,
                      "function": "set_count"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "clay_ball"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/clay"
    },
    "closed_eyeblossom": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "closed_eyeblossom"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/closed_eyeblossom"
    },
    "coal_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "coal_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/coal_block"
    },
    "coal_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "coal_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "coal"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/coal_ore"
    },
    "coarse_dirt": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "coarse_dirt"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/coarse_dirt"
    },
    "cobbled_deepslate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cobbled_deepslate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cobbled_deepslate"
    },
    "cobbled_deepslate_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "cobbled_deepslate_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "cobbled_deepslate_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cobbled_deepslate_slab"
    },
    "cobbled_deepslate_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cobbled_deepslate_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cobbled_deepslate_stairs"
    },
    "cobbled_deepslate_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cobbled_deepslate_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cobbled_deepslate_wall"
    },
    "cobblestone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cobblestone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cobblestone"
    },
    "cobblestone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "cobblestone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "cobblestone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cobblestone_slab"
    },
    "cobblestone_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cobblestone_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cobblestone_stairs"
    },
    "cobblestone_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cobblestone_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cobblestone_wall"
    },
    "cobweb": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "cobweb"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "string"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cobweb"
    },
    "cocoa": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "cocoa",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "2"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "cocoa_beans"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cocoa"
    },
    "comparator": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "comparator"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/comparator"
    },
    "composter": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "composter"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "composter",
              "condition": "block_state_property",
              "properties": {
                "level": "8"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bone_meal"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/composter"
    },
    "conduit": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "conduit"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/conduit"
    },
    "copper_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "copper_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/copper_block"
    },
    "copper_bulb": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "copper_bulb"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/copper_bulb"
    },
    "copper_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "copper_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "copper_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/copper_door"
    },
    "copper_grate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "copper_grate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/copper_grate"
    },
    "copper_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "copper_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 5,
                        "min": 2
                      },
                      "function": "set_count"
                    },
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "raw_copper"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/copper_ore"
    },
    "copper_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "copper_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/copper_trapdoor"
    },
    "cornflower": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cornflower"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cornflower"
    },
    "cracked_deepslate_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cracked_deepslate_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cracked_deepslate_bricks"
    },
    "cracked_deepslate_tiles": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cracked_deepslate_tiles"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cracked_deepslate_tiles"
    },
    "cracked_nether_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cracked_nether_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cracked_nether_bricks"
    },
    "cracked_polished_blackstone_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cracked_polished_blackstone_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cracked_polished_blackstone_bricks"
    },
    "cracked_stone_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cracked_stone_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cracked_stone_bricks"
    },
    "crafter": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crafter"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crafter"
    },
    "crafting_table": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crafting_table"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crafting_table"
    },
    "creaking_heart": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "creaking_heart"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 3,
                        "min": 1
                      },
                      "function": "set_count"
                    },
                    {
                      "enchantment": "fortune",
                      "formula": "uniform_bonus_count",
                      "function": "apply_bonus",
                      "parameters": {
                        "bonusMultiplier": 1
                      }
                    },
                    {
                      "function": "limit_count",
                      "limit": {
                        "max": 9
                      }
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "resin_clump"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/creaking_heart"
    },
    "creeper_head": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "creeper_head"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/creeper_head"
    },
    "crimson_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_button"
    },
    "crimson_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "crimson_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "crimson_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_door"
    },
    "crimson_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_fence"
    },
    "crimson_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_fence_gate"
    },
    "crimson_fungus": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_fungus"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_fungus"
    },
    "crimson_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_hanging_sign"
    },
    "crimson_hyphae": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_hyphae"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_hyphae"
    },
    "crimson_nylium": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "crimson_nylium"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "netherrack"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_nylium"
    },
    "crimson_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_planks"
    },
    "crimson_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_pressure_plate"
    },
    "crimson_roots": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_roots"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_roots"
    },
    "crimson_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_sign"
    },
    "crimson_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "crimson_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "crimson_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_slab"
    },
    "crimson_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_stairs"
    },
    "crimson_stem": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_stem"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_stem"
    },
    "crimson_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crimson_trapdoor"
    },
    "crying_obsidian": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crying_obsidian"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/crying_obsidian"
    },
    "cut_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cut_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cut_copper"
    },
    "cut_copper_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "cut_copper_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "cut_copper_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cut_copper_slab"
    },
    "cut_copper_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cut_copper_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cut_copper_stairs"
    },
    "cut_red_sandstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cut_red_sandstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cut_red_sandstone"
    },
    "cut_red_sandstone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "cut_red_sandstone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "cut_red_sandstone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cut_red_sandstone_slab"
    },
    "cut_sandstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cut_sandstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cut_sandstone"
    },
    "cut_sandstone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "cut_sandstone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "cut_sandstone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cut_sandstone_slab"
    },
    "cyan_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "cyan_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_banner"
    },
    "cyan_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "cyan_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "cyan_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_bed"
    },
    "cyan_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "cyan_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "cyan_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "cyan_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "cyan_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_candle"
    },
    "cyan_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "cyan_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_candle_cake"
    },
    "cyan_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cyan_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_carpet"
    },
    "cyan_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cyan_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_concrete"
    },
    "cyan_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cyan_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_concrete_powder"
    },
    "cyan_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cyan_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_glazed_terracotta"
    },
    "cyan_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "cyan_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_shulker_box"
    },
    "cyan_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cyan_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_stained_glass"
    },
    "cyan_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cyan_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_stained_glass_pane"
    },
    "cyan_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cyan_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_terracotta"
    },
    "cyan_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cyan_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/cyan_wool"
    },
    "damaged_anvil": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "damaged_anvil"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/damaged_anvil"
    },
    "dandelion": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dandelion"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dandelion"
    },
    "dark_oak_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_button"
    },
    "dark_oak_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "dark_oak_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "dark_oak_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_door"
    },
    "dark_oak_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_fence"
    },
    "dark_oak_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_fence_gate"
    },
    "dark_oak_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_hanging_sign"
    },
    "dark_oak_leaves": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "dark_oak_leaves"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chances": [
                        0.05,
                        0.0625,
                        0.083333336,
                        0.1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "dark_oak_sapling"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "chances": [
                    0.02,
                    0.022222223,
                    0.025,
                    0.033333335,
                    0.1
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stick"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "condition": "survives_explosion"
                },
                {
                  "chances": [
                    5e-3,
                    0.0055555557,
                    625e-5,
                    8333334e-9,
                    0.025
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "name": "apple"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_leaves"
    },
    "dark_oak_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_log"
    },
    "dark_oak_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_planks"
    },
    "dark_oak_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_pressure_plate"
    },
    "dark_oak_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_sapling"
    },
    "dark_oak_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_sign"
    },
    "dark_oak_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "dark_oak_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "dark_oak_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_slab"
    },
    "dark_oak_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_stairs"
    },
    "dark_oak_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_trapdoor"
    },
    "dark_oak_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_oak_wood"
    },
    "dark_prismarine": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_prismarine"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_prismarine"
    },
    "dark_prismarine_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "dark_prismarine_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "dark_prismarine_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_prismarine_slab"
    },
    "dark_prismarine_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_prismarine_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dark_prismarine_stairs"
    },
    "daylight_detector": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "daylight_detector"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/daylight_detector"
    },
    "dead_brain_coral": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_brain_coral"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_brain_coral"
    },
    "dead_brain_coral_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_brain_coral_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_brain_coral_block"
    },
    "dead_brain_coral_fan": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_brain_coral_fan"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_brain_coral_fan"
    },
    "dead_bubble_coral": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_bubble_coral"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_bubble_coral"
    },
    "dead_bubble_coral_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_bubble_coral_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_bubble_coral_block"
    },
    "dead_bubble_coral_fan": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_bubble_coral_fan"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_bubble_coral_fan"
    },
    "dead_bush": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "items": "shears"
                      }
                    }
                  ],
                  "name": "dead_bush"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 2,
                        "min": 0
                      },
                      "function": "set_count"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "stick"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_bush"
    },
    "dead_fire_coral": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_fire_coral"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_fire_coral"
    },
    "dead_fire_coral_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_fire_coral_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_fire_coral_block"
    },
    "dead_fire_coral_fan": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_fire_coral_fan"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_fire_coral_fan"
    },
    "dead_horn_coral": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_horn_coral"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_horn_coral"
    },
    "dead_horn_coral_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_horn_coral_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_horn_coral_block"
    },
    "dead_horn_coral_fan": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_horn_coral_fan"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_horn_coral_fan"
    },
    "dead_tube_coral": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_tube_coral"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_tube_coral"
    },
    "dead_tube_coral_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_tube_coral_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_tube_coral_block"
    },
    "dead_tube_coral_fan": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_tube_coral_fan"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dead_tube_coral_fan"
    },
    "decorated_pot": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "dynamic",
                  "conditions": [
                    {
                      "block": "decorated_pot",
                      "condition": "block_state_property",
                      "properties": {
                        "cracked": "true"
                      }
                    }
                  ],
                  "name": "sherds"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "function": "copy_components",
                      "include": [
                        "pot_decorations"
                      ],
                      "source": "block_entity"
                    }
                  ],
                  "name": "decorated_pot"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/decorated_pot"
    },
    "deepslate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "deepslate"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "cobbled_deepslate"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate"
    },
    "deepslate_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "deepslate_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_bricks"
    },
    "deepslate_brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "deepslate_brick_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "deepslate_brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_brick_slab"
    },
    "deepslate_brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "deepslate_brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_brick_stairs"
    },
    "deepslate_brick_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "deepslate_brick_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_brick_wall"
    },
    "deepslate_coal_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "deepslate_coal_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "coal"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_coal_ore"
    },
    "deepslate_copper_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "deepslate_copper_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 5,
                        "min": 2
                      },
                      "function": "set_count"
                    },
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "raw_copper"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_copper_ore"
    },
    "deepslate_diamond_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "deepslate_diamond_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "diamond"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_diamond_ore"
    },
    "deepslate_emerald_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "deepslate_emerald_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "emerald"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_emerald_ore"
    },
    "deepslate_gold_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "deepslate_gold_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "raw_gold"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_gold_ore"
    },
    "deepslate_iron_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "deepslate_iron_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "raw_iron"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_iron_ore"
    },
    "deepslate_lapis_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "deepslate_lapis_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 9,
                        "min": 4
                      },
                      "function": "set_count"
                    },
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "lapis_lazuli"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_lapis_ore"
    },
    "deepslate_redstone_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "deepslate_redstone_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 5,
                        "min": 4
                      },
                      "function": "set_count"
                    },
                    {
                      "enchantment": "fortune",
                      "formula": "uniform_bonus_count",
                      "function": "apply_bonus",
                      "parameters": {
                        "bonusMultiplier": 1
                      }
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "redstone"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_redstone_ore"
    },
    "deepslate_tiles": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "deepslate_tiles"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_tiles"
    },
    "deepslate_tile_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "deepslate_tile_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "deepslate_tile_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_tile_slab"
    },
    "deepslate_tile_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "deepslate_tile_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_tile_stairs"
    },
    "deepslate_tile_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "deepslate_tile_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/deepslate_tile_wall"
    },
    "detector_rail": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "detector_rail"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/detector_rail"
    },
    "diamond_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "diamond_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/diamond_block"
    },
    "diamond_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "diamond_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "diamond"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/diamond_ore"
    },
    "diorite": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "diorite"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/diorite"
    },
    "diorite_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "diorite_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "diorite_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/diorite_slab"
    },
    "diorite_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "diorite_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/diorite_stairs"
    },
    "diorite_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "diorite_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/diorite_wall"
    },
    "dirt": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dirt"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dirt"
    },
    "dirt_path": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dirt"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dirt_path"
    },
    "dispenser": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "dispenser"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dispenser"
    },
    "dragon_egg": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "dragon_egg"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dragon_egg"
    },
    "dragon_head": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "dragon_head"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dragon_head"
    },
    "dried_kelp_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dried_kelp_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dried_kelp_block"
    },
    "dripstone_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dripstone_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dripstone_block"
    },
    "dropper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "dropper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/dropper"
    },
    "emerald_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "emerald_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/emerald_block"
    },
    "emerald_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "emerald_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "emerald"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/emerald_ore"
    },
    "enchanting_table": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "enchanting_table"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/enchanting_table"
    },
    "ender_chest": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "ender_chest"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": 8,
                      "function": "set_count"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "obsidian"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/ender_chest"
    },
    "end_rod": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "end_rod"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/end_rod"
    },
    "end_stone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "end_stone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/end_stone"
    },
    "end_stone_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "end_stone_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/end_stone_bricks"
    },
    "end_stone_brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "end_stone_brick_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "end_stone_brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/end_stone_brick_slab"
    },
    "end_stone_brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "end_stone_brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/end_stone_brick_stairs"
    },
    "end_stone_brick_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "end_stone_brick_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/end_stone_brick_wall"
    },
    "exposed_chiseled_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "exposed_chiseled_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/exposed_chiseled_copper"
    },
    "exposed_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "exposed_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/exposed_copper"
    },
    "exposed_copper_bulb": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "exposed_copper_bulb"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/exposed_copper_bulb"
    },
    "exposed_copper_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "exposed_copper_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "exposed_copper_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/exposed_copper_door"
    },
    "exposed_copper_grate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "exposed_copper_grate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/exposed_copper_grate"
    },
    "exposed_copper_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "exposed_copper_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/exposed_copper_trapdoor"
    },
    "exposed_cut_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "exposed_cut_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/exposed_cut_copper"
    },
    "exposed_cut_copper_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "exposed_cut_copper_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "exposed_cut_copper_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/exposed_cut_copper_slab"
    },
    "exposed_cut_copper_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "exposed_cut_copper_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/exposed_cut_copper_stairs"
    },
    "farmland": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dirt"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/farmland"
    },
    "fern": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "items": "shears"
                      }
                    }
                  ],
                  "name": "fern"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "chance": 0.125,
                      "condition": "random_chance"
                    }
                  ],
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "uniform_bonus_count",
                      "function": "apply_bonus",
                      "parameters": {
                        "bonusMultiplier": 2
                      }
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "wheat_seeds"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/fern"
    },
    "fire": {
      "type": "block",
      "random_sequence": "blocks/fire"
    },
    "fire_coral": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "fire_coral"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/fire_coral"
    },
    "fire_coral_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "fire_coral_block"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "dead_fire_coral_block"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/fire_coral_block"
    },
    "fire_coral_fan": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "fire_coral_fan"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/fire_coral_fan"
    },
    "fletching_table": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "fletching_table"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/fletching_table"
    },
    "flowering_azalea": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flowering_azalea"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/flowering_azalea"
    },
    "flowering_azalea_leaves": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "flowering_azalea_leaves"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chances": [
                        0.05,
                        0.0625,
                        0.083333336,
                        0.1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "flowering_azalea"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "chances": [
                    0.02,
                    0.022222223,
                    0.025,
                    0.033333335,
                    0.1
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stick"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/flowering_azalea_leaves"
    },
    "flower_pot": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/flower_pot"
    },
    "frogspawn": {
      "type": "block",
      "random_sequence": "blocks/frogspawn"
    },
    "frosted_ice": {
      "type": "block",
      "random_sequence": "blocks/frosted_ice"
    },
    "furnace": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "furnace"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/furnace"
    },
    "gilded_blackstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "gilded_blackstone"
                },
                {
                  "type": "alternatives",
                  "children": [
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "chances": [
                            0.1,
                            0.14285715,
                            0.25,
                            1
                          ],
                          "condition": "table_bonus",
                          "enchantment": "fortune"
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": {
                            "type": "uniform",
                            "max": 5,
                            "min": 2
                          },
                          "function": "set_count"
                        }
                      ],
                      "name": "gold_nugget"
                    },
                    {
                      "type": "item",
                      "name": "gilded_blackstone"
                    }
                  ],
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ]
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gilded_blackstone"
    },
    "glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/glass"
    },
    "glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/glass_pane"
    },
    "glowstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "glowstone"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 4,
                        "min": 2
                      },
                      "function": "set_count"
                    },
                    {
                      "enchantment": "fortune",
                      "formula": "uniform_bonus_count",
                      "function": "apply_bonus",
                      "parameters": {
                        "bonusMultiplier": 1
                      }
                    },
                    {
                      "function": "limit_count",
                      "limit": {
                        "max": 4,
                        "min": 1
                      }
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "glowstone_dust"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/glowstone"
    },
    "glow_lichen": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "condition": "match_tool",
                  "predicate": {
                    "items": "shears"
                  }
                }
              ],
              "functions": [
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "glow_lichen",
                      "condition": "block_state_property",
                      "properties": {
                        "down": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "glow_lichen",
                      "condition": "block_state_property",
                      "properties": {
                        "up": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "glow_lichen",
                      "condition": "block_state_property",
                      "properties": {
                        "north": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "glow_lichen",
                      "condition": "block_state_property",
                      "properties": {
                        "south": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "glow_lichen",
                      "condition": "block_state_property",
                      "properties": {
                        "west": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "glow_lichen",
                      "condition": "block_state_property",
                      "properties": {
                        "east": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "count": -1,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "glow_lichen"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/glow_lichen"
    },
    "gold_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "gold_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gold_block"
    },
    "gold_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "gold_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "raw_gold"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gold_ore"
    },
    "granite": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "granite"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/granite"
    },
    "granite_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "granite_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "granite_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/granite_slab"
    },
    "granite_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "granite_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/granite_stairs"
    },
    "granite_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "granite_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/granite_wall"
    },
    "grass_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "grass_block"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "dirt"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/grass_block"
    },
    "gravel": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "gravel"
                },
                {
                  "type": "alternatives",
                  "children": [
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "chances": [
                            0.1,
                            0.14285715,
                            0.25,
                            1
                          ],
                          "condition": "table_bonus",
                          "enchantment": "fortune"
                        }
                      ],
                      "name": "flint"
                    },
                    {
                      "type": "item",
                      "name": "gravel"
                    }
                  ],
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ]
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gravel"
    },
    "gray_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "gray_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_banner"
    },
    "gray_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "gray_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "gray_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_bed"
    },
    "gray_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "gray_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "gray_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "gray_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "gray_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_candle"
    },
    "gray_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "gray_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_candle_cake"
    },
    "gray_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "gray_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_carpet"
    },
    "gray_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "gray_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_concrete"
    },
    "gray_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "gray_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_concrete_powder"
    },
    "gray_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "gray_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_glazed_terracotta"
    },
    "gray_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "gray_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_shulker_box"
    },
    "gray_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "gray_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_stained_glass"
    },
    "gray_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "gray_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_stained_glass_pane"
    },
    "gray_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "gray_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_terracotta"
    },
    "gray_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "gray_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/gray_wool"
    },
    "green_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "green_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_banner"
    },
    "green_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "green_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "green_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_bed"
    },
    "green_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "green_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "green_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "green_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "green_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_candle"
    },
    "green_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "green_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_candle_cake"
    },
    "green_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "green_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_carpet"
    },
    "green_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "green_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_concrete"
    },
    "green_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "green_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_concrete_powder"
    },
    "green_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "green_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_glazed_terracotta"
    },
    "green_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "green_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_shulker_box"
    },
    "green_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "green_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_stained_glass"
    },
    "green_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "green_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_stained_glass_pane"
    },
    "green_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "green_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_terracotta"
    },
    "green_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "green_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/green_wool"
    },
    "grindstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "grindstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/grindstone"
    },
    "hanging_roots": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "items": "shears"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "hanging_roots"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/hanging_roots"
    },
    "hay_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "hay_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/hay_block"
    },
    "heavy_core": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "heavy_core"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/heavy_core"
    },
    "heavy_weighted_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "heavy_weighted_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/heavy_weighted_pressure_plate"
    },
    "honeycomb_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "honeycomb_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/honeycomb_block"
    },
    "honey_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "honey_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/honey_block"
    },
    "hopper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "hopper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/hopper"
    },
    "horn_coral": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "horn_coral"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/horn_coral"
    },
    "horn_coral_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "horn_coral_block"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "dead_horn_coral_block"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/horn_coral_block"
    },
    "horn_coral_fan": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "horn_coral_fan"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/horn_coral_fan"
    },
    "ice": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "ice"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/ice"
    },
    "infested_chiseled_stone_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "chiseled_stone_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/infested_chiseled_stone_bricks"
    },
    "infested_cobblestone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cobblestone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/infested_cobblestone"
    },
    "infested_cracked_stone_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cracked_stone_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/infested_cracked_stone_bricks"
    },
    "infested_deepslate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "deepslate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/infested_deepslate"
    },
    "infested_mossy_stone_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mossy_stone_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/infested_mossy_stone_bricks"
    },
    "infested_stone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/infested_stone"
    },
    "infested_stone_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stone_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/infested_stone_bricks"
    },
    "iron_bars": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "iron_bars"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/iron_bars"
    },
    "iron_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "iron_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/iron_block"
    },
    "iron_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "iron_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "iron_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/iron_door"
    },
    "iron_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "iron_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "raw_iron"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/iron_ore"
    },
    "iron_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "iron_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/iron_trapdoor"
    },
    "jack_o_lantern": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jack_o_lantern"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jack_o_lantern"
    },
    "jukebox": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jukebox"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jukebox"
    },
    "jungle_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_button"
    },
    "jungle_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "jungle_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "jungle_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_door"
    },
    "jungle_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_fence"
    },
    "jungle_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_fence_gate"
    },
    "jungle_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_hanging_sign"
    },
    "jungle_leaves": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "jungle_leaves"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chances": [
                        0.025,
                        0.027777778,
                        0.03125,
                        0.041666668,
                        0.1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "jungle_sapling"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "chances": [
                    0.02,
                    0.022222223,
                    0.025,
                    0.033333335,
                    0.1
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stick"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_leaves"
    },
    "jungle_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_log"
    },
    "jungle_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_planks"
    },
    "jungle_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_pressure_plate"
    },
    "jungle_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_sapling"
    },
    "jungle_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_sign"
    },
    "jungle_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "jungle_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "jungle_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_slab"
    },
    "jungle_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_stairs"
    },
    "jungle_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_trapdoor"
    },
    "jungle_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/jungle_wood"
    },
    "kelp": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "kelp"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/kelp"
    },
    "kelp_plant": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "kelp"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/kelp_plant"
    },
    "ladder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "ladder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/ladder"
    },
    "lantern": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lantern"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lantern"
    },
    "lapis_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lapis_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lapis_block"
    },
    "lapis_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "lapis_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 9,
                        "min": 4
                      },
                      "function": "set_count"
                    },
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "lapis_lazuli"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lapis_ore"
    },
    "large_amethyst_bud": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "large_amethyst_bud"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/large_amethyst_bud"
    },
    "large_fern": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "large_fern",
              "condition": "block_state_property",
              "properties": {
                "half": "lower"
              }
            },
            {
              "condition": "location_check",
              "offsetY": 1,
              "predicate": {
                "block": {
                  "blocks": "large_fern",
                  "state": {
                    "half": "upper"
                  }
                }
              }
            }
          ],
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "items": "shears"
                      }
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": 2,
                      "function": "set_count"
                    }
                  ],
                  "name": "fern"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chance": 0.125,
                      "condition": "random_chance"
                    }
                  ],
                  "name": "wheat_seeds"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "large_fern",
              "condition": "block_state_property",
              "properties": {
                "half": "upper"
              }
            },
            {
              "condition": "location_check",
              "offsetY": -1,
              "predicate": {
                "block": {
                  "blocks": "large_fern",
                  "state": {
                    "half": "lower"
                  }
                }
              }
            }
          ],
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "items": "shears"
                      }
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": 2,
                      "function": "set_count"
                    }
                  ],
                  "name": "fern"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chance": 0.125,
                      "condition": "random_chance"
                    }
                  ],
                  "name": "wheat_seeds"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/large_fern"
    },
    "lava_cauldron": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cauldron"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lava_cauldron"
    },
    "lectern": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lectern"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lectern"
    },
    "lever": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lever"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lever"
    },
    "lightning_rod": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lightning_rod"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lightning_rod"
    },
    "light_blue_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "light_blue_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_banner"
    },
    "light_blue_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "light_blue_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "light_blue_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_bed"
    },
    "light_blue_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "light_blue_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "light_blue_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "light_blue_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "light_blue_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_candle"
    },
    "light_blue_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "light_blue_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_candle_cake"
    },
    "light_blue_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_blue_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_carpet"
    },
    "light_blue_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_blue_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_concrete"
    },
    "light_blue_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_blue_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_concrete_powder"
    },
    "light_blue_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_blue_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_glazed_terracotta"
    },
    "light_blue_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "light_blue_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_shulker_box"
    },
    "light_blue_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_blue_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_stained_glass"
    },
    "light_blue_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_blue_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_stained_glass_pane"
    },
    "light_blue_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_blue_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_terracotta"
    },
    "light_blue_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_blue_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_blue_wool"
    },
    "light_gray_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "light_gray_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_banner"
    },
    "light_gray_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "light_gray_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "light_gray_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_bed"
    },
    "light_gray_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "light_gray_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "light_gray_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "light_gray_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "light_gray_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_candle"
    },
    "light_gray_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "light_gray_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_candle_cake"
    },
    "light_gray_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_gray_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_carpet"
    },
    "light_gray_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_gray_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_concrete"
    },
    "light_gray_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_gray_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_concrete_powder"
    },
    "light_gray_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_gray_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_glazed_terracotta"
    },
    "light_gray_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "light_gray_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_shulker_box"
    },
    "light_gray_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_gray_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_stained_glass"
    },
    "light_gray_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_gray_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_stained_glass_pane"
    },
    "light_gray_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_gray_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_terracotta"
    },
    "light_gray_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_gray_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_gray_wool"
    },
    "light_weighted_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "light_weighted_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/light_weighted_pressure_plate"
    },
    "lilac": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "lilac",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "lilac"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lilac"
    },
    "lily_of_the_valley": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lily_of_the_valley"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lily_of_the_valley"
    },
    "lily_pad": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lily_pad"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lily_pad"
    },
    "lime_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "lime_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_banner"
    },
    "lime_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "lime_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "lime_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_bed"
    },
    "lime_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "lime_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "lime_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "lime_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "lime_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_candle"
    },
    "lime_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "lime_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_candle_cake"
    },
    "lime_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lime_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_carpet"
    },
    "lime_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lime_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_concrete"
    },
    "lime_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lime_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_concrete_powder"
    },
    "lime_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lime_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_glazed_terracotta"
    },
    "lime_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "lime_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_shulker_box"
    },
    "lime_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lime_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_stained_glass"
    },
    "lime_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lime_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_stained_glass_pane"
    },
    "lime_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lime_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_terracotta"
    },
    "lime_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lime_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lime_wool"
    },
    "lodestone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lodestone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/lodestone"
    },
    "loom": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "loom"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/loom"
    },
    "magenta_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "magenta_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_banner"
    },
    "magenta_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "magenta_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "magenta_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_bed"
    },
    "magenta_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "magenta_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "magenta_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "magenta_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "magenta_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_candle"
    },
    "magenta_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "magenta_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_candle_cake"
    },
    "magenta_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "magenta_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_carpet"
    },
    "magenta_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "magenta_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_concrete"
    },
    "magenta_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "magenta_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_concrete_powder"
    },
    "magenta_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "magenta_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_glazed_terracotta"
    },
    "magenta_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "magenta_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_shulker_box"
    },
    "magenta_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "magenta_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_stained_glass"
    },
    "magenta_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "magenta_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_stained_glass_pane"
    },
    "magenta_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "magenta_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_terracotta"
    },
    "magenta_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "magenta_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magenta_wool"
    },
    "magma_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "magma_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/magma_block"
    },
    "mangrove_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_button"
    },
    "mangrove_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "mangrove_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "mangrove_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_door"
    },
    "mangrove_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_fence"
    },
    "mangrove_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_fence_gate"
    },
    "mangrove_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_hanging_sign"
    },
    "mangrove_leaves": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "mangrove_leaves"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "chances": [
                        0.02,
                        0.022222223,
                        0.025,
                        0.033333335,
                        0.1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 2,
                        "min": 1
                      },
                      "function": "set_count"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "stick"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_leaves"
    },
    "mangrove_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_log"
    },
    "mangrove_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_planks"
    },
    "mangrove_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_pressure_plate"
    },
    "mangrove_propagule": {
      "type": "block",
      "functions": [
        {
          "function": "explosion_decay"
        }
      ],
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "mangrove_propagule",
              "condition": "block_state_property",
              "properties": {
                "age": "4"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_propagule"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_propagule"
    },
    "mangrove_roots": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_roots"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_roots"
    },
    "mangrove_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_sign"
    },
    "mangrove_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "mangrove_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "mangrove_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_slab"
    },
    "mangrove_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_stairs"
    },
    "mangrove_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_trapdoor"
    },
    "mangrove_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mangrove_wood"
    },
    "medium_amethyst_bud": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "medium_amethyst_bud"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/medium_amethyst_bud"
    },
    "melon": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "melon"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 7,
                        "min": 3
                      },
                      "function": "set_count"
                    },
                    {
                      "enchantment": "fortune",
                      "formula": "uniform_bonus_count",
                      "function": "apply_bonus",
                      "parameters": {
                        "bonusMultiplier": 1
                      }
                    },
                    {
                      "function": "limit_count",
                      "limit": {
                        "max": 9
                      }
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "melon_slice"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/melon"
    },
    "melon_stem": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "melon_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "0"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.06666667
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "melon_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "1"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.13333334
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "melon_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "2"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.2
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "melon_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "3"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.26666668
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "melon_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "4"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.33333334
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "melon_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "5"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.4
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "melon_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "6"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.46666667
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "melon_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "7"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.53333336
                  },
                  "function": "set_count"
                }
              ],
              "name": "melon_seeds"
            }
          ],
          "functions": [
            {
              "function": "explosion_decay"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/melon_stem"
    },
    "mossy_cobblestone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mossy_cobblestone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mossy_cobblestone"
    },
    "mossy_cobblestone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "mossy_cobblestone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "mossy_cobblestone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mossy_cobblestone_slab"
    },
    "mossy_cobblestone_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mossy_cobblestone_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mossy_cobblestone_stairs"
    },
    "mossy_cobblestone_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mossy_cobblestone_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mossy_cobblestone_wall"
    },
    "mossy_stone_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mossy_stone_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mossy_stone_bricks"
    },
    "mossy_stone_brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "mossy_stone_brick_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "mossy_stone_brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mossy_stone_brick_slab"
    },
    "mossy_stone_brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mossy_stone_brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mossy_stone_brick_stairs"
    },
    "mossy_stone_brick_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mossy_stone_brick_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mossy_stone_brick_wall"
    },
    "moss_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "moss_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/moss_block"
    },
    "moss_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "moss_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/moss_carpet"
    },
    "mud": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mud"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mud"
    },
    "muddy_mangrove_roots": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "muddy_mangrove_roots"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/muddy_mangrove_roots"
    },
    "mud_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mud_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mud_bricks"
    },
    "mud_brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "mud_brick_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "mud_brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mud_brick_slab"
    },
    "mud_brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mud_brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mud_brick_stairs"
    },
    "mud_brick_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mud_brick_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mud_brick_wall"
    },
    "mushroom_stem": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mushroom_stem"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mushroom_stem"
    },
    "mycelium": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "mycelium"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "dirt"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/mycelium"
    },
    "netherite_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "netherite_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/netherite_block"
    },
    "netherrack": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "netherrack"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/netherrack"
    },
    "nether_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "nether_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/nether_bricks"
    },
    "nether_brick_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "nether_brick_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/nether_brick_fence"
    },
    "nether_brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "nether_brick_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "nether_brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/nether_brick_slab"
    },
    "nether_brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "nether_brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/nether_brick_stairs"
    },
    "nether_brick_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "nether_brick_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/nether_brick_wall"
    },
    "nether_gold_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "nether_gold_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 6,
                        "min": 2
                      },
                      "function": "set_count"
                    },
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "gold_nugget"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/nether_gold_ore"
    },
    "nether_portal": {
      "type": "block",
      "random_sequence": "blocks/nether_portal"
    },
    "nether_quartz_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "nether_quartz_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "ore_drops",
                      "function": "apply_bonus"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "quartz"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/nether_quartz_ore"
    },
    "nether_sprouts": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "items": "shears"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "nether_sprouts"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/nether_sprouts"
    },
    "nether_wart": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "nether_wart",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "3"
                      }
                    }
                  ],
                  "count": {
                    "type": "uniform",
                    "max": 4,
                    "min": 2
                  },
                  "function": "set_count"
                },
                {
                  "conditions": [
                    {
                      "block": "nether_wart",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "3"
                      }
                    }
                  ],
                  "enchantment": "fortune",
                  "formula": "uniform_bonus_count",
                  "function": "apply_bonus",
                  "parameters": {
                    "bonusMultiplier": 1
                  }
                }
              ],
              "name": "nether_wart"
            }
          ],
          "functions": [
            {
              "function": "explosion_decay"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/nether_wart"
    },
    "nether_wart_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "nether_wart_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/nether_wart_block"
    },
    "note_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "note_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/note_block"
    },
    "oak_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_button"
    },
    "oak_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "oak_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "oak_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_door"
    },
    "oak_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_fence"
    },
    "oak_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_fence_gate"
    },
    "oak_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_hanging_sign"
    },
    "oak_leaves": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "oak_leaves"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chances": [
                        0.05,
                        0.0625,
                        0.083333336,
                        0.1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "oak_sapling"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "chances": [
                    0.02,
                    0.022222223,
                    0.025,
                    0.033333335,
                    0.1
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stick"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "condition": "survives_explosion"
                },
                {
                  "chances": [
                    5e-3,
                    0.0055555557,
                    625e-5,
                    8333334e-9,
                    0.025
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "name": "apple"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_leaves"
    },
    "oak_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_log"
    },
    "oak_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_planks"
    },
    "oak_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_pressure_plate"
    },
    "oak_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_sapling"
    },
    "oak_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_sign"
    },
    "oak_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "oak_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "oak_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_slab"
    },
    "oak_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_stairs"
    },
    "oak_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_trapdoor"
    },
    "oak_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oak_wood"
    },
    "observer": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "observer"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/observer"
    },
    "obsidian": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "obsidian"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/obsidian"
    },
    "ochre_froglight": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "ochre_froglight"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/ochre_froglight"
    },
    "open_eyeblossom": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "open_eyeblossom"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/open_eyeblossom"
    },
    "orange_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "orange_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_banner"
    },
    "orange_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "orange_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "orange_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_bed"
    },
    "orange_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "orange_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "orange_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "orange_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "orange_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_candle"
    },
    "orange_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "orange_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_candle_cake"
    },
    "orange_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "orange_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_carpet"
    },
    "orange_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "orange_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_concrete"
    },
    "orange_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "orange_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_concrete_powder"
    },
    "orange_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "orange_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_glazed_terracotta"
    },
    "orange_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "orange_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_shulker_box"
    },
    "orange_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "orange_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_stained_glass"
    },
    "orange_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "orange_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_stained_glass_pane"
    },
    "orange_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "orange_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_terracotta"
    },
    "orange_tulip": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "orange_tulip"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_tulip"
    },
    "orange_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "orange_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/orange_wool"
    },
    "oxeye_daisy": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oxeye_daisy"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oxeye_daisy"
    },
    "oxidized_chiseled_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oxidized_chiseled_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oxidized_chiseled_copper"
    },
    "oxidized_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oxidized_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oxidized_copper"
    },
    "oxidized_copper_bulb": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oxidized_copper_bulb"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oxidized_copper_bulb"
    },
    "oxidized_copper_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "oxidized_copper_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "oxidized_copper_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oxidized_copper_door"
    },
    "oxidized_copper_grate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oxidized_copper_grate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oxidized_copper_grate"
    },
    "oxidized_copper_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oxidized_copper_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oxidized_copper_trapdoor"
    },
    "oxidized_cut_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oxidized_cut_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oxidized_cut_copper"
    },
    "oxidized_cut_copper_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "oxidized_cut_copper_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "oxidized_cut_copper_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oxidized_cut_copper_slab"
    },
    "oxidized_cut_copper_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oxidized_cut_copper_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/oxidized_cut_copper_stairs"
    },
    "packed_ice": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "packed_ice"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/packed_ice"
    },
    "packed_mud": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "packed_mud"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/packed_mud"
    },
    "pale_hanging_moss": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "any_of",
              "terms": [
                {
                  "condition": "match_tool",
                  "predicate": {
                    "items": "shears"
                  }
                },
                {
                  "condition": "match_tool",
                  "predicate": {
                    "predicates": {
                      "enchantments": [
                        {
                          "enchantments": "silk_touch",
                          "levels": {
                            "min": 1
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_hanging_moss"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_hanging_moss"
    },
    "pale_moss_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_moss_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_moss_block"
    },
    "pale_moss_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "pale_moss_carpet",
                  "condition": "block_state_property",
                  "properties": {
                    "bottom": "true"
                  }
                }
              ],
              "functions": [
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "pale_moss_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_moss_carpet"
    },
    "pale_oak_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_button"
    },
    "pale_oak_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "pale_oak_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "pale_oak_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_door"
    },
    "pale_oak_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_fence"
    },
    "pale_oak_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_fence_gate"
    },
    "pale_oak_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_hanging_sign"
    },
    "pale_oak_leaves": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "pale_oak_leaves"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chances": [
                        0.05,
                        0.0625,
                        0.083333336,
                        0.1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "pale_oak_sapling"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "chances": [
                    0.02,
                    0.022222223,
                    0.025,
                    0.033333335,
                    0.1
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stick"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_leaves"
    },
    "pale_oak_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_log"
    },
    "pale_oak_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_planks"
    },
    "pale_oak_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_pressure_plate"
    },
    "pale_oak_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_sapling"
    },
    "pale_oak_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_sign"
    },
    "pale_oak_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pale_oak_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "pale_oak_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_slab"
    },
    "pale_oak_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_stairs"
    },
    "pale_oak_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_trapdoor"
    },
    "pale_oak_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pale_oak_wood"
    },
    "pearlescent_froglight": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pearlescent_froglight"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pearlescent_froglight"
    },
    "peony": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "peony",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "peony"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/peony"
    },
    "petrified_oak_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "petrified_oak_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "petrified_oak_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/petrified_oak_slab"
    },
    "piglin_head": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "piglin_head"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/piglin_head"
    },
    "pink_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "pink_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_banner"
    },
    "pink_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "pink_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "pink_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_bed"
    },
    "pink_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pink_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pink_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pink_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "pink_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_candle"
    },
    "pink_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "pink_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_candle_cake"
    },
    "pink_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pink_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_carpet"
    },
    "pink_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pink_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_concrete"
    },
    "pink_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pink_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_concrete_powder"
    },
    "pink_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pink_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_glazed_terracotta"
    },
    "pink_petals": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pink_petals",
                      "condition": "block_state_property",
                      "properties": {
                        "flower_amount": "1"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pink_petals",
                      "condition": "block_state_property",
                      "properties": {
                        "flower_amount": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pink_petals",
                      "condition": "block_state_property",
                      "properties": {
                        "flower_amount": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pink_petals",
                      "condition": "block_state_property",
                      "properties": {
                        "flower_amount": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "pink_petals"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_petals"
    },
    "pink_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "pink_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_shulker_box"
    },
    "pink_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pink_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_stained_glass"
    },
    "pink_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pink_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_stained_glass_pane"
    },
    "pink_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pink_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_terracotta"
    },
    "pink_tulip": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pink_tulip"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_tulip"
    },
    "pink_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pink_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pink_wool"
    },
    "piston": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "piston"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/piston"
    },
    "pitcher_crop": {
      "type": "block",
      "functions": [
        {
          "function": "explosion_decay"
        }
      ],
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "block": "pitcher_crop",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "0"
                      }
                    },
                    {
                      "block": "pitcher_crop",
                      "condition": "block_state_property",
                      "properties": {
                        "half": "lower"
                      }
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": 1,
                      "function": "set_count"
                    }
                  ],
                  "name": "pitcher_pod"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "block": "pitcher_crop",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "1"
                      }
                    },
                    {
                      "block": "pitcher_crop",
                      "condition": "block_state_property",
                      "properties": {
                        "half": "lower"
                      }
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": 1,
                      "function": "set_count"
                    }
                  ],
                  "name": "pitcher_pod"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "block": "pitcher_crop",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "2"
                      }
                    },
                    {
                      "block": "pitcher_crop",
                      "condition": "block_state_property",
                      "properties": {
                        "half": "lower"
                      }
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": 1,
                      "function": "set_count"
                    }
                  ],
                  "name": "pitcher_pod"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "block": "pitcher_crop",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "3"
                      }
                    },
                    {
                      "block": "pitcher_crop",
                      "condition": "block_state_property",
                      "properties": {
                        "half": "lower"
                      }
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": 1,
                      "function": "set_count"
                    }
                  ],
                  "name": "pitcher_pod"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "block": "pitcher_crop",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "4"
                      }
                    },
                    {
                      "block": "pitcher_crop",
                      "condition": "block_state_property",
                      "properties": {
                        "half": "lower"
                      }
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": 1,
                      "function": "set_count"
                    }
                  ],
                  "name": "pitcher_plant"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pitcher_crop"
    },
    "pitcher_plant": {
      "type": "block",
      "functions": [
        {
          "function": "explosion_decay"
        }
      ],
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "pitcher_plant",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "pitcher_plant"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pitcher_plant"
    },
    "player_head": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "profile",
                    "note_block_sound",
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "player_head"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/player_head"
    },
    "podzol": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "podzol"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "dirt"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/podzol"
    },
    "pointed_dripstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pointed_dripstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pointed_dripstone"
    },
    "polished_andesite": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_andesite"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_andesite"
    },
    "polished_andesite_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "polished_andesite_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "polished_andesite_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_andesite_slab"
    },
    "polished_andesite_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_andesite_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_andesite_stairs"
    },
    "polished_basalt": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_basalt"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_basalt"
    },
    "polished_blackstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_blackstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_blackstone"
    },
    "polished_blackstone_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_blackstone_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_blackstone_bricks"
    },
    "polished_blackstone_brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "polished_blackstone_brick_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "polished_blackstone_brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_blackstone_brick_slab"
    },
    "polished_blackstone_brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_blackstone_brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_blackstone_brick_stairs"
    },
    "polished_blackstone_brick_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_blackstone_brick_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_blackstone_brick_wall"
    },
    "polished_blackstone_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_blackstone_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_blackstone_button"
    },
    "polished_blackstone_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_blackstone_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_blackstone_pressure_plate"
    },
    "polished_blackstone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "polished_blackstone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "polished_blackstone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_blackstone_slab"
    },
    "polished_blackstone_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_blackstone_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_blackstone_stairs"
    },
    "polished_blackstone_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_blackstone_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_blackstone_wall"
    },
    "polished_deepslate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_deepslate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_deepslate"
    },
    "polished_deepslate_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "polished_deepslate_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "polished_deepslate_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_deepslate_slab"
    },
    "polished_deepslate_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_deepslate_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_deepslate_stairs"
    },
    "polished_deepslate_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_deepslate_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_deepslate_wall"
    },
    "polished_diorite": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_diorite"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_diorite"
    },
    "polished_diorite_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "polished_diorite_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "polished_diorite_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_diorite_slab"
    },
    "polished_diorite_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_diorite_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_diorite_stairs"
    },
    "polished_granite": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_granite"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_granite"
    },
    "polished_granite_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "polished_granite_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "polished_granite_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_granite_slab"
    },
    "polished_granite_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_granite_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_granite_stairs"
    },
    "polished_tuff": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_tuff"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_tuff"
    },
    "polished_tuff_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "polished_tuff_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "polished_tuff_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_tuff_slab"
    },
    "polished_tuff_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_tuff_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_tuff_stairs"
    },
    "polished_tuff_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "polished_tuff_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/polished_tuff_wall"
    },
    "poppy": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "poppy"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/poppy"
    },
    "potatoes": {
      "type": "block",
      "functions": [
        {
          "function": "explosion_decay"
        }
      ],
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "potato"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "potatoes",
              "condition": "block_state_property",
              "properties": {
                "age": "7"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "enchantment": "fortune",
                  "formula": "binomial_with_bonus_count",
                  "function": "apply_bonus",
                  "parameters": {
                    "extra": 3,
                    "probability": 0.5714286
                  }
                }
              ],
              "name": "potato"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "potatoes",
              "condition": "block_state_property",
              "properties": {
                "age": "7"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "chance": 0.02,
                  "condition": "random_chance"
                }
              ],
              "name": "poisonous_potato"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potatoes"
    },
    "potted_acacia_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "acacia_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_acacia_sapling"
    },
    "potted_allium": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "allium"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_allium"
    },
    "potted_azalea_bush": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "azalea"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_azalea_bush"
    },
    "potted_azure_bluet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "azure_bluet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_azure_bluet"
    },
    "potted_bamboo": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "bamboo"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_bamboo"
    },
    "potted_birch_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "birch_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_birch_sapling"
    },
    "potted_blue_orchid": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "blue_orchid"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_blue_orchid"
    },
    "potted_brown_mushroom": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "brown_mushroom"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_brown_mushroom"
    },
    "potted_cactus": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cactus"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_cactus"
    },
    "potted_cherry_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cherry_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_cherry_sapling"
    },
    "potted_closed_eyeblossom": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "closed_eyeblossom"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_closed_eyeblossom"
    },
    "potted_cornflower": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cornflower"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_cornflower"
    },
    "potted_crimson_fungus": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_fungus"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_crimson_fungus"
    },
    "potted_crimson_roots": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "crimson_roots"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_crimson_roots"
    },
    "potted_dandelion": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dandelion"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_dandelion"
    },
    "potted_dark_oak_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dark_oak_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_dark_oak_sapling"
    },
    "potted_dead_bush": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "dead_bush"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_dead_bush"
    },
    "potted_fern": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "fern"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_fern"
    },
    "potted_flowering_azalea_bush": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flowering_azalea"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_flowering_azalea_bush"
    },
    "potted_jungle_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "jungle_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_jungle_sapling"
    },
    "potted_lily_of_the_valley": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "lily_of_the_valley"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_lily_of_the_valley"
    },
    "potted_mangrove_propagule": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "mangrove_propagule"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_mangrove_propagule"
    },
    "potted_oak_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oak_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_oak_sapling"
    },
    "potted_open_eyeblossom": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "open_eyeblossom"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_open_eyeblossom"
    },
    "potted_orange_tulip": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "orange_tulip"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_orange_tulip"
    },
    "potted_oxeye_daisy": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "oxeye_daisy"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_oxeye_daisy"
    },
    "potted_pale_oak_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pale_oak_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_pale_oak_sapling"
    },
    "potted_pink_tulip": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pink_tulip"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_pink_tulip"
    },
    "potted_poppy": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "poppy"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_poppy"
    },
    "potted_red_mushroom": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_mushroom"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_red_mushroom"
    },
    "potted_red_tulip": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_tulip"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_red_tulip"
    },
    "potted_spruce_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_spruce_sapling"
    },
    "potted_torchflower": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "torchflower"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_torchflower"
    },
    "potted_warped_fungus": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_fungus"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_warped_fungus"
    },
    "potted_warped_roots": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_roots"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_warped_roots"
    },
    "potted_white_tulip": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "white_tulip"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_white_tulip"
    },
    "potted_wither_rose": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "flower_pot"
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "wither_rose"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/potted_wither_rose"
    },
    "powder_snow": {
      "type": "block",
      "random_sequence": "blocks/powder_snow"
    },
    "powder_snow_cauldron": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cauldron"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/powder_snow_cauldron"
    },
    "powered_rail": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "powered_rail"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/powered_rail"
    },
    "prismarine": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "prismarine"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/prismarine"
    },
    "prismarine_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "prismarine_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/prismarine_bricks"
    },
    "prismarine_brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "prismarine_brick_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "prismarine_brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/prismarine_brick_slab"
    },
    "prismarine_brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "prismarine_brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/prismarine_brick_stairs"
    },
    "prismarine_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "prismarine_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "prismarine_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/prismarine_slab"
    },
    "prismarine_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "prismarine_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/prismarine_stairs"
    },
    "prismarine_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "prismarine_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/prismarine_wall"
    },
    "pumpkin": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "pumpkin"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pumpkin"
    },
    "pumpkin_stem": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pumpkin_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "0"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.06666667
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pumpkin_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "1"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.13333334
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pumpkin_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "2"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.2
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pumpkin_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "3"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.26666668
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pumpkin_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "4"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.33333334
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pumpkin_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "5"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.4
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pumpkin_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "6"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.46666667
                  },
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "pumpkin_stem",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "7"
                      }
                    }
                  ],
                  "count": {
                    "type": "binomial",
                    "n": 3,
                    "p": 0.53333336
                  },
                  "function": "set_count"
                }
              ],
              "name": "pumpkin_seeds"
            }
          ],
          "functions": [
            {
              "function": "explosion_decay"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/pumpkin_stem"
    },
    "purple_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "purple_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_banner"
    },
    "purple_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "purple_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "purple_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_bed"
    },
    "purple_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "purple_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "purple_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "purple_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "purple_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_candle"
    },
    "purple_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "purple_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_candle_cake"
    },
    "purple_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "purple_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_carpet"
    },
    "purple_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "purple_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_concrete"
    },
    "purple_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "purple_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_concrete_powder"
    },
    "purple_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "purple_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_glazed_terracotta"
    },
    "purple_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "purple_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_shulker_box"
    },
    "purple_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "purple_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_stained_glass"
    },
    "purple_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "purple_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_stained_glass_pane"
    },
    "purple_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "purple_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_terracotta"
    },
    "purple_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "purple_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purple_wool"
    },
    "purpur_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "purpur_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purpur_block"
    },
    "purpur_pillar": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "purpur_pillar"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purpur_pillar"
    },
    "purpur_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "purpur_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "purpur_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purpur_slab"
    },
    "purpur_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "purpur_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/purpur_stairs"
    },
    "quartz_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "quartz_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/quartz_block"
    },
    "quartz_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "quartz_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/quartz_bricks"
    },
    "quartz_pillar": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "quartz_pillar"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/quartz_pillar"
    },
    "quartz_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "quartz_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "quartz_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/quartz_slab"
    },
    "quartz_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "quartz_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/quartz_stairs"
    },
    "rail": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "rail"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/rail"
    },
    "raw_copper_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "raw_copper_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/raw_copper_block"
    },
    "raw_gold_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "raw_gold_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/raw_gold_block"
    },
    "raw_iron_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "raw_iron_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/raw_iron_block"
    },
    "redstone_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "redstone_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/redstone_block"
    },
    "redstone_lamp": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "redstone_lamp"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/redstone_lamp"
    },
    "redstone_ore": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "redstone_ore"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 5,
                        "min": 4
                      },
                      "function": "set_count"
                    },
                    {
                      "enchantment": "fortune",
                      "formula": "uniform_bonus_count",
                      "function": "apply_bonus",
                      "parameters": {
                        "bonusMultiplier": 1
                      }
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "redstone"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/redstone_ore"
    },
    "redstone_torch": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "redstone_torch"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/redstone_torch"
    },
    "redstone_wire": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "redstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/redstone_wire"
    },
    "red_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "red_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_banner"
    },
    "red_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "red_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "red_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_bed"
    },
    "red_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "red_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "red_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "red_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "red_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_candle"
    },
    "red_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "red_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_candle_cake"
    },
    "red_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_carpet"
    },
    "red_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_concrete"
    },
    "red_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_concrete_powder"
    },
    "red_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_glazed_terracotta"
    },
    "red_mushroom": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_mushroom"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_mushroom"
    },
    "red_mushroom_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "red_mushroom_block"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 2,
                        "min": -6
                      },
                      "function": "set_count"
                    },
                    {
                      "function": "limit_count",
                      "limit": {
                        "min": 0
                      }
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "red_mushroom"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_mushroom_block"
    },
    "red_nether_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_nether_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_nether_bricks"
    },
    "red_nether_brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "red_nether_brick_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "red_nether_brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_nether_brick_slab"
    },
    "red_nether_brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_nether_brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_nether_brick_stairs"
    },
    "red_nether_brick_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_nether_brick_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_nether_brick_wall"
    },
    "red_sand": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_sand"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_sand"
    },
    "red_sandstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_sandstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_sandstone"
    },
    "red_sandstone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "red_sandstone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "red_sandstone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_sandstone_slab"
    },
    "red_sandstone_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_sandstone_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_sandstone_stairs"
    },
    "red_sandstone_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_sandstone_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_sandstone_wall"
    },
    "red_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "red_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_shulker_box"
    },
    "red_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_stained_glass"
    },
    "red_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_stained_glass_pane"
    },
    "red_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_terracotta"
    },
    "red_tulip": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_tulip"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_tulip"
    },
    "red_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "red_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/red_wool"
    },
    "reinforced_deepslate": {
      "type": "block",
      "random_sequence": "blocks/reinforced_deepslate"
    },
    "repeater": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "repeater"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/repeater"
    },
    "resin_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "resin_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/resin_block"
    },
    "resin_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "resin_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/resin_bricks"
    },
    "resin_brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "resin_brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/resin_brick_slab"
    },
    "resin_brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "resin_brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/resin_brick_stairs"
    },
    "resin_brick_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "resin_brick_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/resin_brick_wall"
    },
    "resin_clump": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "resin_clump",
                      "condition": "block_state_property",
                      "properties": {
                        "down": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "resin_clump",
                      "condition": "block_state_property",
                      "properties": {
                        "up": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "resin_clump",
                      "condition": "block_state_property",
                      "properties": {
                        "north": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "resin_clump",
                      "condition": "block_state_property",
                      "properties": {
                        "south": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "resin_clump",
                      "condition": "block_state_property",
                      "properties": {
                        "west": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "resin_clump",
                      "condition": "block_state_property",
                      "properties": {
                        "east": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "count": -1,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "resin_clump"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/resin_clump"
    },
    "respawn_anchor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "respawn_anchor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/respawn_anchor"
    },
    "rooted_dirt": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "rooted_dirt"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/rooted_dirt"
    },
    "rose_bush": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "rose_bush",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "rose_bush"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/rose_bush"
    },
    "sand": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sand"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sand"
    },
    "sandstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sandstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sandstone"
    },
    "sandstone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "sandstone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "sandstone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sandstone_slab"
    },
    "sandstone_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sandstone_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sandstone_stairs"
    },
    "sandstone_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sandstone_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sandstone_wall"
    },
    "scaffolding": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "scaffolding"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/scaffolding"
    },
    "sculk": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sculk"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sculk"
    },
    "sculk_catalyst": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sculk_catalyst"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sculk_catalyst"
    },
    "sculk_sensor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sculk_sensor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sculk_sensor"
    },
    "sculk_shrieker": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sculk_shrieker"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sculk_shrieker"
    },
    "sculk_vein": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "condition": "match_tool",
                  "predicate": {
                    "predicates": {
                      "enchantments": [
                        {
                          "enchantments": "silk_touch",
                          "levels": {
                            "min": 1
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "functions": [
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "sculk_vein",
                      "condition": "block_state_property",
                      "properties": {
                        "down": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "sculk_vein",
                      "condition": "block_state_property",
                      "properties": {
                        "up": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "sculk_vein",
                      "condition": "block_state_property",
                      "properties": {
                        "north": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "sculk_vein",
                      "condition": "block_state_property",
                      "properties": {
                        "south": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "sculk_vein",
                      "condition": "block_state_property",
                      "properties": {
                        "west": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "conditions": [
                    {
                      "block": "sculk_vein",
                      "condition": "block_state_property",
                      "properties": {
                        "east": "true"
                      }
                    }
                  ],
                  "count": 1,
                  "function": "set_count"
                },
                {
                  "add": true,
                  "count": -1,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "sculk_vein"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sculk_vein"
    },
    "seagrass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "items": "shears"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "seagrass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/seagrass"
    },
    "sea_lantern": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "sea_lantern"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": {
                        "type": "uniform",
                        "max": 3,
                        "min": 2
                      },
                      "function": "set_count"
                    },
                    {
                      "enchantment": "fortune",
                      "formula": "uniform_bonus_count",
                      "function": "apply_bonus",
                      "parameters": {
                        "bonusMultiplier": 1
                      }
                    },
                    {
                      "function": "limit_count",
                      "limit": {
                        "max": 5,
                        "min": 1
                      }
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "prismarine_crystals"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sea_lantern"
    },
    "sea_pickle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "sea_pickle",
                      "condition": "block_state_property",
                      "properties": {
                        "pickles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "sea_pickle",
                      "condition": "block_state_property",
                      "properties": {
                        "pickles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "sea_pickle",
                      "condition": "block_state_property",
                      "properties": {
                        "pickles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "sea_pickle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sea_pickle"
    },
    "short_grass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "items": "shears"
                      }
                    }
                  ],
                  "name": "short_grass"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "chance": 0.125,
                      "condition": "random_chance"
                    }
                  ],
                  "functions": [
                    {
                      "enchantment": "fortune",
                      "formula": "uniform_bonus_count",
                      "function": "apply_bonus",
                      "parameters": {
                        "bonusMultiplier": 2
                      }
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "wheat_seeds"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/short_grass"
    },
    "shroomlight": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "shroomlight"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/shroomlight"
    },
    "shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/shulker_box"
    },
    "skeleton_skull": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "skeleton_skull"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/skeleton_skull"
    },
    "slime_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "slime_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/slime_block"
    },
    "small_amethyst_bud": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "small_amethyst_bud"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/small_amethyst_bud"
    },
    "small_dripleaf": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "items": "shears"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "small_dripleaf"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/small_dripleaf"
    },
    "smithing_table": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "smithing_table"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smithing_table"
    },
    "smoker": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "smoker"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smoker"
    },
    "smooth_basalt": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "smooth_basalt"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_basalt"
    },
    "smooth_quartz": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "smooth_quartz"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_quartz"
    },
    "smooth_quartz_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "smooth_quartz_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "smooth_quartz_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_quartz_slab"
    },
    "smooth_quartz_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "smooth_quartz_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_quartz_stairs"
    },
    "smooth_red_sandstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "smooth_red_sandstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_red_sandstone"
    },
    "smooth_red_sandstone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "smooth_red_sandstone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "smooth_red_sandstone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_red_sandstone_slab"
    },
    "smooth_red_sandstone_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "smooth_red_sandstone_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_red_sandstone_stairs"
    },
    "smooth_sandstone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "smooth_sandstone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_sandstone"
    },
    "smooth_sandstone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "smooth_sandstone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "smooth_sandstone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_sandstone_slab"
    },
    "smooth_sandstone_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "smooth_sandstone_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_sandstone_stairs"
    },
    "smooth_stone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "smooth_stone"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_stone"
    },
    "smooth_stone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "smooth_stone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "smooth_stone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/smooth_stone_slab"
    },
    "sniffer_egg": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sniffer_egg"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sniffer_egg"
    },
    "snow": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "entity_properties",
              "entity": "this",
              "predicate": {}
            }
          ],
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "alternatives",
                  "children": [
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "1"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 1,
                          "function": "set_count"
                        }
                      ],
                      "name": "snowball"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "2"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 2,
                          "function": "set_count"
                        }
                      ],
                      "name": "snowball"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "3"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 3,
                          "function": "set_count"
                        }
                      ],
                      "name": "snowball"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "4"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 4,
                          "function": "set_count"
                        }
                      ],
                      "name": "snowball"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "5"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 5,
                          "function": "set_count"
                        }
                      ],
                      "name": "snowball"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "6"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 6,
                          "function": "set_count"
                        }
                      ],
                      "name": "snowball"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "7"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 7,
                          "function": "set_count"
                        }
                      ],
                      "name": "snowball"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "8"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 8,
                          "function": "set_count"
                        }
                      ],
                      "name": "snowball"
                    }
                  ],
                  "conditions": [
                    {
                      "condition": "inverted",
                      "term": {
                        "condition": "match_tool",
                        "predicate": {
                          "predicates": {
                            "enchantments": [
                              {
                                "enchantments": "silk_touch",
                                "levels": {
                                  "min": 1
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "type": "alternatives",
                  "children": [
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "1"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 1,
                          "function": "set_count"
                        }
                      ],
                      "name": "snow"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "2"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 2,
                          "function": "set_count"
                        }
                      ],
                      "name": "snow"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "3"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 3,
                          "function": "set_count"
                        }
                      ],
                      "name": "snow"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "4"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 4,
                          "function": "set_count"
                        }
                      ],
                      "name": "snow"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "5"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 5,
                          "function": "set_count"
                        }
                      ],
                      "name": "snow"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "6"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 6,
                          "function": "set_count"
                        }
                      ],
                      "name": "snow"
                    },
                    {
                      "type": "item",
                      "conditions": [
                        {
                          "block": "snow",
                          "condition": "block_state_property",
                          "properties": {
                            "layers": "7"
                          }
                        }
                      ],
                      "functions": [
                        {
                          "add": false,
                          "count": 7,
                          "function": "set_count"
                        }
                      ],
                      "name": "snow"
                    },
                    {
                      "type": "item",
                      "name": "snow_block"
                    }
                  ]
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/snow"
    },
    "snow_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "snow_block"
                },
                {
                  "type": "item",
                  "functions": [
                    {
                      "add": false,
                      "count": 4,
                      "function": "set_count"
                    },
                    {
                      "function": "explosion_decay"
                    }
                  ],
                  "name": "snowball"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/snow_block"
    },
    "soul_campfire": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "soul_campfire"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": 1,
                      "function": "set_count"
                    }
                  ],
                  "name": "soul_soil"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/soul_campfire"
    },
    "soul_fire": {
      "type": "block",
      "random_sequence": "blocks/soul_fire"
    },
    "soul_lantern": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "soul_lantern"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/soul_lantern"
    },
    "soul_sand": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "soul_sand"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/soul_sand"
    },
    "soul_soil": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "soul_soil"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/soul_soil"
    },
    "soul_torch": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "soul_torch"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/soul_torch"
    },
    "spawner": {
      "type": "block",
      "random_sequence": "blocks/spawner"
    },
    "sponge": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sponge"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sponge"
    },
    "spore_blossom": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spore_blossom"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spore_blossom"
    },
    "spruce_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_button"
    },
    "spruce_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "spruce_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "spruce_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_door"
    },
    "spruce_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_fence"
    },
    "spruce_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_fence_gate"
    },
    "spruce_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_hanging_sign"
    },
    "spruce_leaves": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "spruce_leaves"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chances": [
                        0.05,
                        0.0625,
                        0.083333336,
                        0.1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "spruce_sapling"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "inverted",
              "term": {
                "condition": "any_of",
                "terms": [
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "items": "shears"
                    }
                  },
                  {
                    "condition": "match_tool",
                    "predicate": {
                      "predicates": {
                        "enchantments": [
                          {
                            "enchantments": "silk_touch",
                            "levels": {
                              "min": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "chances": [
                    0.02,
                    0.022222223,
                    0.025,
                    0.033333335,
                    0.1
                  ],
                  "condition": "table_bonus",
                  "enchantment": "fortune"
                }
              ],
              "functions": [
                {
                  "add": false,
                  "count": {
                    "type": "uniform",
                    "max": 2,
                    "min": 1
                  },
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stick"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_leaves"
    },
    "spruce_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_log"
    },
    "spruce_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_planks"
    },
    "spruce_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_pressure_plate"
    },
    "spruce_sapling": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_sapling"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_sapling"
    },
    "spruce_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_sign"
    },
    "spruce_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "spruce_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "spruce_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_slab"
    },
    "spruce_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_stairs"
    },
    "spruce_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_trapdoor"
    },
    "spruce_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "spruce_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/spruce_wood"
    },
    "sticky_piston": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sticky_piston"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sticky_piston"
    },
    "stone": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "stone"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "cobblestone"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stone"
    },
    "stonecutter": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stonecutter"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stonecutter"
    },
    "stone_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stone_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stone_bricks"
    },
    "stone_brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "stone_brick_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stone_brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stone_brick_slab"
    },
    "stone_brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stone_brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stone_brick_stairs"
    },
    "stone_brick_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stone_brick_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stone_brick_wall"
    },
    "stone_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stone_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stone_button"
    },
    "stone_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stone_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stone_pressure_plate"
    },
    "stone_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "stone_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "stone_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stone_slab"
    },
    "stone_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stone_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stone_stairs"
    },
    "stripped_acacia_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_acacia_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_acacia_log"
    },
    "stripped_acacia_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_acacia_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_acacia_wood"
    },
    "stripped_bamboo_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_bamboo_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_bamboo_block"
    },
    "stripped_birch_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_birch_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_birch_log"
    },
    "stripped_birch_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_birch_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_birch_wood"
    },
    "stripped_cherry_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_cherry_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_cherry_log"
    },
    "stripped_cherry_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_cherry_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_cherry_wood"
    },
    "stripped_crimson_hyphae": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_crimson_hyphae"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_crimson_hyphae"
    },
    "stripped_crimson_stem": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_crimson_stem"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_crimson_stem"
    },
    "stripped_dark_oak_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_dark_oak_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_dark_oak_log"
    },
    "stripped_dark_oak_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_dark_oak_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_dark_oak_wood"
    },
    "stripped_jungle_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_jungle_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_jungle_log"
    },
    "stripped_jungle_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_jungle_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_jungle_wood"
    },
    "stripped_mangrove_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_mangrove_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_mangrove_log"
    },
    "stripped_mangrove_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_mangrove_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_mangrove_wood"
    },
    "stripped_oak_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_oak_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_oak_log"
    },
    "stripped_oak_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_oak_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_oak_wood"
    },
    "stripped_pale_oak_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_pale_oak_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_pale_oak_log"
    },
    "stripped_pale_oak_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_pale_oak_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_pale_oak_wood"
    },
    "stripped_spruce_log": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_spruce_log"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_spruce_log"
    },
    "stripped_spruce_wood": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_spruce_wood"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_spruce_wood"
    },
    "stripped_warped_hyphae": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_warped_hyphae"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_warped_hyphae"
    },
    "stripped_warped_stem": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "stripped_warped_stem"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/stripped_warped_stem"
    },
    "sugar_cane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sugar_cane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sugar_cane"
    },
    "sunflower": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "sunflower",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "sunflower"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sunflower"
    },
    "suspicious_gravel": {
      "type": "block",
      "random_sequence": "blocks/suspicious_gravel"
    },
    "suspicious_sand": {
      "type": "block",
      "random_sequence": "blocks/suspicious_sand"
    },
    "sweet_berry_bush": {
      "type": "block",
      "functions": [
        {
          "function": "explosion_decay"
        }
      ],
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "sweet_berry_bush",
              "condition": "block_state_property",
              "properties": {
                "age": "3"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sweet_berries"
            }
          ],
          "functions": [
            {
              "add": false,
              "count": {
                "type": "uniform",
                "max": 3,
                "min": 2
              },
              "function": "set_count"
            },
            {
              "enchantment": "fortune",
              "formula": "uniform_bonus_count",
              "function": "apply_bonus",
              "parameters": {
                "bonusMultiplier": 1
              }
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "sweet_berry_bush",
              "condition": "block_state_property",
              "properties": {
                "age": "2"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "sweet_berries"
            }
          ],
          "functions": [
            {
              "add": false,
              "count": {
                "type": "uniform",
                "max": 2,
                "min": 1
              },
              "function": "set_count"
            },
            {
              "enchantment": "fortune",
              "formula": "uniform_bonus_count",
              "function": "apply_bonus",
              "parameters": {
                "bonusMultiplier": 1
              }
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/sweet_berry_bush"
    },
    "tall_grass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "tall_grass",
              "condition": "block_state_property",
              "properties": {
                "half": "lower"
              }
            },
            {
              "condition": "location_check",
              "offsetY": 1,
              "predicate": {
                "block": {
                  "blocks": "tall_grass",
                  "state": {
                    "half": "upper"
                  }
                }
              }
            }
          ],
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "items": "shears"
                      }
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": 2,
                      "function": "set_count"
                    }
                  ],
                  "name": "short_grass"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chance": 0.125,
                      "condition": "random_chance"
                    }
                  ],
                  "name": "wheat_seeds"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "tall_grass",
              "condition": "block_state_property",
              "properties": {
                "half": "upper"
              }
            },
            {
              "condition": "location_check",
              "offsetY": -1,
              "predicate": {
                "block": {
                  "blocks": "tall_grass",
                  "state": {
                    "half": "lower"
                  }
                }
              }
            }
          ],
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "items": "shears"
                      }
                    }
                  ],
                  "functions": [
                    {
                      "add": false,
                      "count": 2,
                      "function": "set_count"
                    }
                  ],
                  "name": "short_grass"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    },
                    {
                      "chance": 0.125,
                      "condition": "random_chance"
                    }
                  ],
                  "name": "wheat_seeds"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tall_grass"
    },
    "tall_seagrass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "items": "shears"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "count": 2,
                  "function": "set_count"
                }
              ],
              "name": "seagrass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tall_seagrass"
    },
    "target": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "target"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/target"
    },
    "terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/terracotta"
    },
    "tinted_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "tinted_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tinted_glass"
    },
    "tnt": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "tnt",
                  "condition": "block_state_property",
                  "properties": {
                    "unstable": "false"
                  }
                }
              ],
              "name": "tnt"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tnt"
    },
    "torch": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "torch"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/torch"
    },
    "torchflower": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "torchflower"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/torchflower"
    },
    "torchflower_crop": {
      "type": "block",
      "functions": [
        {
          "function": "explosion_decay"
        }
      ],
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "torchflower_seeds"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/torchflower_crop"
    },
    "trapped_chest": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "trapped_chest"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/trapped_chest"
    },
    "trial_spawner": {
      "type": "block",
      "random_sequence": "blocks/trial_spawner"
    },
    "tripwire": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "string"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tripwire"
    },
    "tripwire_hook": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "tripwire_hook"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tripwire_hook"
    },
    "tube_coral": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "tube_coral"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tube_coral"
    },
    "tube_coral_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "tube_coral_block"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "dead_tube_coral_block"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tube_coral_block"
    },
    "tube_coral_fan": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "tube_coral_fan"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tube_coral_fan"
    },
    "tuff": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "tuff"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tuff"
    },
    "tuff_bricks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "tuff_bricks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tuff_bricks"
    },
    "tuff_brick_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "tuff_brick_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "tuff_brick_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tuff_brick_slab"
    },
    "tuff_brick_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "tuff_brick_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tuff_brick_stairs"
    },
    "tuff_brick_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "tuff_brick_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tuff_brick_wall"
    },
    "tuff_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "tuff_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "tuff_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tuff_slab"
    },
    "tuff_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "tuff_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tuff_stairs"
    },
    "tuff_wall": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "tuff_wall"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/tuff_wall"
    },
    "turtle_egg": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "turtle_egg"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/turtle_egg"
    },
    "twisting_vines": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "twisting_vines"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "chances": [
                        0.33,
                        0.55,
                        0.77,
                        1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "twisting_vines"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/twisting_vines"
    },
    "twisting_vines_plant": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "twisting_vines"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "chances": [
                        0.33,
                        0.55,
                        0.77,
                        1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "twisting_vines"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/twisting_vines_plant"
    },
    "vault": {
      "type": "block",
      "random_sequence": "blocks/vault"
    },
    "verdant_froglight": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "verdant_froglight"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/verdant_froglight"
    },
    "vine": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "items": "shears"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "vine"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/vine"
    },
    "warped_button": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_button"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_button"
    },
    "warped_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "warped_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "warped_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_door"
    },
    "warped_fence": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_fence"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_fence"
    },
    "warped_fence_gate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_fence_gate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_fence_gate"
    },
    "warped_fungus": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_fungus"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_fungus"
    },
    "warped_hanging_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_hanging_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_hanging_sign"
    },
    "warped_hyphae": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_hyphae"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_hyphae"
    },
    "warped_nylium": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "match_tool",
                      "predicate": {
                        "predicates": {
                          "enchantments": [
                            {
                              "enchantments": "silk_touch",
                              "levels": {
                                "min": 1
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "name": "warped_nylium"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "survives_explosion"
                    }
                  ],
                  "name": "netherrack"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_nylium"
    },
    "warped_planks": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_planks"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_planks"
    },
    "warped_pressure_plate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_pressure_plate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_pressure_plate"
    },
    "warped_roots": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_roots"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_roots"
    },
    "warped_sign": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_sign"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_sign"
    },
    "warped_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "warped_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "warped_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_slab"
    },
    "warped_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_stairs"
    },
    "warped_stem": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_stem"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_stem"
    },
    "warped_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_trapdoor"
    },
    "warped_wart_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "warped_wart_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/warped_wart_block"
    },
    "water_cauldron": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "cauldron"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/water_cauldron"
    },
    "waxed_chiseled_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_chiseled_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_chiseled_copper"
    },
    "waxed_copper_block": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_copper_block"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_copper_block"
    },
    "waxed_copper_bulb": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_copper_bulb"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_copper_bulb"
    },
    "waxed_copper_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "waxed_copper_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "waxed_copper_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_copper_door"
    },
    "waxed_copper_grate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_copper_grate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_copper_grate"
    },
    "waxed_copper_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_copper_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_copper_trapdoor"
    },
    "waxed_cut_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_cut_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_cut_copper"
    },
    "waxed_cut_copper_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "waxed_cut_copper_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "waxed_cut_copper_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_cut_copper_slab"
    },
    "waxed_cut_copper_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_cut_copper_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_cut_copper_stairs"
    },
    "waxed_exposed_chiseled_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_exposed_chiseled_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_exposed_chiseled_copper"
    },
    "waxed_exposed_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_exposed_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_exposed_copper"
    },
    "waxed_exposed_copper_bulb": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_exposed_copper_bulb"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_exposed_copper_bulb"
    },
    "waxed_exposed_copper_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "waxed_exposed_copper_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "waxed_exposed_copper_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_exposed_copper_door"
    },
    "waxed_exposed_copper_grate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_exposed_copper_grate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_exposed_copper_grate"
    },
    "waxed_exposed_copper_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_exposed_copper_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_exposed_copper_trapdoor"
    },
    "waxed_exposed_cut_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_exposed_cut_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_exposed_cut_copper"
    },
    "waxed_exposed_cut_copper_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "waxed_exposed_cut_copper_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "waxed_exposed_cut_copper_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_exposed_cut_copper_slab"
    },
    "waxed_exposed_cut_copper_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_exposed_cut_copper_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_exposed_cut_copper_stairs"
    },
    "waxed_oxidized_chiseled_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_oxidized_chiseled_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_oxidized_chiseled_copper"
    },
    "waxed_oxidized_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_oxidized_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_oxidized_copper"
    },
    "waxed_oxidized_copper_bulb": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_oxidized_copper_bulb"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_oxidized_copper_bulb"
    },
    "waxed_oxidized_copper_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "waxed_oxidized_copper_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "waxed_oxidized_copper_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_oxidized_copper_door"
    },
    "waxed_oxidized_copper_grate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_oxidized_copper_grate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_oxidized_copper_grate"
    },
    "waxed_oxidized_copper_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_oxidized_copper_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_oxidized_copper_trapdoor"
    },
    "waxed_oxidized_cut_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_oxidized_cut_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_oxidized_cut_copper"
    },
    "waxed_oxidized_cut_copper_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "waxed_oxidized_cut_copper_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "waxed_oxidized_cut_copper_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_oxidized_cut_copper_slab"
    },
    "waxed_oxidized_cut_copper_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_oxidized_cut_copper_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_oxidized_cut_copper_stairs"
    },
    "waxed_weathered_chiseled_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_weathered_chiseled_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_weathered_chiseled_copper"
    },
    "waxed_weathered_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_weathered_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_weathered_copper"
    },
    "waxed_weathered_copper_bulb": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_weathered_copper_bulb"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_weathered_copper_bulb"
    },
    "waxed_weathered_copper_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "waxed_weathered_copper_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "waxed_weathered_copper_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_weathered_copper_door"
    },
    "waxed_weathered_copper_grate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_weathered_copper_grate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_weathered_copper_grate"
    },
    "waxed_weathered_copper_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_weathered_copper_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_weathered_copper_trapdoor"
    },
    "waxed_weathered_cut_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_weathered_cut_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_weathered_cut_copper"
    },
    "waxed_weathered_cut_copper_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "waxed_weathered_cut_copper_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "waxed_weathered_cut_copper_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_weathered_cut_copper_slab"
    },
    "waxed_weathered_cut_copper_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "waxed_weathered_cut_copper_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/waxed_weathered_cut_copper_stairs"
    },
    "weathered_chiseled_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "weathered_chiseled_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/weathered_chiseled_copper"
    },
    "weathered_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "weathered_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/weathered_copper"
    },
    "weathered_copper_bulb": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "weathered_copper_bulb"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/weathered_copper_bulb"
    },
    "weathered_copper_door": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "weathered_copper_door",
                  "condition": "block_state_property",
                  "properties": {
                    "half": "lower"
                  }
                }
              ],
              "name": "weathered_copper_door"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/weathered_copper_door"
    },
    "weathered_copper_grate": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "weathered_copper_grate"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/weathered_copper_grate"
    },
    "weathered_copper_trapdoor": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "weathered_copper_trapdoor"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/weathered_copper_trapdoor"
    },
    "weathered_cut_copper": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "weathered_cut_copper"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/weathered_cut_copper"
    },
    "weathered_cut_copper_slab": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "weathered_cut_copper_slab",
                      "condition": "block_state_property",
                      "properties": {
                        "type": "double"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "weathered_cut_copper_slab"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/weathered_cut_copper_slab"
    },
    "weathered_cut_copper_stairs": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "weathered_cut_copper_stairs"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/weathered_cut_copper_stairs"
    },
    "weeping_vines": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "weeping_vines"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "chances": [
                        0.33,
                        0.55,
                        0.77,
                        1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "weeping_vines"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/weeping_vines"
    },
    "weeping_vines_plant": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "condition": "any_of",
                      "terms": [
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "items": "shears"
                          }
                        },
                        {
                          "condition": "match_tool",
                          "predicate": {
                            "predicates": {
                              "enchantments": [
                                {
                                  "enchantments": "silk_touch",
                                  "levels": {
                                    "min": 1
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "name": "weeping_vines"
                },
                {
                  "type": "item",
                  "conditions": [
                    {
                      "chances": [
                        0.33,
                        0.55,
                        0.77,
                        1
                      ],
                      "condition": "table_bonus",
                      "enchantment": "fortune"
                    }
                  ],
                  "name": "weeping_vines"
                }
              ]
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/weeping_vines_plant"
    },
    "wet_sponge": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "wet_sponge"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/wet_sponge"
    },
    "wheat": {
      "type": "block",
      "functions": [
        {
          "function": "explosion_decay"
        }
      ],
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "alternatives",
              "children": [
                {
                  "type": "item",
                  "conditions": [
                    {
                      "block": "wheat",
                      "condition": "block_state_property",
                      "properties": {
                        "age": "7"
                      }
                    }
                  ],
                  "name": "wheat"
                },
                {
                  "type": "item",
                  "name": "wheat_seeds"
                }
              ]
            }
          ],
          "rolls": 1
        },
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "block": "wheat",
              "condition": "block_state_property",
              "properties": {
                "age": "7"
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "enchantment": "fortune",
                  "formula": "binomial_with_bonus_count",
                  "function": "apply_bonus",
                  "parameters": {
                    "extra": 3,
                    "probability": 0.5714286
                  }
                }
              ],
              "name": "wheat_seeds"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/wheat"
    },
    "white_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "white_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_banner"
    },
    "white_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "white_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "white_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_bed"
    },
    "white_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "white_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "white_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "white_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "white_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_candle"
    },
    "white_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "white_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_candle_cake"
    },
    "white_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "white_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_carpet"
    },
    "white_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "white_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_concrete"
    },
    "white_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "white_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_concrete_powder"
    },
    "white_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "white_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_glazed_terracotta"
    },
    "white_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "white_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_shulker_box"
    },
    "white_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "white_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_stained_glass"
    },
    "white_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "white_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_stained_glass_pane"
    },
    "white_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "white_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_terracotta"
    },
    "white_tulip": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "white_tulip"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_tulip"
    },
    "white_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "white_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/white_wool"
    },
    "wither_rose": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "wither_rose"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/wither_rose"
    },
    "wither_skeleton_skull": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "wither_skeleton_skull"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/wither_skeleton_skull"
    },
    "yellow_banner": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "item_name",
                    "hide_additional_tooltip",
                    "banner_patterns",
                    "rarity"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "yellow_banner"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_banner"
    },
    "yellow_bed": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "conditions": [
                {
                  "block": "yellow_bed",
                  "condition": "block_state_property",
                  "properties": {
                    "part": "head"
                  }
                }
              ],
              "name": "yellow_bed"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_bed"
    },
    "yellow_candle": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "yellow_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "2"
                      }
                    }
                  ],
                  "count": 2,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "yellow_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "3"
                      }
                    }
                  ],
                  "count": 3,
                  "function": "set_count"
                },
                {
                  "add": false,
                  "conditions": [
                    {
                      "block": "yellow_candle",
                      "condition": "block_state_property",
                      "properties": {
                        "candles": "4"
                      }
                    }
                  ],
                  "count": 4,
                  "function": "set_count"
                },
                {
                  "function": "explosion_decay"
                }
              ],
              "name": "yellow_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_candle"
    },
    "yellow_candle_cake": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "yellow_candle"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_candle_cake"
    },
    "yellow_carpet": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "yellow_carpet"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_carpet"
    },
    "yellow_concrete": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "yellow_concrete"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_concrete"
    },
    "yellow_concrete_powder": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "yellow_concrete_powder"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_concrete_powder"
    },
    "yellow_glazed_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "yellow_glazed_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_glazed_terracotta"
    },
    "yellow_shulker_box": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "functions": [
                {
                  "function": "copy_components",
                  "include": [
                    "custom_name",
                    "container",
                    "lock",
                    "container_loot"
                  ],
                  "source": "block_entity"
                }
              ],
              "name": "yellow_shulker_box"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_shulker_box"
    },
    "yellow_stained_glass": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "yellow_stained_glass"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_stained_glass"
    },
    "yellow_stained_glass_pane": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "match_tool",
              "predicate": {
                "predicates": {
                  "enchantments": [
                    {
                      "enchantments": "silk_touch",
                      "levels": {
                        "min": 1
                      }
                    }
                  ]
                }
              }
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "yellow_stained_glass_pane"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_stained_glass_pane"
    },
    "yellow_terracotta": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "yellow_terracotta"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_terracotta"
    },
    "yellow_wool": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "conditions": [
            {
              "condition": "survives_explosion"
            }
          ],
          "entries": [
            {
              "type": "item",
              "name": "yellow_wool"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/yellow_wool"
    },
    "zombie_head": {
      "type": "block",
      "pools": [
        {
          "bonus_rolls": 0,
          "entries": [
            {
              "type": "item",
              "name": "zombie_head"
            }
          ],
          "rolls": 1
        }
      ],
      "random_sequence": "blocks/zombie_head"
    }
  };

  // src/view/connection/blocks.ts
  var blockItemDrops = /* @__PURE__ */ new Map();
  Object.entries(blockDrops).forEach(([block, drop]) => {
    const drops = [];
    if ("pools" in drop) {
      for (let pool of drop.pools) {
        for (let entry of pool.entries) {
          if (entry.type === "item") {
            drops.push(entry.name);
          } else {
            for (let child of entry.children) {
              if (child.type === "item") {
                drops.push(child.name);
              } else {
                if (child.type === "alternatives") {
                  for (let i of child.children) {
                    drops.push(i.name);
                  }
                } else {
                  if (child.name === "sherds") {
                    drops.push(...tagToItems("#decorated_pot_ingredients"));
                  }
                }
              }
            }
          }
        }
      }
    }
    blockItemDrops.set(block, drops);
  });

  // src/view/connection/chests.ts
  var chestItemLoot = /* @__PURE__ */ new Map();
  Object.entries(chestLoot).forEach(([key, value]) => {
    let loot = [];
    if ("pools" in value) {
      for (let pool of value.pools) {
        for (let entry of pool.entries) {
          switch (entry.type) {
            case "item":
              {
                loot.push(entry.name);
              }
              continue;
            default:
              {
              }
              continue;
          }
        }
      }
    }
    chestItemLoot.set(key, loot);
  });

  // src/view/transformation/place.ts
  var placement = /* @__PURE__ */ new Map([
    ["bamboo", "bamboo_sapling"],
    ["wheat_seeds", "wheat"],
    ["carrot", "carrots"],
    ["potato", "potatoes"],
    ["beetroot_seeds", "beetroots"],
    ["melon_seeds", "melon_stem"],
    ["pumpkin_seeds", "pumpkin_stem"],
    ["pitcher_pod", "pitcher_crop"],
    ["cocoa_beans", "cocoa"],
    ["sweet_berries", "sweet_berry_bush"],
    ["glow_berries", "cave_vines"],
    ["powder_snow_bucket", "powder_snow"],
    ["water_bucket", "water"],
    ["lava_bucket", "lava"],
    ["flint_and_steel", "fire"],
    ["redstone", "redstone_wire"]
  ]);

  // src/view/transformation/useItem.ts
  var useItem = [
    //flower_pot
    ["flower_pot", "acacia_sapling", "potted_acacia_sapling"],
    ["flower_pot", "allium", "potted_allium"],
    ["flower_pot", "azalea", "potted_azalea_bush"],
    ["flower_pot", "azure_bluet", "potted_azure_bluet"],
    ["flower_pot", "bamboo", "potted_bamboo"],
    ["flower_pot", "birch_sapling", "potted_birch_sapling"],
    ["flower_pot", "blue_orchid", "potted_blue_orchid"],
    ["flower_pot", "brown_mushroom", "potted_brown_mushroom"],
    ["flower_pot", "cactus", "potted_cactus"],
    ["flower_pot", "cherry_sapling", "potted_cherry_sapling"],
    ["flower_pot", "closed_eyeblossom", "potted_closed_eyeblossom"],
    ["flower_pot", "cornflower", "potted_cornflower"],
    ["flower_pot", "crimson_fungus", "potted_crimson_fungus"],
    ["flower_pot", "crimson_roots", "potted_crimson_roots"],
    ["flower_pot", "dandelion", "potted_dandelion"],
    ["flower_pot", "dark_oak_sapling", "potted_dark_oak_sapling"],
    ["flower_pot", "dead_bush", "potted_dead_bush"],
    ["flower_pot", "fern", "potted_fern"],
    ["flower_pot", "flowering_azalea", "potted_flowering_azalea_bush"],
    ["flower_pot", "jungle_sapling", "potted_jungle_sapling"],
    ["flower_pot", "lily_of_the_valley", "potted_lily_of_the_valley"],
    ["flower_pot", "mangrove_propagule", "potted_mangrove_propagule"],
    ["flower_pot", "oak_sapling", "potted_oak_sapling"],
    ["flower_pot", "open_eyeblossom", "potted_open_eyeblossom"],
    ["flower_pot", "orange_tulip", "potted_orange_tulip"],
    ["flower_pot", "oxeye_daisy", "potted_oxeye_daisy"],
    ["flower_pot", "pale_oak_sapling", "potted_pale_oak_sapling"],
    ["flower_pot", "pink_tulip", "potted_pink_tulip"],
    ["flower_pot", "poppy", "potted_poppy"],
    ["flower_pot", "red_mushroom", "potted_red_mushroom"],
    ["flower_pot", "red_tulip", "potted_red_tulip"],
    ["flower_pot", "spruce_sapling", "potted_spruce_sapling"],
    ["flower_pot", "torchflower", "potted_torchflower"],
    ["flower_pot", "warped_fungus", "potted_warped_fungus"],
    ["flower_pot", "warped_roots", "potted_warped_roots"],
    ["flower_pot", "white_tulip", "potted_white_tulip"],
    ["flower_pot", "wither_rose", "potted_wither_rose"],
    //bonemeal
    ["big_dripleaf", "bone_meal", "big_dripleaf_stem"],
    ["cave_vines", "bone_meal", "cave_vines_plant"],
    //cake
    ["cake", "candle", "candle_cake"],
    ["cake", "red_candle", "red_candle_cake"],
    ["cake", "blue_candle", "blue_candle_cake"],
    ["cake", "cyan_candle", "cyan_candle_cake"],
    ["cake", "gray_candle", "gray_candle_cake"],
    ["cake", "lime_candle", "lime_candle_cake"],
    ["cake", "pink_candle", "pink_candle_cake"],
    ["cake", "black_candle", "black_candle_cake"],
    ["cake", "brown_candle", "brown_candle_cake"],
    ["cake", "green_candle", "green_candle_cake"],
    ["cake", "white_candle", "white_candle_cake"],
    ["cake", "orange_candle", "orange_candle_cake"],
    ["cake", "purple_candle", "purple_candle_cake"],
    ["cake", "yellow_candle", "yellow_candle_cake"],
    ["cake", "magenta_candle", "magenta_candle_cake"],
    ["cake", "light_blue_candle", "light_blue_candle_cake"],
    ["cake", "light_gray_candle", "light_gray_candle_cake"]
    //todo
  ];

  // src/view/transformation/useTool.ts
  var useTool = [
    ["waxed_oxidized_chiseled_copper", "axe", "oxidized_chiseled_copper"],
    ["waxed_weathered_chiseled_copper", "axe", "weathered_chiseled_copper"],
    ["waxed_exposed_chiseled_copper", "axe", "exposed_chiseled_copper"],
    ["waxed_chiseled_copper", "axe", "chiseled_copper"],
    ["oxidized_chiseled_copper", "axe", "weathered_chiseled_copper"],
    ["weathered_chiseled_copper", "axe", "exposed_chiseled_copper"],
    ["exposed_chiseled_copper", "axe", "chiseled_copper"],
    ["waxed_oxidized_copper", "axe", "oxidized_copper"],
    ["waxed_weathered_copper", "axe", "weathered_copper"],
    ["waxed_exposed_copper", "axe", "exposed_copper"],
    ["waxed_copper_block", "axe", "copper_block"],
    ["oxidized_copper", "axe", "weathered_copper"],
    ["weathered_copper", "axe", "exposed_copper"],
    ["exposed_copper", "axe", "copper_block"],
    ["waxed_oxidized_copper_bulb", "axe", "oxidized_copper_bulb"],
    ["waxed_weathered_copper_bulb", "axe", "weathered_copper_bulb"],
    ["waxed_exposed_copper_bulb", "axe", "exposed_copper_bulb"],
    ["waxed_copper_bulb", "axe", "copper_bulb"],
    ["oxidized_copper_bulb", "axe", "weathered_copper_bulb"],
    ["weathered_copper_bulb", "axe", "exposed_copper_bulb"],
    ["exposed_copper_bulb", "axe", "copper_bulb"],
    ["waxed_oxidized_copper_door", "axe", "oxidized_copper_door"],
    ["waxed_weathered_copper_door", "axe", "weathered_copper_door"],
    ["waxed_exposed_copper_door", "axe", "exposed_copper_door"],
    ["waxed_copper_door", "axe", "copper_door"],
    ["oxidized_copper_door", "axe", "weathered_copper_door"],
    ["weathered_copper_door", "axe", "exposed_copper_door"],
    ["exposed_copper_door", "axe", "copper_door"],
    ["waxed_oxidized_copper_grate", "axe", "oxidized_copper_grate"],
    ["waxed_weathered_copper_grate", "axe", "weathered_copper_grate"],
    ["waxed_exposed_copper_grate", "axe", "exposed_copper_grate"],
    ["waxed_copper_grate", "axe", "copper_grate"],
    ["oxidized_copper_grate", "axe", "weathered_copper_grate"],
    ["weathered_copper_grate", "axe", "exposed_copper_grate"],
    ["exposed_copper_grate", "axe", "copper_grate"],
    ["waxed_oxidized_copper_trapdoor", "axe", "oxidized_copper_trapdoor"],
    ["waxed_weathered_copper_trapdoor", "axe", "weathered_copper_trapdoor"],
    ["waxed_exposed_copper_trapdoor", "axe", "exposed_copper_trapdoor"],
    ["waxed_copper_trapdoor", "axe", "copper_trapdoor"],
    ["oxidized_copper_trapdoor", "axe", "weathered_copper_trapdoor"],
    ["weathered_copper_trapdoor", "axe", "exposed_copper_trapdoor"],
    ["exposed_copper_trapdoor", "axe", "copper_trapdoor"],
    ["waxed_oxidized_cut_copper", "axe", "oxidized_cut_copper"],
    ["waxed_weathered_cut_copper", "axe", "weathered_cut_copper"],
    ["waxed_exposed_cut_copper", "axe", "exposed_cut_copper"],
    ["waxed_cut_copper", "axe", "cut_copper"],
    ["oxidized_cut_copper", "axe", "weathered_cut_copper"],
    ["weathered_cut_copper", "axe", "exposed_cut_copper"],
    ["exposed_cut_copper", "axe", "cut_copper"],
    ["waxed_oxidized_cut_copper_slab", "axe", "oxidized_cut_copper_slab"],
    ["waxed_weathered_cut_copper_slab", "axe", "weathered_cut_copper_slab"],
    ["waxed_exposed_cut_copper_slab", "axe", "exposed_cut_copper_slab"],
    ["waxed_cut_copper_slab", "axe", "cut_copper_slab"],
    ["oxidized_cut_copper_slab", "axe", "weathered_cut_copper_slab"],
    ["weathered_cut_copper_slab", "axe", "exposed_cut_copper_slab"],
    ["exposed_cut_copper_slab", "axe", "cut_copper_slab"],
    ["waxed_oxidized_cut_copper_stairs", "axe", "oxidized_cut_copper_stairs"],
    ["waxed_weathered_cut_copper_stairs", "axe", "weathered_cut_copper_stairs"],
    ["waxed_exposed_cut_copper_stairs", "axe", "exposed_cut_copper_stairs"],
    ["waxed_cut_copper_stairs", "axe", "cut_copper_stairs"],
    ["oxidized_cut_copper_stairs", "axe", "weathered_cut_copper_stairs"],
    ["weathered_cut_copper_stairs", "axe", "exposed_cut_copper_stairs"],
    ["exposed_cut_copper_stairs", "axe", "cut_copper_stairs"],
    ["coarse_dirt", "hoe", "dirt"]
    //todo
  ];

  // src/view/connection/countItems.ts
  var Count = class {
    count;
    constructor() {
      this.count = /* @__PURE__ */ new Map();
    }
    add(id3) {
      const before = this.count.get(id3);
      if (before === void 0) {
        if (!this.count.has(id3)) this.count.set(id3, 1);
      } else {
        this.count.set(id3, before + 1);
      }
    }
    get(id3) {
      return this.count.get(id3);
    }
    toItemCount() {
      return Array.from(this.count).map(([id3, count2]) => {
        return {
          id: id3,
          count: count2
        };
      });
    }
    mappedItemCount(map) {
      return map.map(([placeholder, id3]) => {
        return {
          id: id3,
          count: this.count.get(placeholder) ?? 0
        };
      });
    }
  };

  // src/view/transformation/recipeStructures.ts
  var recipeStructures = [{
    "type": "crafting_shaped",
    "category": "misc",
    "group": "boat",
    "key": {
      "#": "acacia_planks"
    },
    "pattern": [
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "acacia_boat"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "acacia_planks"
    ],
    "result": {
      "count": 1,
      "id": "acacia_button"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "chest_boat",
    "ingredients": [
      "chest",
      "acacia_boat"
    ],
    "result": {
      "count": 1,
      "id": "acacia_chest_boat"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "acacia_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "acacia_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "acacia_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "acacia_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "acacia_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "acacia_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_acacia_log",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "acacia_hanging_sign"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "acacia_log"
    ],
    "result": {
      "count": 4,
      "id": "acacia_planks"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "acacia_wood"
    ],
    "result": {
      "count": 4,
      "id": "acacia_planks"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "stripped_acacia_log"
    ],
    "result": {
      "count": 4,
      "id": "acacia_planks"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#acacia_logs"
    ],
    "result": {
      "count": 4,
      "id": "acacia_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "acacia_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "acacia_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "acacia_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "acacia_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "acacia_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "acacia_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "acacia_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "acacia_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "acacia_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "acacia_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "acacia_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "acacia_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "redstone_torch",
      "S": "stick",
      "X": "iron_ingot"
    },
    "pattern": [
      "XSX",
      "X#X",
      "XSX"
    ],
    "result": {
      "count": 6,
      "id": "activator_rail"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "amethyst_shard"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "amethyst_block"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "ingredients": [
      "diorite",
      "cobblestone"
    ],
    "result": {
      "count": 2,
      "id": "andesite"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "andesite"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "andesite_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "andesite",
    "result": {
      "count": 2,
      "id": "andesite_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "andesite"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "andesite_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "andesite",
    "result": {
      "count": 1,
      "id": "andesite_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "andesite"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "andesite_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "andesite",
    "result": {
      "count": 1,
      "id": "andesite_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "I": "iron_block",
      "i": "iron_ingot"
    },
    "pattern": [
      "III",
      " i ",
      "iii"
    ],
    "result": {
      "count": 1,
      "id": "anvil"
    }
  }, {
    "type": "crafting_special_armordye",
    "category": "misc"
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "/": "stick",
      "_": "smooth_stone_slab"
    },
    "pattern": [
      "///",
      " / ",
      "/_/"
    ],
    "result": {
      "count": 1,
      "id": "armor_stand"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "flint",
      "Y": "feather"
    },
    "pattern": [
      "X",
      "#",
      "Y"
    ],
    "result": {
      "count": 4,
      "id": "arrow"
    }
  }, {
    "type": "smelting",
    "category": "food",
    "cookingtime": 200,
    "experience": 0.35,
    "ingredient": "potato",
    "result": {
      "id": "baked_potato"
    }
  }, {
    "type": "campfire_cooking",
    "category": "food",
    "cookingtime": 600,
    "experience": 0.35,
    "ingredient": "potato",
    "result": {
      "id": "baked_potato"
    }
  }, {
    "type": "smoking",
    "category": "food",
    "cookingtime": 100,
    "experience": 0.35,
    "ingredient": "potato",
    "result": {
      "id": "baked_potato"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "ingredients": [
      "bamboo",
      "bamboo",
      "bamboo",
      "bamboo",
      "bamboo",
      "bamboo",
      "bamboo",
      "bamboo",
      "bamboo"
    ],
    "result": {
      "count": 1,
      "id": "bamboo_block"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "bamboo_planks"
    ],
    "result": {
      "count": 1,
      "id": "bamboo_button"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "chest_boat",
    "ingredients": [
      "chest",
      "bamboo_raft"
    ],
    "result": {
      "count": 1,
      "id": "bamboo_chest_raft"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "bamboo_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "bamboo_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "bamboo_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "bamboo_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "bamboo_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "bamboo_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_bamboo_block",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "bamboo_hanging_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "bamboo_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "bamboo_mosaic"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "bamboo_mosaic"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "bamboo_mosaic_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "bamboo_mosaic"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "bamboo_mosaic_stairs"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#bamboo_blocks"
    ],
    "result": {
      "count": 2,
      "id": "bamboo_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "bamboo_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "bamboo_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "boat",
    "key": {
      "#": "bamboo_planks"
    },
    "pattern": [
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "bamboo_raft"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "bamboo_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "bamboo_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "bamboo_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "bamboo_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "bamboo_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "bamboo_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "bamboo_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "bamboo_trapdoor"
    }
  }, {
    "type": "crafting_special_bannerduplicate",
    "category": "misc"
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "P": "#planks",
      "S": "#wooden_slabs"
    },
    "pattern": [
      "PSP",
      "P P",
      "PSP"
    ],
    "result": {
      "count": 1,
      "id": "barrel"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "G": "glass",
      "O": "obsidian",
      "S": "nether_star"
    },
    "pattern": [
      "GGG",
      "GSG",
      "OOO"
    ],
    "result": {
      "count": 1,
      "id": "beacon"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "H": "honeycomb",
      "P": "#planks"
    },
    "pattern": [
      "PPP",
      "HHH",
      "PPP"
    ],
    "result": {
      "count": 1,
      "id": "beehive"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "bowl",
      "beetroot",
      "beetroot",
      "beetroot",
      "beetroot",
      "beetroot",
      "beetroot"
    ],
    "result": {
      "count": 1,
      "id": "beetroot_soup"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "boat",
    "key": {
      "#": "birch_planks"
    },
    "pattern": [
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "birch_boat"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "birch_planks"
    ],
    "result": {
      "count": 1,
      "id": "birch_button"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "chest_boat",
    "ingredients": [
      "chest",
      "birch_boat"
    ],
    "result": {
      "count": 1,
      "id": "birch_chest_boat"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "birch_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "birch_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "birch_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "birch_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "birch_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "birch_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_birch_log",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "birch_hanging_sign"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#birch_logs"
    ],
    "result": {
      "count": 4,
      "id": "birch_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "birch_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "birch_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "birch_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "birch_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "birch_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "birch_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "birch_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "birch_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "birch_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "birch_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "birch_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "birch_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "blackstone"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "blackstone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 2,
      "id": "blackstone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "blackstone"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "blackstone_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 1,
      "id": "blackstone_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "blackstone"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "blackstone_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 1,
      "id": "blackstone_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "black_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "black_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "black_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "black_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "black_dye",
    "result": "black_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "black_dye"
    ],
    "result": {
      "count": 1,
      "id": "black_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "black_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "black_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "black_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "black_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "black_dye",
    "ingredients": [
      "ink_sac"
    ],
    "result": {
      "count": 1,
      "id": "black_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "black_dye",
    "ingredients": [
      "wither_rose"
    ],
    "result": {
      "count": 1,
      "id": "black_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "black_terracotta",
    "result": {
      "id": "black_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "black_dye",
    "result": "black_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "black_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "black_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "black_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "black_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "black_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "black_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "black_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "black_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "smooth_stone",
      "I": "iron_ingot",
      "X": "furnace"
    },
    "pattern": [
      "III",
      "IXI",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "blast_furnace"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "blaze_rod"
    ],
    "result": {
      "count": 2,
      "id": "blaze_powder"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "blue_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "blue_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "blue_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "blue_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "blue_dye",
    "result": "blue_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "blue_dye"
    ],
    "result": {
      "count": 1,
      "id": "blue_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "blue_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "blue_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "blue_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "blue_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "blue_dye",
    "ingredients": [
      "lapis_lazuli"
    ],
    "result": {
      "count": 1,
      "id": "blue_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "blue_dye",
    "ingredients": [
      "cornflower"
    ],
    "result": {
      "count": 1,
      "id": "blue_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "blue_terracotta",
    "result": {
      "id": "blue_glazed_terracotta"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "ingredients": [
      "packed_ice",
      "packed_ice",
      "packed_ice",
      "packed_ice",
      "packed_ice",
      "packed_ice",
      "packed_ice",
      "packed_ice",
      "packed_ice"
    ],
    "result": {
      "count": 1,
      "id": "blue_ice"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "blue_dye",
    "result": "blue_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "blue_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "blue_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "blue_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "blue_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "blue_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "blue_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "blue_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "blue_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": [
        "copper_block",
        "waxed_copper_block"
      ],
      "S": "bolt_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "bolt_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "bolt_armor_trim_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "bone_meal"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "bone_block"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "bonemeal",
    "ingredients": [
      "bone"
    ],
    "result": {
      "count": 3,
      "id": "bone_meal"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "bonemeal",
    "ingredients": [
      "bone_block"
    ],
    "result": {
      "count": 9,
      "id": "bone_meal"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "paper",
      "paper",
      "paper",
      "leather"
    ],
    "result": {
      "count": 1,
      "id": "book"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "#planks",
      "X": "book"
    },
    "pattern": [
      "###",
      "XXX",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "bookshelf"
    }
  }, {
    "type": "crafting_special_bookcloning",
    "category": "misc"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "paper",
      "vine"
    ],
    "result": {
      "count": 1,
      "id": "bordure_indented_banner_pattern"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "string"
    },
    "pattern": [
      " #X",
      "# X",
      " #X"
    ],
    "result": {
      "count": 1,
      "id": "bow"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#planks"
    },
    "pattern": [
      "# #",
      " # "
    ],
    "result": {
      "count": 4,
      "id": "bowl"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "wheat"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 1,
      "id": "bread"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#stone_crafting_materials",
      "B": "blaze_rod"
    },
    "pattern": [
      " B ",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "brewing_stand"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.3,
    "ingredient": "clay_ball",
    "result": {
      "id": "brick"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "brick"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "bricks",
    "result": {
      "count": 2,
      "id": "brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "bricks",
    "result": {
      "count": 1,
      "id": "brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "bricks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "bricks",
    "result": {
      "count": 1,
      "id": "brick_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "brown_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "brown_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "brown_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "brown_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "brown_dye",
    "result": "brown_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "brown_dye"
    ],
    "result": {
      "count": 1,
      "id": "brown_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "brown_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "brown_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "brown_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "brown_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "brown_dye",
    "ingredients": [
      "cocoa_beans"
    ],
    "result": {
      "count": 1,
      "id": "brown_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "brown_terracotta",
    "result": {
      "id": "brown_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "brown_dye",
    "result": "brown_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "brown_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "brown_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "brown_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "brown_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "brown_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "brown_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "brown_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "brown_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "copper_ingot",
      "I": "stick",
      "X": "feather"
    },
    "pattern": [
      "X",
      "#",
      "I"
    ],
    "result": {
      "count": 1,
      "id": "brush"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "iron_ingot"
    },
    "pattern": [
      "# #",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "bucket"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "leather",
      "-": "string"
    },
    "pattern": [
      "-",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "bundle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "A": "milk_bucket",
      "B": "sugar",
      "C": "wheat",
      "E": "egg"
    },
    "pattern": [
      "AAA",
      "BEB",
      "CCC"
    ],
    "result": {
      "count": 1,
      "id": "cake"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "amethyst_shard",
      "X": "sculk_sensor"
    },
    "pattern": [
      " # ",
      "#X#"
    ],
    "result": {
      "count": 1,
      "id": "calibrated_sculk_sensor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "C": "#coals",
      "L": "#logs",
      "S": "stick"
    },
    "pattern": [
      " S ",
      "SCS",
      "LLL"
    ],
    "result": {
      "count": 1,
      "id": "campfire"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "H": "honeycomb",
      "S": "string"
    },
    "pattern": [
      "S",
      "H"
    ],
    "result": {
      "count": 1,
      "id": "candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "fishing_rod",
      "X": "carrot"
    },
    "pattern": [
      "# ",
      " X"
    ],
    "result": {
      "count": 1,
      "id": "carrot_on_a_stick"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#planks",
      "@": "paper"
    },
    "pattern": [
      "@@",
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "cartography_table"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "iron_ingot"
    },
    "pattern": [
      "# #",
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "cauldron"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "I": "iron_ingot",
      "N": "iron_nugget"
    },
    "pattern": [
      "N",
      "I",
      "N"
    ],
    "result": {
      "count": 1,
      "id": "chain"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.15,
    "ingredient": "#logs_that_burn",
    "result": {
      "id": "charcoal"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "boat",
    "key": {
      "#": "cherry_planks"
    },
    "pattern": [
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "cherry_boat"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "cherry_planks"
    ],
    "result": {
      "count": 1,
      "id": "cherry_button"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "chest_boat",
    "ingredients": [
      "chest",
      "cherry_boat"
    ],
    "result": {
      "count": 1,
      "id": "cherry_chest_boat"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "cherry_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "cherry_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "cherry_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "cherry_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "cherry_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "cherry_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_cherry_log",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "cherry_hanging_sign"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#cherry_logs"
    ],
    "result": {
      "count": 4,
      "id": "cherry_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "cherry_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "cherry_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "cherry_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "cherry_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "cherry_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "cherry_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "cherry_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "cherry_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "cherry_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "cherry_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "cherry_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "cherry_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#planks"
    },
    "pattern": [
      "###",
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "chest"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "chest",
      "minecart"
    ],
    "result": {
      "count": 1,
      "id": "chest_minecart"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "#planks",
      "X": "#wooden_slabs"
    },
    "pattern": [
      "###",
      "XXX",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_bookshelf"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "cut_copper_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "copper_block",
    "result": {
      "count": 4,
      "id": "chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cut_copper",
    "result": {
      "count": 1,
      "id": "chiseled_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "cobbled_deepslate_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_deepslate"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "chiseled_deepslate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "nether_brick_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_nether_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "nether_bricks",
    "result": {
      "count": 1,
      "id": "chiseled_nether_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_blackstone_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_polished_blackstone"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 1,
      "id": "chiseled_polished_blackstone"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_blackstone",
    "result": {
      "count": 1,
      "id": "chiseled_polished_blackstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "quartz_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_quartz_block"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "quartz_block",
    "result": {
      "count": 1,
      "id": "chiseled_quartz_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "red_sandstone_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_red_sandstone"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "red_sandstone",
    "result": {
      "count": 1,
      "id": "chiseled_red_sandstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "resin_brick_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_resin_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "resin_bricks",
    "result": {
      "count": 1,
      "id": "chiseled_resin_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "sandstone_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_sandstone"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "sandstone",
    "result": {
      "count": 1,
      "id": "chiseled_sandstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "stone_brick_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_stone_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "stone_bricks",
    "result": {
      "count": 1,
      "id": "chiseled_stone_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "stone",
    "result": {
      "count": 1,
      "id": "chiseled_stone_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "tuff_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_tuff"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "tuff_brick_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "chiseled_tuff_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_tuff",
    "result": {
      "count": 1,
      "id": "chiseled_tuff_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff_bricks",
    "result": {
      "count": 1,
      "id": "chiseled_tuff_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 1,
      "id": "chiseled_tuff_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 1,
      "id": "chiseled_tuff"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "clay_ball"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "clay"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "gold_ingot",
      "X": "redstone"
    },
    "pattern": [
      " # ",
      "#X#",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "clock"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "coal_block"
    ],
    "result": {
      "count": 9,
      "id": "coal"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "coal"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "coal_block"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.1,
    "group": "coal",
    "ingredient": "coal_ore",
    "result": {
      "id": "coal"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.1,
    "group": "coal",
    "ingredient": "deepslate_coal_ore",
    "result": {
      "id": "coal"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.1,
    "group": "coal",
    "ingredient": "coal_ore",
    "result": {
      "id": "coal"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.1,
    "group": "coal",
    "ingredient": "deepslate_coal_ore",
    "result": {
      "id": "coal"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "D": "dirt",
      "G": "gravel"
    },
    "pattern": [
      "DG",
      "GD"
    ],
    "result": {
      "count": 4,
      "id": "coarse_dirt"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "cobblestone",
      "S": "coast_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "coast_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "coast_armor_trim_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "cobbled_deepslate"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "cobbled_deepslate_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 2,
      "id": "cobbled_deepslate_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "cobbled_deepslate"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "cobbled_deepslate_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "cobbled_deepslate_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "cobbled_deepslate"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "cobbled_deepslate_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "cobbled_deepslate_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "cobblestone"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "cobblestone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobblestone",
    "result": {
      "count": 2,
      "id": "cobblestone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "cobblestone"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "cobblestone_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobblestone",
    "result": {
      "count": 1,
      "id": "cobblestone_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "cobblestone"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "cobblestone_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobblestone",
    "result": {
      "count": 1,
      "id": "cobblestone_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "redstone_torch",
      "I": "stone",
      "X": "quartz"
    },
    "pattern": [
      " # ",
      "#X#",
      "III"
    ],
    "result": {
      "count": 1,
      "id": "comparator"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "iron_ingot",
      "X": "redstone"
    },
    "pattern": [
      " # ",
      "#X#",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "compass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#wooden_slabs"
    },
    "pattern": [
      "# #",
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "composter"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "nautilus_shell",
      "X": "heart_of_the_sea"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "conduit"
    }
  }, {
    "type": "smelting",
    "category": "food",
    "cookingtime": 200,
    "experience": 0.35,
    "ingredient": "beef",
    "result": {
      "id": "cooked_beef"
    }
  }, {
    "type": "campfire_cooking",
    "category": "food",
    "cookingtime": 600,
    "experience": 0.35,
    "ingredient": "beef",
    "result": {
      "id": "cooked_beef"
    }
  }, {
    "type": "smoking",
    "category": "food",
    "cookingtime": 100,
    "experience": 0.35,
    "ingredient": "beef",
    "result": {
      "id": "cooked_beef"
    }
  }, {
    "type": "smelting",
    "category": "food",
    "cookingtime": 200,
    "experience": 0.35,
    "ingredient": "chicken",
    "result": {
      "id": "cooked_chicken"
    }
  }, {
    "type": "campfire_cooking",
    "category": "food",
    "cookingtime": 600,
    "experience": 0.35,
    "ingredient": "chicken",
    "result": {
      "id": "cooked_chicken"
    }
  }, {
    "type": "smoking",
    "category": "food",
    "cookingtime": 100,
    "experience": 0.35,
    "ingredient": "chicken",
    "result": {
      "id": "cooked_chicken"
    }
  }, {
    "type": "smelting",
    "category": "food",
    "cookingtime": 200,
    "experience": 0.35,
    "ingredient": "cod",
    "result": {
      "id": "cooked_cod"
    }
  }, {
    "type": "campfire_cooking",
    "category": "food",
    "cookingtime": 600,
    "experience": 0.35,
    "ingredient": "cod",
    "result": {
      "id": "cooked_cod"
    }
  }, {
    "type": "smoking",
    "category": "food",
    "cookingtime": 100,
    "experience": 0.35,
    "ingredient": "cod",
    "result": {
      "id": "cooked_cod"
    }
  }, {
    "type": "smelting",
    "category": "food",
    "cookingtime": 200,
    "experience": 0.35,
    "ingredient": "mutton",
    "result": {
      "id": "cooked_mutton"
    }
  }, {
    "type": "campfire_cooking",
    "category": "food",
    "cookingtime": 600,
    "experience": 0.35,
    "ingredient": "mutton",
    "result": {
      "id": "cooked_mutton"
    }
  }, {
    "type": "smoking",
    "category": "food",
    "cookingtime": 100,
    "experience": 0.35,
    "ingredient": "mutton",
    "result": {
      "id": "cooked_mutton"
    }
  }, {
    "type": "smelting",
    "category": "food",
    "cookingtime": 200,
    "experience": 0.35,
    "ingredient": "porkchop",
    "result": {
      "id": "cooked_porkchop"
    }
  }, {
    "type": "campfire_cooking",
    "category": "food",
    "cookingtime": 600,
    "experience": 0.35,
    "ingredient": "porkchop",
    "result": {
      "id": "cooked_porkchop"
    }
  }, {
    "type": "smoking",
    "category": "food",
    "cookingtime": 100,
    "experience": 0.35,
    "ingredient": "porkchop",
    "result": {
      "id": "cooked_porkchop"
    }
  }, {
    "type": "smelting",
    "category": "food",
    "cookingtime": 200,
    "experience": 0.35,
    "ingredient": "rabbit",
    "result": {
      "id": "cooked_rabbit"
    }
  }, {
    "type": "campfire_cooking",
    "category": "food",
    "cookingtime": 600,
    "experience": 0.35,
    "ingredient": "rabbit",
    "result": {
      "id": "cooked_rabbit"
    }
  }, {
    "type": "smoking",
    "category": "food",
    "cookingtime": 100,
    "experience": 0.35,
    "ingredient": "rabbit",
    "result": {
      "id": "cooked_rabbit"
    }
  }, {
    "type": "smelting",
    "category": "food",
    "cookingtime": 200,
    "experience": 0.35,
    "ingredient": "salmon",
    "result": {
      "id": "cooked_salmon"
    }
  }, {
    "type": "campfire_cooking",
    "category": "food",
    "cookingtime": 600,
    "experience": 0.35,
    "ingredient": "salmon",
    "result": {
      "id": "cooked_salmon"
    }
  }, {
    "type": "smoking",
    "category": "food",
    "cookingtime": 100,
    "experience": 0.35,
    "ingredient": "salmon",
    "result": {
      "id": "cooked_salmon"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "wheat",
      "X": "cocoa_beans"
    },
    "pattern": [
      "#X#"
    ],
    "result": {
      "count": 8,
      "id": "cookie"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "copper_ingot"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "copper_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "B": "blaze_rod",
      "C": "copper_block",
      "R": "redstone"
    },
    "pattern": [
      " C ",
      "CBC",
      " R "
    ],
    "result": {
      "count": 4,
      "id": "copper_bulb"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "copper_ingot"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "copper_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "M": "copper_block"
    },
    "pattern": [
      " M ",
      "M M",
      " M "
    ],
    "result": {
      "count": 4,
      "id": "copper_grate"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "copper_block",
    "result": {
      "count": 4,
      "id": "copper_grate"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "copper_ingot",
    "ingredients": [
      "copper_block"
    ],
    "result": {
      "count": 9,
      "id": "copper_ingot"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.7,
    "group": "copper_ingot",
    "ingredient": "copper_ore",
    "result": {
      "id": "copper_ingot"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.7,
    "group": "copper_ingot",
    "ingredient": "deepslate_copper_ore",
    "result": {
      "id": "copper_ingot"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.7,
    "group": "copper_ingot",
    "ingredient": "raw_copper",
    "result": {
      "id": "copper_ingot"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.7,
    "group": "copper_ingot",
    "ingredient": "copper_ore",
    "result": {
      "id": "copper_ingot"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.7,
    "group": "copper_ingot",
    "ingredient": "deepslate_copper_ore",
    "result": {
      "id": "copper_ingot"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.7,
    "group": "copper_ingot",
    "ingredient": "raw_copper",
    "result": {
      "id": "copper_ingot"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "copper_ingot",
    "ingredients": [
      "waxed_copper_block"
    ],
    "result": {
      "count": 9,
      "id": "copper_ingot"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "copper_ingot"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "copper_trapdoor"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "deepslate_bricks",
    "result": {
      "id": "cracked_deepslate_bricks"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "deepslate_tiles",
    "result": {
      "id": "cracked_deepslate_tiles"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "nether_bricks",
    "result": {
      "id": "cracked_nether_bricks"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "polished_blackstone_bricks",
    "result": {
      "id": "cracked_polished_blackstone_bricks"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "stone_bricks",
    "result": {
      "id": "cracked_stone_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "iron_ingot",
      "C": "crafting_table",
      "D": "dropper",
      "R": "redstone"
    },
    "pattern": [
      "###",
      "#C#",
      "RDR"
    ],
    "result": {
      "count": 1,
      "id": "crafter"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#planks"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "crafting_table"
    },
    "show_notification": false
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "L": "pale_oak_log",
      "R": "resin_block"
    },
    "pattern": [
      " L ",
      " R ",
      " L "
    ],
    "result": {
      "count": 1,
      "id": "creaking_heart"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "paper",
      "creeper_head"
    ],
    "result": {
      "count": 1,
      "id": "creeper_banner_pattern"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "crimson_planks"
    ],
    "result": {
      "count": 1,
      "id": "crimson_button"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "crimson_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "crimson_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "crimson_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "crimson_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "crimson_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "crimson_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_crimson_stem",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "crimson_hanging_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "crimson_stem"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "crimson_hyphae"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#crimson_stems"
    ],
    "result": {
      "count": 4,
      "id": "crimson_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "crimson_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "crimson_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "crimson_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "crimson_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "crimson_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "crimson_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "crimson_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "crimson_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "crimson_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "crimson_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "$": "tripwire_hook",
      "&": "iron_ingot",
      "~": "string"
    },
    "pattern": [
      "#&#",
      "~$~",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "crossbow"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "copper_block"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "cut_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "copper_block",
    "result": {
      "count": 4,
      "id": "cut_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "cut_copper"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "copper_block",
    "result": {
      "count": 8,
      "id": "cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cut_copper",
    "result": {
      "count": 2,
      "id": "cut_copper_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "cut_copper"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "copper_block",
    "result": {
      "count": 4,
      "id": "cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cut_copper",
    "result": {
      "count": 1,
      "id": "cut_copper_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "red_sandstone"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "cut_red_sandstone"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "red_sandstone",
    "result": {
      "count": 1,
      "id": "cut_red_sandstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "cut_red_sandstone"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "cut_red_sandstone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cut_red_sandstone",
    "result": {
      "count": 2,
      "id": "cut_red_sandstone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "red_sandstone",
    "result": {
      "count": 2,
      "id": "cut_red_sandstone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "sandstone"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "cut_sandstone"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "sandstone",
    "result": {
      "count": 1,
      "id": "cut_sandstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "cut_sandstone"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "cut_sandstone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cut_sandstone",
    "result": {
      "count": 2,
      "id": "cut_sandstone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "sandstone",
    "result": {
      "count": 2,
      "id": "cut_sandstone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "cyan_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "cyan_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "cyan_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "cyan_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "cyan_dye",
    "result": "cyan_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "cyan_dye"
    ],
    "result": {
      "count": 1,
      "id": "cyan_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "cyan_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "cyan_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "cyan_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "cyan_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "cyan_dye",
    "ingredients": [
      "blue_dye",
      "green_dye"
    ],
    "result": {
      "count": 2,
      "id": "cyan_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "cyan_dye",
    "ingredients": [
      "pitcher_plant"
    ],
    "result": {
      "count": 2,
      "id": "cyan_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "cyan_terracotta",
    "result": {
      "id": "cyan_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "cyan_dye",
    "result": "cyan_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "cyan_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "cyan_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "cyan_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "cyan_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "cyan_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "cyan_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "cyan_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "cyan_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "boat",
    "key": {
      "#": "dark_oak_planks"
    },
    "pattern": [
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "dark_oak_boat"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "dark_oak_planks"
    ],
    "result": {
      "count": 1,
      "id": "dark_oak_button"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "chest_boat",
    "ingredients": [
      "chest",
      "dark_oak_boat"
    ],
    "result": {
      "count": 1,
      "id": "dark_oak_chest_boat"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "dark_oak_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "dark_oak_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "dark_oak_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "dark_oak_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "dark_oak_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "dark_oak_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_dark_oak_log",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "dark_oak_hanging_sign"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#dark_oak_logs"
    ],
    "result": {
      "count": 4,
      "id": "dark_oak_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "dark_oak_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "dark_oak_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "dark_oak_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "dark_oak_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "dark_oak_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "dark_oak_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "dark_oak_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "dark_oak_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "dark_oak_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "dark_oak_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "dark_oak_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "dark_oak_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "I": "black_dye",
      "S": "prismarine_shard"
    },
    "pattern": [
      "SSS",
      "SIS",
      "SSS"
    ],
    "result": {
      "count": 1,
      "id": "dark_prismarine"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "dark_prismarine"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "dark_prismarine_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "dark_prismarine",
    "result": {
      "count": 2,
      "id": "dark_prismarine_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "dark_prismarine"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "dark_prismarine_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "dark_prismarine",
    "result": {
      "count": 1,
      "id": "dark_prismarine_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "G": "glass",
      "Q": "quartz",
      "W": "#wooden_slabs"
    },
    "pattern": [
      "GGG",
      "QQQ",
      "WWW"
    ],
    "result": {
      "count": 1,
      "id": "daylight_detector"
    }
  }, {
    "type": "crafting_decorated_pot",
    "category": "misc"
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "brick"
    },
    "pattern": [
      " # ",
      "# #",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "decorated_pot"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "cobbled_deepslate",
    "result": {
      "id": "deepslate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "S": "polished_deepslate"
    },
    "pattern": [
      "SS",
      "SS"
    ],
    "result": {
      "count": 4,
      "id": "deepslate_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "deepslate_bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "deepslate_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 2,
      "id": "deepslate_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "deepslate_bricks",
    "result": {
      "count": 2,
      "id": "deepslate_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_deepslate",
    "result": {
      "count": 2,
      "id": "deepslate_brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "deepslate_bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "deepslate_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "deepslate_bricks",
    "result": {
      "count": 1,
      "id": "deepslate_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "deepslate_bricks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "deepslate_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "deepslate_bricks",
    "result": {
      "count": 1,
      "id": "deepslate_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_brick_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "S": "deepslate_bricks"
    },
    "pattern": [
      "SS",
      "SS"
    ],
    "result": {
      "count": 4,
      "id": "deepslate_tiles"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_tiles"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "deepslate_bricks",
    "result": {
      "count": 1,
      "id": "deepslate_tiles"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_tiles"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "deepslate_tiles"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "deepslate_tile_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 2,
      "id": "deepslate_tile_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "deepslate_bricks",
    "result": {
      "count": 2,
      "id": "deepslate_tile_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "deepslate_tiles",
    "result": {
      "count": 2,
      "id": "deepslate_tile_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_deepslate",
    "result": {
      "count": 2,
      "id": "deepslate_tile_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "deepslate_tiles"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "deepslate_tile_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_tile_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "deepslate_bricks",
    "result": {
      "count": 1,
      "id": "deepslate_tile_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "deepslate_tiles",
    "result": {
      "count": 1,
      "id": "deepslate_tile_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_tile_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "deepslate_tiles"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "deepslate_tile_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_tile_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "deepslate_bricks",
    "result": {
      "count": 1,
      "id": "deepslate_tile_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "deepslate_tiles",
    "result": {
      "count": 1,
      "id": "deepslate_tile_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_deepslate",
    "result": {
      "count": 1,
      "id": "deepslate_tile_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "stone_pressure_plate",
      "R": "redstone",
      "X": "iron_ingot"
    },
    "pattern": [
      "X X",
      "X#X",
      "XRX"
    ],
    "result": {
      "count": 6,
      "id": "detector_rail"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "diamond_block"
    ],
    "result": {
      "count": 9,
      "id": "diamond"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#diamond_tool_materials"
    },
    "pattern": [
      "XX",
      "X#",
      " #"
    ],
    "result": {
      "count": 1,
      "id": "diamond_axe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "diamond"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "diamond_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "diamond"
    },
    "pattern": [
      "X X",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "diamond_boots"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "diamond"
    },
    "pattern": [
      "X X",
      "XXX",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "diamond_chestplate"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 1,
    "group": "diamond",
    "ingredient": "deepslate_diamond_ore",
    "result": {
      "id": "diamond"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 1,
    "group": "diamond",
    "ingredient": "diamond_ore",
    "result": {
      "id": "diamond"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 1,
    "group": "diamond",
    "ingredient": "deepslate_diamond_ore",
    "result": {
      "id": "diamond"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 1,
    "group": "diamond",
    "ingredient": "diamond_ore",
    "result": {
      "id": "diamond"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "diamond"
    },
    "pattern": [
      "XXX",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "diamond_helmet"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#diamond_tool_materials"
    },
    "pattern": [
      "XX",
      " #",
      " #"
    ],
    "result": {
      "count": 1,
      "id": "diamond_hoe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "diamond"
    },
    "pattern": [
      "XXX",
      "X X",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "diamond_leggings"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#diamond_tool_materials"
    },
    "pattern": [
      "XXX",
      " # ",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "diamond_pickaxe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#diamond_tool_materials"
    },
    "pattern": [
      "X",
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "diamond_shovel"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#diamond_tool_materials"
    },
    "pattern": [
      "X",
      "X",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "diamond_sword"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "C": "cobblestone",
      "Q": "quartz"
    },
    "pattern": [
      "CQ",
      "QC"
    ],
    "result": {
      "count": 2,
      "id": "diorite"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "diorite"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "diorite_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "diorite",
    "result": {
      "count": 2,
      "id": "diorite_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "diorite"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "diorite_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "diorite",
    "result": {
      "count": 1,
      "id": "diorite_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diorite"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "diorite_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "diorite",
    "result": {
      "count": 1,
      "id": "diorite_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "cobblestone",
      "R": "redstone",
      "X": "bow"
    },
    "pattern": [
      "###",
      "#X#",
      "#R#"
    ],
    "result": {
      "count": 1,
      "id": "dispenser"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "dried_kelp_block"
    ],
    "result": {
      "count": 9,
      "id": "dried_kelp"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "dried_kelp"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "dried_kelp_block"
    }
  }, {
    "type": "campfire_cooking",
    "category": "food",
    "cookingtime": 600,
    "experience": 0.1,
    "ingredient": "kelp",
    "result": {
      "id": "dried_kelp"
    }
  }, {
    "type": "smelting",
    "category": "food",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "kelp",
    "result": {
      "id": "dried_kelp"
    }
  }, {
    "type": "smoking",
    "category": "food",
    "cookingtime": 100,
    "experience": 0.1,
    "ingredient": "kelp",
    "result": {
      "id": "dried_kelp"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "pointed_dripstone"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "dripstone_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "cobblestone",
      "R": "redstone"
    },
    "pattern": [
      "###",
      "# #",
      "#R#"
    ],
    "result": {
      "count": 1,
      "id": "dropper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "sandstone",
      "S": "dune_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "dune_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "dune_armor_trim_smithing_template"
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "black_dye",
      [
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "black_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "black_dye",
      [
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "black_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "black_dye",
      [
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "black_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "blue_dye",
      [
        "black_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "blue_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "blue_dye",
      [
        "black_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "blue_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "blue_dye",
      [
        "black_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "blue_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "brown_dye",
      [
        "black_bed",
        "blue_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "brown_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "brown_dye",
      [
        "black_carpet",
        "blue_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "brown_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "brown_dye",
      [
        "black_wool",
        "blue_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "brown_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "cyan_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "cyan_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "cyan_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "cyan_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "cyan_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "cyan_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "gray_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "gray_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "gray_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "gray_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "gray_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "gray_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "green_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "green_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "green_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "green_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "green_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "green_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "light_blue_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "light_blue_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "light_blue_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "light_blue_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "light_blue_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "light_blue_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "light_gray_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "light_gray_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "light_gray_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "light_gray_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "light_gray_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "light_gray_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "lime_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "lime_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "lime_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "lime_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "lime_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "lime_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "magenta_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "magenta_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "magenta_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "magenta_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "magenta_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "magenta_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "orange_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "orange_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "orange_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "orange_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "orange_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "orange_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "pink_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "pink_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "pink_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "pink_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "pink_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "pink_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "purple_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "red_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "purple_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "purple_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "red_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "purple_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "purple_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "red_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "purple_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "red_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "yellow_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "red_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "red_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "yellow_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "red_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "red_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "yellow_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "red_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "white_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "yellow_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "white_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "white_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "yellow_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "white_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "white_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "yellow_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "white_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "bed",
    "ingredients": [
      "yellow_dye",
      [
        "black_bed",
        "blue_bed",
        "brown_bed",
        "cyan_bed",
        "gray_bed",
        "green_bed",
        "light_blue_bed",
        "light_gray_bed",
        "lime_bed",
        "magenta_bed",
        "orange_bed",
        "pink_bed",
        "purple_bed",
        "red_bed",
        "white_bed"
      ]
    ],
    "result": {
      "count": 1,
      "id": "yellow_bed"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "carpet",
    "ingredients": [
      "yellow_dye",
      [
        "black_carpet",
        "blue_carpet",
        "brown_carpet",
        "cyan_carpet",
        "gray_carpet",
        "green_carpet",
        "light_blue_carpet",
        "light_gray_carpet",
        "lime_carpet",
        "magenta_carpet",
        "orange_carpet",
        "pink_carpet",
        "purple_carpet",
        "red_carpet",
        "white_carpet"
      ]
    ],
    "result": {
      "count": 1,
      "id": "yellow_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "wool",
    "ingredients": [
      "yellow_dye",
      [
        "black_wool",
        "blue_wool",
        "brown_wool",
        "cyan_wool",
        "gray_wool",
        "green_wool",
        "light_blue_wool",
        "light_gray_wool",
        "lime_wool",
        "magenta_wool",
        "orange_wool",
        "pink_wool",
        "purple_wool",
        "red_wool",
        "white_wool"
      ]
    ],
    "result": {
      "count": 1,
      "id": "yellow_wool"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "emerald_block"
    ],
    "result": {
      "count": 9,
      "id": "emerald"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "emerald"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "emerald_block"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 1,
    "group": "emerald",
    "ingredient": "deepslate_emerald_ore",
    "result": {
      "id": "emerald"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 1,
    "group": "emerald",
    "ingredient": "emerald_ore",
    "result": {
      "id": "emerald"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 1,
    "group": "emerald",
    "ingredient": "deepslate_emerald_ore",
    "result": {
      "id": "emerald"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 1,
    "group": "emerald",
    "ingredient": "emerald_ore",
    "result": {
      "id": "emerald"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "obsidian",
      "B": "book",
      "D": "diamond"
    },
    "pattern": [
      " B ",
      "D#D",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "enchanting_table"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "obsidian",
      "E": "ender_eye"
    },
    "pattern": [
      "###",
      "#E#",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "ender_chest"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "ender_pearl",
      "blaze_powder"
    ],
    "result": {
      "count": 1,
      "id": "ender_eye"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "E": "ender_eye",
      "G": "glass",
      "T": "ghast_tear"
    },
    "pattern": [
      "GGG",
      "GEG",
      "GTG"
    ],
    "result": {
      "count": 1,
      "id": "end_crystal"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "popped_chorus_fruit",
      "/": "blaze_rod"
    },
    "pattern": [
      "/",
      "#"
    ],
    "result": {
      "count": 4,
      "id": "end_rod"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "end_stone"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "end_stone_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "end_stone",
    "result": {
      "count": 1,
      "id": "end_stone_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "end_stone_bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "end_stone_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "end_stone_bricks",
    "result": {
      "count": 2,
      "id": "end_stone_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "end_stone",
    "result": {
      "count": 2,
      "id": "end_stone_brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "end_stone_bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "end_stone_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "end_stone_bricks",
    "result": {
      "count": 1,
      "id": "end_stone_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "end_stone",
    "result": {
      "count": 1,
      "id": "end_stone_brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "end_stone_bricks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "end_stone_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "end_stone_bricks",
    "result": {
      "count": 1,
      "id": "end_stone_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "end_stone",
    "result": {
      "count": 1,
      "id": "end_stone_brick_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "exposed_cut_copper_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "exposed_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "exposed_copper",
    "result": {
      "count": 4,
      "id": "exposed_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "exposed_cut_copper",
    "result": {
      "count": 1,
      "id": "exposed_chiseled_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "B": "blaze_rod",
      "C": "exposed_copper",
      "R": "redstone"
    },
    "pattern": [
      " C ",
      "CBC",
      " R "
    ],
    "result": {
      "count": 4,
      "id": "exposed_copper_bulb"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "M": "exposed_copper"
    },
    "pattern": [
      " M ",
      "M M",
      " M "
    ],
    "result": {
      "count": 4,
      "id": "exposed_copper_grate"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "exposed_copper",
    "result": {
      "count": 4,
      "id": "exposed_copper_grate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "exposed_copper"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "exposed_cut_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "exposed_copper",
    "result": {
      "count": 4,
      "id": "exposed_cut_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "exposed_cut_copper"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "exposed_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "exposed_copper",
    "result": {
      "count": 8,
      "id": "exposed_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "exposed_cut_copper",
    "result": {
      "count": 2,
      "id": "exposed_cut_copper_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "exposed_cut_copper"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "exposed_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "exposed_copper",
    "result": {
      "count": 4,
      "id": "exposed_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "exposed_cut_copper",
    "result": {
      "count": 1,
      "id": "exposed_cut_copper_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "end_stone",
      "S": "eye_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "eye_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "eye_armor_trim_smithing_template"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "spider_eye",
      "brown_mushroom",
      "sugar"
    ],
    "result": {
      "count": 1,
      "id": "fermented_spider_eye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "paper",
      "bricks"
    ],
    "result": {
      "count": 1,
      "id": "field_masoned_banner_pattern"
    }
  }, {
    "type": "crafting_special_firework_rocket",
    "category": "misc"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "gunpowder",
      "paper"
    ],
    "result": {
      "count": 3,
      "id": "firework_rocket"
    }
  }, {
    "type": "crafting_special_firework_star",
    "category": "misc"
  }, {
    "type": "crafting_special_firework_star_fade",
    "category": "misc"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "gunpowder",
      "blaze_powder",
      [
        "coal",
        "charcoal"
      ]
    ],
    "result": {
      "count": 3,
      "id": "fire_charge"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "string"
    },
    "pattern": [
      "  #",
      " #X",
      "# X"
    ],
    "result": {
      "count": 1,
      "id": "fishing_rod"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#planks",
      "@": "flint"
    },
    "pattern": [
      "@@",
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "fletching_table"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "equipment",
    "ingredients": [
      "iron_ingot",
      "flint"
    ],
    "result": {
      "count": 1,
      "id": "flint_and_steel"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "paper",
      "oxeye_daisy"
    ],
    "result": {
      "count": 1,
      "id": "flower_banner_pattern"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "brick"
    },
    "pattern": [
      "# #",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "flower_pot"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "breeze_rod",
      "S": "flow_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "flow_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "flow_armor_trim_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#stone_crafting_materials"
    },
    "pattern": [
      "###",
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "furnace"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "furnace",
      "minecart"
    ],
    "result": {
      "count": 1,
      "id": "furnace_minecart"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "#smelts_to_glass",
    "result": {
      "id": "glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "glass"
    },
    "pattern": [
      "# #",
      " # "
    ],
    "result": {
      "count": 3,
      "id": "glass_bottle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "gold_nugget",
      "X": "melon_slice"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "glistering_melon_slice"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "glowstone_dust"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "glowstone"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "item_frame",
      "glow_ink_sac"
    ],
    "result": {
      "count": 1,
      "id": "glow_item_frame"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "gold_ingot",
      "X": "apple"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "golden_apple"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#gold_tool_materials"
    },
    "pattern": [
      "XX",
      "X#",
      " #"
    ],
    "result": {
      "count": 1,
      "id": "golden_axe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "gold_ingot"
    },
    "pattern": [
      "X X",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "golden_boots"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "gold_nugget",
      "X": "carrot"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "golden_carrot"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "gold_ingot"
    },
    "pattern": [
      "X X",
      "XXX",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "golden_chestplate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "gold_ingot"
    },
    "pattern": [
      "XXX",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "golden_helmet"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#gold_tool_materials"
    },
    "pattern": [
      "XX",
      " #",
      " #"
    ],
    "result": {
      "count": 1,
      "id": "golden_hoe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "gold_ingot"
    },
    "pattern": [
      "XXX",
      "X X",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "golden_leggings"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#gold_tool_materials"
    },
    "pattern": [
      "XXX",
      " # ",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "golden_pickaxe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#gold_tool_materials"
    },
    "pattern": [
      "X",
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "golden_shovel"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#gold_tool_materials"
    },
    "pattern": [
      "X",
      "X",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "golden_sword"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "gold_ingot"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "gold_block"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 1,
    "group": "gold_ingot",
    "ingredient": "deepslate_gold_ore",
    "result": {
      "id": "gold_ingot"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 1,
    "group": "gold_ingot",
    "ingredient": "gold_ore",
    "result": {
      "id": "gold_ingot"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 1,
    "group": "gold_ingot",
    "ingredient": "nether_gold_ore",
    "result": {
      "id": "gold_ingot"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 1,
    "group": "gold_ingot",
    "ingredient": "raw_gold",
    "result": {
      "id": "gold_ingot"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "gold_ingot",
    "ingredients": [
      "gold_block"
    ],
    "result": {
      "count": 9,
      "id": "gold_ingot"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "gold_ingot",
    "key": {
      "#": "gold_nugget"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "gold_ingot"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 1,
    "group": "gold_ingot",
    "ingredient": "deepslate_gold_ore",
    "result": {
      "id": "gold_ingot"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 1,
    "group": "gold_ingot",
    "ingredient": "gold_ore",
    "result": {
      "id": "gold_ingot"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 1,
    "group": "gold_ingot",
    "ingredient": "nether_gold_ore",
    "result": {
      "id": "gold_ingot"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 1,
    "group": "gold_ingot",
    "ingredient": "raw_gold",
    "result": {
      "id": "gold_ingot"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "gold_ingot"
    ],
    "result": {
      "count": 9,
      "id": "gold_nugget"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.1,
    "ingredient": [
      "golden_pickaxe",
      "golden_shovel",
      "golden_axe",
      "golden_hoe",
      "golden_sword",
      "golden_helmet",
      "golden_chestplate",
      "golden_leggings",
      "golden_boots",
      "golden_horse_armor"
    ],
    "result": {
      "id": "gold_nugget"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": [
      "golden_pickaxe",
      "golden_shovel",
      "golden_axe",
      "golden_hoe",
      "golden_sword",
      "golden_helmet",
      "golden_chestplate",
      "golden_leggings",
      "golden_boots",
      "golden_horse_armor"
    ],
    "result": {
      "id": "gold_nugget"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "ingredients": [
      "diorite",
      "quartz"
    ],
    "result": {
      "count": 1,
      "id": "granite"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "granite"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "granite_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "granite",
    "result": {
      "count": 2,
      "id": "granite_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "granite"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "granite_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "granite",
    "result": {
      "count": 1,
      "id": "granite_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "granite"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "granite_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "granite",
    "result": {
      "count": 1,
      "id": "granite_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "gray_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "gray_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "gray_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "gray_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "gray_dye",
    "result": "gray_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "gray_dye"
    ],
    "result": {
      "count": 1,
      "id": "gray_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "gray_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "gray_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "gray_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "gray_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "black_dye",
      "white_dye"
    ],
    "result": {
      "count": 2,
      "id": "gray_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "gray_dye",
    "ingredients": [
      "closed_eyeblossom"
    ],
    "result": {
      "count": 1,
      "id": "gray_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "gray_terracotta",
    "result": {
      "id": "gray_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "gray_dye",
    "result": "gray_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "gray_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "gray_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "gray_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "gray_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "gray_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "gray_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "gray_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "gray_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "green_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "green_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "green_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "green_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "green_dye",
    "result": "green_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "green_dye"
    ],
    "result": {
      "count": 1,
      "id": "green_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "green_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "green_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "green_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "green_concrete_powder"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 1,
    "ingredient": "cactus",
    "result": {
      "id": "green_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "green_terracotta",
    "result": {
      "id": "green_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "green_dye",
    "result": "green_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "green_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "green_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "green_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "green_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "green_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "green_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "green_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "green_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#planks",
      "-": "stone_slab",
      "I": "stick"
    },
    "pattern": [
      "I-I",
      "# #"
    ],
    "result": {
      "count": 1,
      "id": "grindstone"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "ingredients": [
      "wheat",
      "wheat",
      "wheat",
      "wheat",
      "wheat",
      "wheat",
      "wheat",
      "wheat",
      "wheat"
    ],
    "result": {
      "count": 1,
      "id": "hay_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "iron_ingot"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "heavy_weighted_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "honeycomb"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "honeycomb_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "honey_bottle"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "honey_block"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "honey_block",
      "glass_bottle",
      "glass_bottle",
      "glass_bottle",
      "glass_bottle"
    ],
    "result": {
      "count": 4,
      "id": "honey_bottle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "C": "chest",
      "I": "iron_ingot"
    },
    "pattern": [
      "I I",
      "ICI",
      " I "
    ],
    "result": {
      "count": 1,
      "id": "hopper"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "hopper",
      "minecart"
    ],
    "result": {
      "count": 1,
      "id": "hopper_minecart"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "terracotta",
      "S": "host_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "host_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "host_armor_trim_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#iron_tool_materials"
    },
    "pattern": [
      "XX",
      "X#",
      " #"
    ],
    "result": {
      "count": 1,
      "id": "iron_axe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "iron_ingot"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "iron_bars"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "iron_ingot"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "iron_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "iron_ingot"
    },
    "pattern": [
      "X X",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "iron_boots"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "iron_ingot"
    },
    "pattern": [
      "X X",
      "XXX",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "iron_chestplate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "iron_ingot"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "iron_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "iron_ingot"
    },
    "pattern": [
      "XXX",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "iron_helmet"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#iron_tool_materials"
    },
    "pattern": [
      "XX",
      " #",
      " #"
    ],
    "result": {
      "count": 1,
      "id": "iron_hoe"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.7,
    "group": "iron_ingot",
    "ingredient": "deepslate_iron_ore",
    "result": {
      "id": "iron_ingot"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.7,
    "group": "iron_ingot",
    "ingredient": "iron_ore",
    "result": {
      "id": "iron_ingot"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.7,
    "group": "iron_ingot",
    "ingredient": "raw_iron",
    "result": {
      "id": "iron_ingot"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "iron_ingot",
    "ingredients": [
      "iron_block"
    ],
    "result": {
      "count": 9,
      "id": "iron_ingot"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "iron_ingot",
    "key": {
      "#": "iron_nugget"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "iron_ingot"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.7,
    "group": "iron_ingot",
    "ingredient": "deepslate_iron_ore",
    "result": {
      "id": "iron_ingot"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.7,
    "group": "iron_ingot",
    "ingredient": "iron_ore",
    "result": {
      "id": "iron_ingot"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.7,
    "group": "iron_ingot",
    "ingredient": "raw_iron",
    "result": {
      "id": "iron_ingot"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "iron_ingot"
    },
    "pattern": [
      "XXX",
      "X X",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "iron_leggings"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "iron_ingot"
    ],
    "result": {
      "count": 9,
      "id": "iron_nugget"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.1,
    "ingredient": [
      "iron_pickaxe",
      "iron_shovel",
      "iron_axe",
      "iron_hoe",
      "iron_sword",
      "iron_helmet",
      "iron_chestplate",
      "iron_leggings",
      "iron_boots",
      "iron_horse_armor",
      "chainmail_helmet",
      "chainmail_chestplate",
      "chainmail_leggings",
      "chainmail_boots"
    ],
    "result": {
      "id": "iron_nugget"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": [
      "iron_pickaxe",
      "iron_shovel",
      "iron_axe",
      "iron_hoe",
      "iron_sword",
      "iron_helmet",
      "iron_chestplate",
      "iron_leggings",
      "iron_boots",
      "iron_horse_armor",
      "chainmail_helmet",
      "chainmail_chestplate",
      "chainmail_leggings",
      "chainmail_boots"
    ],
    "result": {
      "id": "iron_nugget"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#iron_tool_materials"
    },
    "pattern": [
      "XXX",
      " # ",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "iron_pickaxe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#iron_tool_materials"
    },
    "pattern": [
      "X",
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "iron_shovel"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#iron_tool_materials"
    },
    "pattern": [
      "X",
      "X",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "iron_sword"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "iron_ingot"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "iron_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "stick",
      "X": "leather"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "item_frame"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "A": "carved_pumpkin",
      "B": "torch"
    },
    "pattern": [
      "A",
      "B"
    ],
    "result": {
      "count": 1,
      "id": "jack_o_lantern"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#planks",
      "X": "diamond"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "jukebox"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "boat",
    "key": {
      "#": "jungle_planks"
    },
    "pattern": [
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "jungle_boat"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "jungle_planks"
    ],
    "result": {
      "count": 1,
      "id": "jungle_button"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "chest_boat",
    "ingredients": [
      "chest",
      "jungle_boat"
    ],
    "result": {
      "count": 1,
      "id": "jungle_chest_boat"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "jungle_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "jungle_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "jungle_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "jungle_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "jungle_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "jungle_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_jungle_log",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "jungle_hanging_sign"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#jungle_logs"
    ],
    "result": {
      "count": 4,
      "id": "jungle_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "jungle_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "jungle_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "jungle_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "jungle_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "jungle_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "jungle_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "jungle_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "jungle_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "jungle_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "jungle_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "jungle_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "jungle_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "stick"
    },
    "pattern": [
      "# #",
      "###",
      "# #"
    ],
    "result": {
      "count": 3,
      "id": "ladder"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "torch",
      "X": "iron_nugget"
    },
    "pattern": [
      "XXX",
      "X#X",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "lantern"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "lapis_lazuli"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "lapis_block"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "lapis_block"
    ],
    "result": {
      "count": 9,
      "id": "lapis_lazuli"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.2,
    "group": "lapis_lazuli",
    "ingredient": "deepslate_lapis_ore",
    "result": {
      "id": "lapis_lazuli"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.2,
    "group": "lapis_lazuli",
    "ingredient": "lapis_ore",
    "result": {
      "id": "lapis_lazuli"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.2,
    "group": "lapis_lazuli",
    "ingredient": "deepslate_lapis_ore",
    "result": {
      "id": "lapis_lazuli"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.2,
    "group": "lapis_lazuli",
    "ingredient": "lapis_ore",
    "result": {
      "id": "lapis_lazuli"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "O": "slime_ball",
      "~": "string"
    },
    "pattern": [
      "~~ ",
      "~O ",
      "  ~"
    ],
    "result": {
      "count": 2,
      "id": "lead"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "rabbit_hide"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "leather"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "leather"
    },
    "pattern": [
      "X X",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "leather_boots"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "leather"
    },
    "pattern": [
      "X X",
      "XXX",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "leather_chestplate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "leather"
    },
    "pattern": [
      "XXX",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "leather_helmet"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "X": "leather"
    },
    "pattern": [
      "X X",
      "XXX",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "leather_horse_armor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "leather"
    },
    "pattern": [
      "XXX",
      "X X",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "leather_leggings"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "B": "bookshelf",
      "S": "#wooden_slabs"
    },
    "pattern": [
      "SSS",
      " B ",
      " S "
    ],
    "result": {
      "count": 1,
      "id": "lectern"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "cobblestone",
      "X": "stick"
    },
    "pattern": [
      "X",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "lever"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "copper_ingot"
    },
    "pattern": [
      "#",
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "lightning_rod"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "light_blue_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "light_blue_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "light_blue_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "light_blue_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "light_blue_dye",
    "result": "light_blue_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "light_blue_dye"
    ],
    "result": {
      "count": 1,
      "id": "light_blue_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "light_blue_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "light_blue_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "light_blue_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "light_blue_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "light_blue_dye",
    "ingredients": [
      "blue_orchid"
    ],
    "result": {
      "count": 1,
      "id": "light_blue_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "light_blue_dye",
    "ingredients": [
      "blue_dye",
      "white_dye"
    ],
    "result": {
      "count": 2,
      "id": "light_blue_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "light_blue_terracotta",
    "result": {
      "id": "light_blue_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "light_blue_dye",
    "result": "light_blue_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "light_blue_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "light_blue_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "light_blue_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "light_blue_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "light_blue_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "light_blue_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "light_blue_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "light_blue_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "light_gray_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "light_gray_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "light_gray_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "light_gray_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "light_gray_dye",
    "result": "light_gray_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "light_gray_dye"
    ],
    "result": {
      "count": 1,
      "id": "light_gray_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "light_gray_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "light_gray_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "light_gray_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "light_gray_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "light_gray_dye",
    "ingredients": [
      "azure_bluet"
    ],
    "result": {
      "count": 1,
      "id": "light_gray_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "light_gray_dye",
    "ingredients": [
      "black_dye",
      "white_dye",
      "white_dye"
    ],
    "result": {
      "count": 3,
      "id": "light_gray_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "light_gray_dye",
    "ingredients": [
      "gray_dye",
      "white_dye"
    ],
    "result": {
      "count": 2,
      "id": "light_gray_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "light_gray_dye",
    "ingredients": [
      "oxeye_daisy"
    ],
    "result": {
      "count": 1,
      "id": "light_gray_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "light_gray_dye",
    "ingredients": [
      "white_tulip"
    ],
    "result": {
      "count": 1,
      "id": "light_gray_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "light_gray_terracotta",
    "result": {
      "id": "light_gray_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "light_gray_dye",
    "result": "light_gray_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "light_gray_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "light_gray_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "light_gray_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "light_gray_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "light_gray_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "light_gray_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "light_gray_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "light_gray_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "gold_ingot"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "light_weighted_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "lime_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "lime_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "lime_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "lime_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "lime_dye",
    "result": "lime_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "lime_dye"
    ],
    "result": {
      "count": 1,
      "id": "lime_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "lime_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "lime_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "lime_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "lime_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "green_dye",
      "white_dye"
    ],
    "result": {
      "count": 2,
      "id": "lime_dye"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "sea_pickle",
    "result": {
      "id": "lime_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "lime_terracotta",
    "result": {
      "id": "lime_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "lime_dye",
    "result": "lime_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "lime_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "lime_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "lime_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "lime_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "lime_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "lime_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "lime_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "lime_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "netherite_ingot",
      "S": "chiseled_stone_bricks"
    },
    "pattern": [
      "SSS",
      "S#S",
      "SSS"
    ],
    "result": {
      "count": 1,
      "id": "lodestone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#planks",
      "@": "string"
    },
    "pattern": [
      "@@",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "loom"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "heavy_core",
      "I": "breeze_rod"
    },
    "pattern": [
      " # ",
      " I "
    ],
    "result": {
      "count": 1,
      "id": "mace"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "magenta_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "magenta_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "magenta_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "magenta_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "magenta_dye",
    "result": "magenta_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "magenta_dye"
    ],
    "result": {
      "count": 1,
      "id": "magenta_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "magenta_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "magenta_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "magenta_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "magenta_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "magenta_dye",
    "ingredients": [
      "allium"
    ],
    "result": {
      "count": 1,
      "id": "magenta_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "magenta_dye",
    "ingredients": [
      "blue_dye",
      "red_dye",
      "pink_dye"
    ],
    "result": {
      "count": 3,
      "id": "magenta_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "magenta_dye",
    "ingredients": [
      "blue_dye",
      "red_dye",
      "red_dye",
      "white_dye"
    ],
    "result": {
      "count": 4,
      "id": "magenta_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "magenta_dye",
    "ingredients": [
      "lilac"
    ],
    "result": {
      "count": 2,
      "id": "magenta_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "magenta_dye",
    "ingredients": [
      "purple_dye",
      "pink_dye"
    ],
    "result": {
      "count": 2,
      "id": "magenta_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "magenta_terracotta",
    "result": {
      "id": "magenta_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "magenta_dye",
    "result": "magenta_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "magenta_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "magenta_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "magenta_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "magenta_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "magenta_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "magenta_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "magenta_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "magenta_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "magma_cream"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "magma_block"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "blaze_powder",
      "slime_ball"
    ],
    "result": {
      "count": 1,
      "id": "magma_cream"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "boat",
    "key": {
      "#": "mangrove_planks"
    },
    "pattern": [
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "mangrove_boat"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "mangrove_planks"
    ],
    "result": {
      "count": 1,
      "id": "mangrove_button"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "chest_boat",
    "ingredients": [
      "chest",
      "mangrove_boat"
    ],
    "result": {
      "count": 1,
      "id": "mangrove_chest_boat"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "mangrove_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "mangrove_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "mangrove_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "mangrove_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "mangrove_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "mangrove_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_mangrove_log",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "mangrove_hanging_sign"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#mangrove_logs"
    ],
    "result": {
      "count": 4,
      "id": "mangrove_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "mangrove_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "mangrove_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "mangrove_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "mangrove_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "mangrove_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "mangrove_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "mangrove_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "mangrove_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "mangrove_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "mangrove_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "mangrove_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "mangrove_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "paper",
      "X": "compass"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "map"
    }
  }, {
    "type": "crafting_special_mapcloning",
    "category": "misc"
  }, {
    "type": "crafting_special_mapextending",
    "category": "misc"
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "ingredients": [
      "melon_slice",
      "melon_slice",
      "melon_slice",
      "melon_slice",
      "melon_slice",
      "melon_slice",
      "melon_slice",
      "melon_slice",
      "melon_slice"
    ],
    "result": {
      "count": 1,
      "id": "melon"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "melon_slice"
    ],
    "result": {
      "count": 1,
      "id": "melon_seeds"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "iron_ingot"
    },
    "pattern": [
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "minecart"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "paper",
      "enchanted_golden_apple"
    ],
    "result": {
      "count": 1,
      "id": "mojang_banner_pattern"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "mossy_cobblestone",
    "ingredients": [
      "cobblestone",
      "moss_block"
    ],
    "result": {
      "count": 1,
      "id": "mossy_cobblestone"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "mossy_cobblestone",
    "ingredients": [
      "cobblestone",
      "vine"
    ],
    "result": {
      "count": 1,
      "id": "mossy_cobblestone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "mossy_cobblestone"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "mossy_cobblestone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "mossy_cobblestone",
    "result": {
      "count": 2,
      "id": "mossy_cobblestone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "mossy_cobblestone"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "mossy_cobblestone_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "mossy_cobblestone",
    "result": {
      "count": 1,
      "id": "mossy_cobblestone_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "mossy_cobblestone"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "mossy_cobblestone_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "mossy_cobblestone",
    "result": {
      "count": 1,
      "id": "mossy_cobblestone_wall"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "mossy_stone_bricks",
    "ingredients": [
      "stone_bricks",
      "moss_block"
    ],
    "result": {
      "count": 1,
      "id": "mossy_stone_bricks"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "mossy_stone_bricks",
    "ingredients": [
      "stone_bricks",
      "vine"
    ],
    "result": {
      "count": 1,
      "id": "mossy_stone_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "mossy_stone_bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "mossy_stone_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "mossy_stone_bricks",
    "result": {
      "count": 2,
      "id": "mossy_stone_brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "mossy_stone_bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "mossy_stone_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "mossy_stone_bricks",
    "result": {
      "count": 1,
      "id": "mossy_stone_brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "mossy_stone_bricks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "mossy_stone_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "mossy_stone_bricks",
    "result": {
      "count": 1,
      "id": "mossy_stone_brick_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "moss_block"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "moss_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "ingredients": [
      "mud",
      "mangrove_roots"
    ],
    "result": {
      "count": 1,
      "id": "muddy_mangrove_roots"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "packed_mud"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "mud_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "mud_bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "mud_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "mud_bricks",
    "result": {
      "count": 2,
      "id": "mud_brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "mud_bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "mud_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "mud_bricks",
    "result": {
      "count": 1,
      "id": "mud_brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "mud_bricks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "mud_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "mud_bricks",
    "result": {
      "count": 1,
      "id": "mud_brick_wall"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "brown_mushroom",
      "red_mushroom",
      "bowl"
    ],
    "result": {
      "count": 1,
      "id": "mushroom_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "disc_fragment_5",
      "disc_fragment_5",
      "disc_fragment_5",
      "disc_fragment_5",
      "disc_fragment_5",
      "disc_fragment_5",
      "disc_fragment_5",
      "disc_fragment_5",
      "disc_fragment_5"
    ],
    "result": {
      "count": 1,
      "id": "music_disc_5"
    }
  }, {
    "type": "smithing_transform",
    "addition": "#netherite_tool_materials",
    "base": "diamond_axe",
    "result": {
      "count": 1,
      "id": "netherite_axe"
    },
    "template": "netherite_upgrade_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "netherite_ingot"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "netherite_block"
    }
  }, {
    "type": "smithing_transform",
    "addition": "#netherite_tool_materials",
    "base": "diamond_boots",
    "result": {
      "count": 1,
      "id": "netherite_boots"
    },
    "template": "netherite_upgrade_smithing_template"
  }, {
    "type": "smithing_transform",
    "addition": "#netherite_tool_materials",
    "base": "diamond_chestplate",
    "result": {
      "count": 1,
      "id": "netherite_chestplate"
    },
    "template": "netherite_upgrade_smithing_template"
  }, {
    "type": "smithing_transform",
    "addition": "#netherite_tool_materials",
    "base": "diamond_helmet",
    "result": {
      "count": 1,
      "id": "netherite_helmet"
    },
    "template": "netherite_upgrade_smithing_template"
  }, {
    "type": "smithing_transform",
    "addition": "#netherite_tool_materials",
    "base": "diamond_hoe",
    "result": {
      "count": 1,
      "id": "netherite_hoe"
    },
    "template": "netherite_upgrade_smithing_template"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "netherite_ingot",
    "ingredients": [
      "netherite_scrap",
      "netherite_scrap",
      "netherite_scrap",
      "netherite_scrap",
      "gold_ingot",
      "gold_ingot",
      "gold_ingot",
      "gold_ingot"
    ],
    "result": {
      "count": 1,
      "id": "netherite_ingot"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "netherite_ingot",
    "ingredients": [
      "netherite_block"
    ],
    "result": {
      "count": 9,
      "id": "netherite_ingot"
    }
  }, {
    "type": "smithing_transform",
    "addition": "#netherite_tool_materials",
    "base": "diamond_leggings",
    "result": {
      "count": 1,
      "id": "netherite_leggings"
    },
    "template": "netherite_upgrade_smithing_template"
  }, {
    "type": "smithing_transform",
    "addition": "#netherite_tool_materials",
    "base": "diamond_pickaxe",
    "result": {
      "count": 1,
      "id": "netherite_pickaxe"
    },
    "template": "netherite_upgrade_smithing_template"
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 2,
    "ingredient": "ancient_debris",
    "result": {
      "id": "netherite_scrap"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 2,
    "ingredient": "ancient_debris",
    "result": {
      "id": "netherite_scrap"
    }
  }, {
    "type": "smithing_transform",
    "addition": "#netherite_tool_materials",
    "base": "diamond_shovel",
    "result": {
      "count": 1,
      "id": "netherite_shovel"
    },
    "template": "netherite_upgrade_smithing_template"
  }, {
    "type": "smithing_transform",
    "addition": "#netherite_tool_materials",
    "base": "diamond_sword",
    "result": {
      "count": 1,
      "id": "netherite_sword"
    },
    "template": "netherite_upgrade_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "netherrack",
      "S": "netherite_upgrade_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "netherite_upgrade_smithing_template"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "netherrack",
    "result": {
      "id": "nether_brick"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "nether_brick"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "nether_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "nether_brick",
      "W": "nether_bricks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 6,
      "id": "nether_brick_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "nether_bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "nether_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "nether_bricks",
    "result": {
      "count": 2,
      "id": "nether_brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "nether_bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "nether_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "nether_bricks",
    "result": {
      "count": 1,
      "id": "nether_brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "nether_bricks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "nether_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "nether_bricks",
    "result": {
      "count": 1,
      "id": "nether_brick_wall"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "ingredients": [
      "nether_wart",
      "nether_wart",
      "nether_wart",
      "nether_wart",
      "nether_wart",
      "nether_wart",
      "nether_wart",
      "nether_wart",
      "nether_wart"
    ],
    "result": {
      "count": 1,
      "id": "nether_wart_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "#planks",
      "X": "redstone"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "note_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "boat",
    "key": {
      "#": "oak_planks"
    },
    "pattern": [
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "oak_boat"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "oak_planks"
    ],
    "result": {
      "count": 1,
      "id": "oak_button"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "chest_boat",
    "ingredients": [
      "chest",
      "oak_boat"
    ],
    "result": {
      "count": 1,
      "id": "oak_chest_boat"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "oak_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "oak_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "oak_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "oak_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "oak_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "oak_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_oak_log",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "oak_hanging_sign"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#oak_logs"
    ],
    "result": {
      "count": 4,
      "id": "oak_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "oak_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "oak_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "oak_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "oak_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "oak_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "oak_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "oak_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "oak_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "oak_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "oak_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "oak_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "oak_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "cobblestone",
      "Q": "quartz",
      "R": "redstone"
    },
    "pattern": [
      "###",
      "RRQ",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "observer"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "orange_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "orange_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "orange_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "orange_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "orange_dye",
    "result": "orange_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "orange_dye"
    ],
    "result": {
      "count": 1,
      "id": "orange_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "orange_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "orange_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "orange_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "orange_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "orange_dye",
    "ingredients": [
      "open_eyeblossom"
    ],
    "result": {
      "count": 1,
      "id": "orange_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "orange_dye",
    "ingredients": [
      "orange_tulip"
    ],
    "result": {
      "count": 1,
      "id": "orange_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "orange_dye",
    "ingredients": [
      "red_dye",
      "yellow_dye"
    ],
    "result": {
      "count": 2,
      "id": "orange_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "orange_dye",
    "ingredients": [
      "torchflower"
    ],
    "result": {
      "count": 1,
      "id": "orange_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "orange_terracotta",
    "result": {
      "id": "orange_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "orange_dye",
    "result": "orange_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "orange_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "orange_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "orange_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "orange_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "orange_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "orange_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "orange_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "orange_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "oxidized_cut_copper_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "oxidized_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "oxidized_copper",
    "result": {
      "count": 4,
      "id": "oxidized_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "oxidized_cut_copper",
    "result": {
      "count": 1,
      "id": "oxidized_chiseled_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "B": "blaze_rod",
      "C": "oxidized_copper",
      "R": "redstone"
    },
    "pattern": [
      " C ",
      "CBC",
      " R "
    ],
    "result": {
      "count": 4,
      "id": "oxidized_copper_bulb"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "M": "oxidized_copper"
    },
    "pattern": [
      " M ",
      "M M",
      " M "
    ],
    "result": {
      "count": 4,
      "id": "oxidized_copper_grate"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "oxidized_copper",
    "result": {
      "count": 4,
      "id": "oxidized_copper_grate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "oxidized_copper"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "oxidized_cut_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "oxidized_copper",
    "result": {
      "count": 4,
      "id": "oxidized_cut_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "oxidized_cut_copper"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "oxidized_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "oxidized_copper",
    "result": {
      "count": 8,
      "id": "oxidized_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "oxidized_cut_copper",
    "result": {
      "count": 2,
      "id": "oxidized_cut_copper_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "oxidized_cut_copper"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "oxidized_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "oxidized_copper",
    "result": {
      "count": 4,
      "id": "oxidized_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "oxidized_cut_copper",
    "result": {
      "count": 1,
      "id": "oxidized_cut_copper_stairs"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "ingredients": [
      "ice",
      "ice",
      "ice",
      "ice",
      "ice",
      "ice",
      "ice",
      "ice",
      "ice"
    ],
    "result": {
      "count": 1,
      "id": "packed_ice"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "ingredients": [
      "mud",
      "wheat"
    ],
    "result": {
      "count": 1,
      "id": "packed_mud"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "stick",
      "X": "#wool"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "painting"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "pale_moss_block"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "pale_moss_carpet"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "boat",
    "key": {
      "#": "pale_oak_planks"
    },
    "pattern": [
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "pale_oak_boat"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "pale_oak_planks"
    ],
    "result": {
      "count": 1,
      "id": "pale_oak_button"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "chest_boat",
    "ingredients": [
      "chest",
      "pale_oak_boat"
    ],
    "result": {
      "count": 1,
      "id": "pale_oak_chest_boat"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "pale_oak_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "pale_oak_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "pale_oak_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "pale_oak_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "pale_oak_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "pale_oak_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_pale_oak_log",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "pale_oak_hanging_sign"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#pale_oak_logs"
    ],
    "result": {
      "count": 4,
      "id": "pale_oak_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "pale_oak_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "pale_oak_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "pale_oak_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "pale_oak_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "pale_oak_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "pale_oak_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "pale_oak_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "pale_oak_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "pale_oak_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "pale_oak_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "pale_oak_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "pale_oak_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "sugar_cane"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 3,
      "id": "paper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "pink_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "pink_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "pink_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "pink_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "pink_dye",
    "result": "pink_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "pink_dye"
    ],
    "result": {
      "count": 1,
      "id": "pink_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "pink_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "pink_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "pink_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "pink_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "pink_dye",
    "ingredients": [
      "peony"
    ],
    "result": {
      "count": 2,
      "id": "pink_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "pink_dye",
    "ingredients": [
      "pink_petals"
    ],
    "result": {
      "count": 1,
      "id": "pink_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "pink_dye",
    "ingredients": [
      "pink_tulip"
    ],
    "result": {
      "count": 1,
      "id": "pink_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "pink_dye",
    "ingredients": [
      "red_dye",
      "white_dye"
    ],
    "result": {
      "count": 2,
      "id": "pink_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "pink_terracotta",
    "result": {
      "id": "pink_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "pink_dye",
    "result": "pink_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "pink_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "pink_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "pink_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "pink_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "pink_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "pink_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "pink_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "pink_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "cobblestone",
      "R": "redstone",
      "T": "#planks",
      "X": "iron_ingot"
    },
    "pattern": [
      "TTT",
      "#X#",
      "#R#"
    ],
    "result": {
      "count": 1,
      "id": "piston"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "S": "andesite"
    },
    "pattern": [
      "SS",
      "SS"
    ],
    "result": {
      "count": 4,
      "id": "polished_andesite"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "andesite",
    "result": {
      "count": 1,
      "id": "polished_andesite"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_andesite"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "polished_andesite_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "andesite",
    "result": {
      "count": 2,
      "id": "polished_andesite_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_andesite",
    "result": {
      "count": 2,
      "id": "polished_andesite_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_andesite"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "polished_andesite_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "andesite",
    "result": {
      "count": 1,
      "id": "polished_andesite_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_andesite",
    "result": {
      "count": 1,
      "id": "polished_andesite_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "S": "basalt"
    },
    "pattern": [
      "SS",
      "SS"
    ],
    "result": {
      "count": 4,
      "id": "polished_basalt"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "basalt",
    "result": {
      "count": 1,
      "id": "polished_basalt"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "S": "blackstone"
    },
    "pattern": [
      "SS",
      "SS"
    ],
    "result": {
      "count": 4,
      "id": "polished_blackstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "S": "polished_blackstone"
    },
    "pattern": [
      "SS",
      "SS"
    ],
    "result": {
      "count": 4,
      "id": "polished_blackstone_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 1,
      "id": "polished_blackstone_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_blackstone",
    "result": {
      "count": 1,
      "id": "polished_blackstone_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_blackstone_bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "polished_blackstone_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 2,
      "id": "polished_blackstone_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_blackstone_bricks",
    "result": {
      "count": 2,
      "id": "polished_blackstone_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_blackstone",
    "result": {
      "count": 2,
      "id": "polished_blackstone_brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_blackstone_bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "polished_blackstone_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 1,
      "id": "polished_blackstone_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_blackstone_bricks",
    "result": {
      "count": 1,
      "id": "polished_blackstone_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_blackstone",
    "result": {
      "count": 1,
      "id": "polished_blackstone_brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "polished_blackstone_bricks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "polished_blackstone_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 1,
      "id": "polished_blackstone_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_blackstone_bricks",
    "result": {
      "count": 1,
      "id": "polished_blackstone_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_blackstone",
    "result": {
      "count": 1,
      "id": "polished_blackstone_brick_wall"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "ingredients": [
      "polished_blackstone"
    ],
    "result": {
      "count": 1,
      "id": "polished_blackstone_button"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 1,
      "id": "polished_blackstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "polished_blackstone"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "polished_blackstone_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_blackstone"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "polished_blackstone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 2,
      "id": "polished_blackstone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_blackstone",
    "result": {
      "count": 2,
      "id": "polished_blackstone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_blackstone"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "polished_blackstone_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 1,
      "id": "polished_blackstone_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_blackstone",
    "result": {
      "count": 1,
      "id": "polished_blackstone_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "polished_blackstone"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "polished_blackstone_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "blackstone",
    "result": {
      "count": 1,
      "id": "polished_blackstone_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_blackstone",
    "result": {
      "count": 1,
      "id": "polished_blackstone_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "S": "cobbled_deepslate"
    },
    "pattern": [
      "SS",
      "SS"
    ],
    "result": {
      "count": 4,
      "id": "polished_deepslate"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "polished_deepslate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_deepslate"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "polished_deepslate_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 2,
      "id": "polished_deepslate_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_deepslate",
    "result": {
      "count": 2,
      "id": "polished_deepslate_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_deepslate"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "polished_deepslate_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "polished_deepslate_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_deepslate",
    "result": {
      "count": 1,
      "id": "polished_deepslate_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "polished_deepslate"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "polished_deepslate_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "cobbled_deepslate",
    "result": {
      "count": 1,
      "id": "polished_deepslate_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_deepslate",
    "result": {
      "count": 1,
      "id": "polished_deepslate_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "S": "diorite"
    },
    "pattern": [
      "SS",
      "SS"
    ],
    "result": {
      "count": 4,
      "id": "polished_diorite"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "diorite",
    "result": {
      "count": 1,
      "id": "polished_diorite"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_diorite"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "polished_diorite_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "diorite",
    "result": {
      "count": 2,
      "id": "polished_diorite_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_diorite",
    "result": {
      "count": 2,
      "id": "polished_diorite_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_diorite"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "polished_diorite_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "diorite",
    "result": {
      "count": 1,
      "id": "polished_diorite_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_diorite",
    "result": {
      "count": 1,
      "id": "polished_diorite_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "S": "granite"
    },
    "pattern": [
      "SS",
      "SS"
    ],
    "result": {
      "count": 4,
      "id": "polished_granite"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "granite",
    "result": {
      "count": 1,
      "id": "polished_granite"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_granite"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "polished_granite_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "granite",
    "result": {
      "count": 2,
      "id": "polished_granite_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_granite",
    "result": {
      "count": 2,
      "id": "polished_granite_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_granite"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "polished_granite_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "granite",
    "result": {
      "count": 1,
      "id": "polished_granite_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_granite",
    "result": {
      "count": 1,
      "id": "polished_granite_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "S": "tuff"
    },
    "pattern": [
      "SS",
      "SS"
    ],
    "result": {
      "count": 4,
      "id": "polished_tuff"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 1,
      "id": "polished_tuff"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_tuff"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "polished_tuff_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_tuff",
    "result": {
      "count": 2,
      "id": "polished_tuff_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 2,
      "id": "polished_tuff_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "polished_tuff"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "polished_tuff_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_tuff",
    "result": {
      "count": 1,
      "id": "polished_tuff_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 1,
      "id": "polished_tuff_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "polished_tuff"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "polished_tuff_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_tuff",
    "result": {
      "count": 1,
      "id": "polished_tuff_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 1,
      "id": "polished_tuff_wall"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "chorus_fruit",
    "result": {
      "id": "popped_chorus_fruit"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "stick",
      "R": "redstone",
      "X": "gold_ingot"
    },
    "pattern": [
      "X X",
      "X#X",
      "XRX"
    ],
    "result": {
      "count": 6,
      "id": "powered_rail"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "prismarine_shard"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "prismarine"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "ingredients": [
      "prismarine_shard",
      "prismarine_shard",
      "prismarine_shard",
      "prismarine_shard",
      "prismarine_shard",
      "prismarine_shard",
      "prismarine_shard",
      "prismarine_shard",
      "prismarine_shard"
    ],
    "result": {
      "count": 1,
      "id": "prismarine_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "prismarine_bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "prismarine_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "prismarine_bricks",
    "result": {
      "count": 2,
      "id": "prismarine_brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "prismarine_bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "prismarine_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "prismarine_bricks",
    "result": {
      "count": 1,
      "id": "prismarine_brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "prismarine"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "prismarine_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "prismarine",
    "result": {
      "count": 2,
      "id": "prismarine_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "prismarine"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "prismarine_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "prismarine",
    "result": {
      "count": 1,
      "id": "prismarine_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "prismarine"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "prismarine_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "prismarine",
    "result": {
      "count": 1,
      "id": "prismarine_wall"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "pumpkin",
      "sugar",
      "egg"
    ],
    "result": {
      "count": 1,
      "id": "pumpkin_pie"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "pumpkin"
    ],
    "result": {
      "count": 4,
      "id": "pumpkin_seeds"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "purple_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "purple_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "purple_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "purple_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "purple_dye",
    "result": "purple_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "purple_dye"
    ],
    "result": {
      "count": 1,
      "id": "purple_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "purple_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "purple_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "purple_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "purple_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "blue_dye",
      "red_dye"
    ],
    "result": {
      "count": 2,
      "id": "purple_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "purple_terracotta",
    "result": {
      "id": "purple_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "purple_dye",
    "result": "purple_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "purple_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "purple_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "purple_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "purple_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "purple_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "purple_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "purple_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "purple_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "F": "popped_chorus_fruit"
    },
    "pattern": [
      "FF",
      "FF"
    ],
    "result": {
      "count": 4,
      "id": "purpur_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "purpur_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "purpur_pillar"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "purpur_block",
    "result": {
      "count": 1,
      "id": "purpur_pillar"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": [
        "purpur_block",
        "purpur_pillar"
      ]
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "purpur_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "purpur_block",
    "result": {
      "count": 2,
      "id": "purpur_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": [
        "purpur_block",
        "purpur_pillar"
      ]
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "purpur_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "purpur_block",
    "result": {
      "count": 1,
      "id": "purpur_stairs"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.2,
    "ingredient": "nether_quartz_ore",
    "result": {
      "id": "quartz"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "quartz"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "quartz_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "quartz_block"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "quartz_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "quartz_block",
    "result": {
      "count": 1,
      "id": "quartz_bricks"
    }
  }, {
    "type": "blasting",
    "category": "misc",
    "cookingtime": 100,
    "experience": 0.2,
    "ingredient": "nether_quartz_ore",
    "result": {
      "id": "quartz"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "quartz_block"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 2,
      "id": "quartz_pillar"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "quartz_block",
    "result": {
      "count": 1,
      "id": "quartz_pillar"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": [
        "chiseled_quartz_block",
        "quartz_block",
        "quartz_pillar"
      ]
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "quartz_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "quartz_block",
    "result": {
      "count": 2,
      "id": "quartz_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": [
        "chiseled_quartz_block",
        "quartz_block",
        "quartz_pillar"
      ]
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "quartz_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "quartz_block",
    "result": {
      "count": 1,
      "id": "quartz_stairs"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "rabbit_stew",
    "ingredients": [
      "baked_potato",
      "cooked_rabbit",
      "bowl",
      "carrot",
      "brown_mushroom"
    ],
    "result": {
      "count": 1,
      "id": "rabbit_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "rabbit_stew",
    "ingredients": [
      "baked_potato",
      "cooked_rabbit",
      "bowl",
      "carrot",
      "red_mushroom"
    ],
    "result": {
      "count": 1,
      "id": "rabbit_stew"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "stick",
      "X": "iron_ingot"
    },
    "pattern": [
      "X X",
      "X#X",
      "X X"
    ],
    "result": {
      "count": 16,
      "id": "rail"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "terracotta",
      "S": "raiser_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "raiser_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "raiser_armor_trim_smithing_template"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "raw_copper_block"
    ],
    "result": {
      "count": 9,
      "id": "raw_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "raw_copper"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "raw_copper_block"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "raw_gold_block"
    ],
    "result": {
      "count": 9,
      "id": "raw_gold"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "raw_gold"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "raw_gold_block"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "raw_iron_block"
    ],
    "result": {
      "count": 9,
      "id": "raw_iron"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "raw_iron"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "raw_iron_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "C": "compass",
      "S": "echo_shard"
    },
    "pattern": [
      "SSS",
      "SCS",
      "SSS"
    ],
    "result": {
      "count": 1,
      "id": "recovery_compass"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "ingredients": [
      "redstone_block"
    ],
    "result": {
      "count": 9,
      "id": "redstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "redstone"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "redstone_block"
    }
  }, {
    "type": "blasting",
    "category": "blocks",
    "cookingtime": 100,
    "experience": 0.7,
    "group": "redstone",
    "ingredient": "deepslate_redstone_ore",
    "result": {
      "id": "redstone"
    }
  }, {
    "type": "blasting",
    "category": "blocks",
    "cookingtime": 100,
    "experience": 0.7,
    "group": "redstone",
    "ingredient": "redstone_ore",
    "result": {
      "id": "redstone"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.7,
    "group": "redstone",
    "ingredient": "deepslate_redstone_ore",
    "result": {
      "id": "redstone"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.7,
    "group": "redstone",
    "ingredient": "redstone_ore",
    "result": {
      "id": "redstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "G": "glowstone",
      "R": "redstone"
    },
    "pattern": [
      " R ",
      "RGR",
      " R "
    ],
    "result": {
      "count": 1,
      "id": "redstone_lamp"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "stick",
      "X": "redstone"
    },
    "pattern": [
      "X",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "redstone_torch"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "red_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "red_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "red_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "red_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "red_dye",
    "result": "red_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "red_dye"
    ],
    "result": {
      "count": 1,
      "id": "red_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "red_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "red_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "red_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "red_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "red_dye",
    "ingredients": [
      "beetroot"
    ],
    "result": {
      "count": 1,
      "id": "red_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "red_dye",
    "ingredients": [
      "poppy"
    ],
    "result": {
      "count": 1,
      "id": "red_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "red_dye",
    "ingredients": [
      "rose_bush"
    ],
    "result": {
      "count": 2,
      "id": "red_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "red_dye",
    "ingredients": [
      "red_tulip"
    ],
    "result": {
      "count": 1,
      "id": "red_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "red_terracotta",
    "result": {
      "id": "red_glazed_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "N": "nether_brick",
      "W": "nether_wart"
    },
    "pattern": [
      "NW",
      "WN"
    ],
    "result": {
      "count": 1,
      "id": "red_nether_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "red_nether_bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "red_nether_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "red_nether_bricks",
    "result": {
      "count": 2,
      "id": "red_nether_brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "red_nether_bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "red_nether_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "red_nether_bricks",
    "result": {
      "count": 1,
      "id": "red_nether_brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "red_nether_bricks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "red_nether_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "red_nether_bricks",
    "result": {
      "count": 1,
      "id": "red_nether_brick_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "red_sand"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "red_sandstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": [
        "red_sandstone",
        "chiseled_red_sandstone"
      ]
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "red_sandstone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "red_sandstone",
    "result": {
      "count": 2,
      "id": "red_sandstone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": [
        "red_sandstone",
        "chiseled_red_sandstone",
        "cut_red_sandstone"
      ]
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "red_sandstone_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "red_sandstone",
    "result": {
      "count": 1,
      "id": "red_sandstone_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "red_sandstone"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "red_sandstone_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "red_sandstone",
    "result": {
      "count": 1,
      "id": "red_sandstone_wall"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "red_dye",
    "result": "red_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "red_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "red_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "red_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "red_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "red_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "red_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "red_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "red_terracotta"
    }
  }, {
    "type": "crafting_special_repairitem",
    "category": "misc"
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "redstone_torch",
      "I": "stone",
      "X": "redstone"
    },
    "pattern": [
      "#X#",
      "III"
    ],
    "result": {
      "count": 1,
      "id": "repeater"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "resin_clump"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "resin_block"
    }
  }, {
    "type": "smelting",
    "category": "misc",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "resin_clump",
    "result": {
      "id": "resin_brick"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "resin_brick"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "resin_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "resin_bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "resin_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "resin_bricks",
    "result": {
      "count": 2,
      "id": "resin_brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "resin_bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "resin_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "resin_bricks",
    "result": {
      "count": 1,
      "id": "resin_brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "resin_bricks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "resin_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "resin_bricks",
    "result": {
      "count": 1,
      "id": "resin_brick_wall"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "resin_block"
    ],
    "result": {
      "count": 9,
      "id": "resin_clump"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "G": "glowstone",
      "O": "crying_obsidian"
    },
    "pattern": [
      "OOO",
      "GGG",
      "OOO"
    ],
    "result": {
      "count": 1,
      "id": "respawn_anchor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "netherrack",
      "S": "rib_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "rib_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "rib_armor_trim_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "sand"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "sandstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": [
        "sandstone",
        "chiseled_sandstone"
      ]
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "sandstone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "sandstone",
    "result": {
      "count": 2,
      "id": "sandstone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": [
        "sandstone",
        "chiseled_sandstone",
        "cut_sandstone"
      ]
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "sandstone_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "sandstone",
    "result": {
      "count": 1,
      "id": "sandstone_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "sandstone"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "sandstone_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "sandstone",
    "result": {
      "count": 1,
      "id": "sandstone_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "I": "bamboo",
      "~": "string"
    },
    "pattern": [
      "I~I",
      "I I",
      "I I"
    ],
    "result": {
      "count": 6,
      "id": "scaffolding"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "C": "prismarine_crystals",
      "S": "prismarine_shard"
    },
    "pattern": [
      "SCS",
      "CCC",
      "SCS"
    ],
    "result": {
      "count": 1,
      "id": "sea_lantern"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "cobblestone",
      "S": "sentry_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "sentry_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "sentry_armor_trim_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "terracotta",
      "S": "shaper_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "shaper_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "shaper_armor_trim_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "iron_ingot"
    },
    "pattern": [
      " #",
      "# "
    ],
    "result": {
      "count": 1,
      "id": "shears"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "W": "#wooden_tool_materials",
      "o": "iron_ingot"
    },
    "pattern": [
      "WoW",
      "WWW",
      " W "
    ],
    "result": {
      "count": 1,
      "id": "shield"
    }
  }, {
    "type": "crafting_special_shielddecoration",
    "category": "misc"
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "chest",
      "-": "shulker_shell"
    },
    "pattern": [
      "-",
      "#",
      "-"
    ],
    "result": {
      "count": 1,
      "id": "shulker_box"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "cobbled_deepslate",
      "S": "silence_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "silence_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "silence_armor_trim_smithing_template"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "paper",
      "wither_skeleton_skull"
    ],
    "result": {
      "count": 1,
      "id": "skull_banner_pattern"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "slime_block"
    ],
    "result": {
      "count": 9,
      "id": "slime_ball"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "slime_ball"
    },
    "pattern": [
      "###",
      "###",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "slime_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#planks",
      "@": "iron_ingot"
    },
    "pattern": [
      "@@",
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "smithing_table"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#logs",
      "X": "furnace"
    },
    "pattern": [
      " # ",
      "#X#",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "smoker"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "basalt",
    "result": {
      "id": "smooth_basalt"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "quartz_block",
    "result": {
      "id": "smooth_quartz"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "smooth_quartz"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "smooth_quartz_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "smooth_quartz",
    "result": {
      "count": 2,
      "id": "smooth_quartz_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "smooth_quartz"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "smooth_quartz_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "smooth_quartz",
    "result": {
      "count": 1,
      "id": "smooth_quartz_stairs"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "red_sandstone",
    "result": {
      "id": "smooth_red_sandstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "smooth_red_sandstone"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "smooth_red_sandstone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "smooth_red_sandstone",
    "result": {
      "count": 2,
      "id": "smooth_red_sandstone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "smooth_red_sandstone"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "smooth_red_sandstone_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "smooth_red_sandstone",
    "result": {
      "count": 1,
      "id": "smooth_red_sandstone_stairs"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "sandstone",
    "result": {
      "id": "smooth_sandstone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "smooth_sandstone"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "smooth_sandstone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "smooth_sandstone",
    "result": {
      "count": 2,
      "id": "smooth_sandstone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "smooth_sandstone"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "smooth_sandstone_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "smooth_sandstone",
    "result": {
      "count": 1,
      "id": "smooth_sandstone_stairs"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "stone",
    "result": {
      "id": "smooth_stone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "smooth_stone"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "smooth_stone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "smooth_stone",
    "result": {
      "count": 2,
      "id": "smooth_stone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "blackstone",
      "S": "snout_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "snout_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "snout_armor_trim_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "snow_block"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "snow"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "snowball"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "snow_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "#soul_fire_base_blocks",
      "L": "#logs",
      "S": "stick"
    },
    "pattern": [
      " S ",
      "S#S",
      "LLL"
    ],
    "result": {
      "count": 1,
      "id": "soul_campfire"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "soul_torch",
      "X": "iron_nugget"
    },
    "pattern": [
      "XXX",
      "X#X",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "soul_lantern"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "stick",
      "S": "#soul_fire_base_blocks",
      "X": [
        "coal",
        "charcoal"
      ]
    },
    "pattern": [
      "X",
      "#",
      "S"
    ],
    "result": {
      "count": 4,
      "id": "soul_torch"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "glowstone_dust",
      "X": "arrow"
    },
    "pattern": [
      " # ",
      "#X#",
      " # "
    ],
    "result": {
      "count": 2,
      "id": "spectral_arrow"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "purpur_block",
      "S": "spire_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "spire_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "spire_armor_trim_smithing_template"
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.15,
    "ingredient": "wet_sponge",
    "result": {
      "id": "sponge"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "boat",
    "key": {
      "#": "spruce_planks"
    },
    "pattern": [
      "# #",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "spruce_boat"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "spruce_planks"
    ],
    "result": {
      "count": 1,
      "id": "spruce_button"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "chest_boat",
    "ingredients": [
      "chest",
      "spruce_boat"
    ],
    "result": {
      "count": 1,
      "id": "spruce_chest_boat"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "spruce_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "spruce_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "spruce_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "spruce_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "spruce_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "spruce_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_spruce_log",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "spruce_hanging_sign"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#spruce_logs"
    ],
    "result": {
      "count": 4,
      "id": "spruce_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "spruce_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "spruce_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "spruce_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "spruce_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "spruce_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "spruce_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "spruce_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "spruce_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "spruce_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "spruce_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "spruce_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "spruce_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "amethyst_shard",
      "X": "copper_ingot"
    },
    "pattern": [
      " # ",
      " X ",
      " X "
    ],
    "result": {
      "count": 1,
      "id": "spyglass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "sticks",
    "key": {
      "#": "#planks"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 4,
      "id": "stick"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "P": "piston",
      "S": "slime_ball"
    },
    "pattern": [
      "S",
      "P"
    ],
    "result": {
      "count": 1,
      "id": "sticky_piston"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "sticks",
    "key": {
      "#": "bamboo"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "stick"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "cobblestone",
    "result": {
      "id": "stone"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "stone",
      "I": "iron_ingot"
    },
    "pattern": [
      " I ",
      "###"
    ],
    "result": {
      "count": 1,
      "id": "stonecutter"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#stone_tool_materials"
    },
    "pattern": [
      "XX",
      "X#",
      " #"
    ],
    "result": {
      "count": 1,
      "id": "stone_axe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "stone"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "stone_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "stone",
    "result": {
      "count": 1,
      "id": "stone_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "stone_bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "stone_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "stone_bricks",
    "result": {
      "count": 2,
      "id": "stone_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "stone",
    "result": {
      "count": 2,
      "id": "stone_brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "stone_bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "stone_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "stone_bricks",
    "result": {
      "count": 1,
      "id": "stone_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "stone",
    "result": {
      "count": 1,
      "id": "stone_brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "stone_bricks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "stone_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "stone",
    "result": {
      "count": 1,
      "id": "stone_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "stone_bricks",
    "result": {
      "count": 1,
      "id": "stone_brick_wall"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "ingredients": [
      "stone"
    ],
    "result": {
      "count": 1,
      "id": "stone_button"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#stone_tool_materials"
    },
    "pattern": [
      "XX",
      " #",
      " #"
    ],
    "result": {
      "count": 1,
      "id": "stone_hoe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#stone_tool_materials"
    },
    "pattern": [
      "XXX",
      " # ",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "stone_pickaxe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "stone"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "stone_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#stone_tool_materials"
    },
    "pattern": [
      "X",
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "stone_shovel"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "stone"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "stone_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "stone",
    "result": {
      "count": 2,
      "id": "stone_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "stone"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "stone_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "stone",
    "result": {
      "count": 1,
      "id": "stone_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#stone_tool_materials"
    },
    "pattern": [
      "X",
      "X",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "stone_sword"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "stripped_acacia_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "stripped_acacia_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "stripped_birch_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "stripped_birch_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "stripped_cherry_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "stripped_cherry_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "stripped_crimson_stem"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "stripped_crimson_hyphae"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "stripped_dark_oak_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "stripped_dark_oak_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "stripped_jungle_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "stripped_jungle_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "stripped_mangrove_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "stripped_mangrove_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "stripped_oak_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "stripped_oak_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "stripped_pale_oak_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "stripped_pale_oak_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "stripped_spruce_log"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "stripped_spruce_wood"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "stripped_warped_stem"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "stripped_warped_hyphae"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "sugar",
    "ingredients": [
      "honey_bottle"
    ],
    "result": {
      "count": 3,
      "id": "sugar"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "sugar",
    "ingredients": [
      "sugar_cane"
    ],
    "result": {
      "count": 1,
      "id": "sugar"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "allium"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 60,
            "id": "fire_resistance"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "azure_bluet"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 220,
            "id": "blindness"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "blue_orchid"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 7,
            "id": "saturation"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "closed_eyeblossom"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 140,
            "id": "nausea"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "cornflower"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 100,
            "id": "jump_boost"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "dandelion"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 7,
            "id": "saturation"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "lily_of_the_valley"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 220,
            "id": "poison"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "open_eyeblossom"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 220,
            "id": "blindness"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "orange_tulip"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 140,
            "id": "weakness"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "oxeye_daisy"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 140,
            "id": "regeneration"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "pink_tulip"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 140,
            "id": "weakness"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "poppy"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 100,
            "id": "night_vision"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "red_tulip"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 140,
            "id": "weakness"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "torchflower"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 100,
            "id": "night_vision"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "white_tulip"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 140,
            "id": "weakness"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "suspicious_stew",
    "ingredients": [
      "bowl",
      "brown_mushroom",
      "red_mushroom",
      "wither_rose"
    ],
    "result": {
      "components": {
        "suspicious_stew_effects": [
          {
            "duration": 140,
            "id": "wither"
          }
        ]
      },
      "count": 1,
      "id": "suspicious_stew"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "H": "hay_block",
      "R": "redstone"
    },
    "pattern": [
      " R ",
      "RHR",
      " R "
    ],
    "result": {
      "count": 1,
      "id": "target"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.35,
    "ingredient": "clay",
    "result": {
      "id": "terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "prismarine",
      "S": "tide_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "tide_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "tide_armor_trim_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "G": "glass",
      "S": "amethyst_shard"
    },
    "pattern": [
      " S ",
      "SGS",
      " S "
    ],
    "result": {
      "count": 2,
      "id": "tinted_glass"
    }
  }, {
    "type": "crafting_special_tippedarrow",
    "category": "misc"
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": [
        "sand",
        "red_sand"
      ],
      "X": "gunpowder"
    },
    "pattern": [
      "X#X",
      "#X#",
      "X#X"
    ],
    "result": {
      "count": 1,
      "id": "tnt"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "tnt",
      "minecart"
    ],
    "result": {
      "count": 1,
      "id": "tnt_minecart"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "stick",
      "X": [
        "coal",
        "charcoal"
      ]
    },
    "pattern": [
      "X",
      "#"
    ],
    "result": {
      "count": 4,
      "id": "torch"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "ingredients": [
      "chest",
      "tripwire_hook"
    ],
    "result": {
      "count": 1,
      "id": "trapped_chest"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "#": "#planks",
      "I": "iron_ingot",
      "S": "stick"
    },
    "pattern": [
      "I",
      "S",
      "#"
    ],
    "result": {
      "count": 2,
      "id": "tripwire_hook"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "S": "polished_tuff"
    },
    "pattern": [
      "SS",
      "SS"
    ],
    "result": {
      "count": 4,
      "id": "tuff_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_tuff",
    "result": {
      "count": 1,
      "id": "tuff_bricks"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 1,
      "id": "tuff_bricks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "tuff_bricks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "tuff_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_tuff",
    "result": {
      "count": 2,
      "id": "tuff_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff_bricks",
    "result": {
      "count": 2,
      "id": "tuff_brick_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 2,
      "id": "tuff_brick_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "tuff_bricks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "tuff_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_tuff",
    "result": {
      "count": 1,
      "id": "tuff_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff_bricks",
    "result": {
      "count": 1,
      "id": "tuff_brick_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 1,
      "id": "tuff_brick_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "tuff_bricks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "tuff_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "polished_tuff",
    "result": {
      "count": 1,
      "id": "tuff_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff_bricks",
    "result": {
      "count": 1,
      "id": "tuff_brick_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 1,
      "id": "tuff_brick_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "tuff"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "tuff_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 2,
      "id": "tuff_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "tuff"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "tuff_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 1,
      "id": "tuff_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "tuff"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "tuff_wall"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "tuff",
    "result": {
      "count": 1,
      "id": "tuff_wall"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "turtle_scute"
    },
    "pattern": [
      "XXX",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "turtle_helmet"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "cobblestone",
      "S": "vex_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "vex_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "vex_armor_trim_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "cobbled_deepslate",
      "S": "ward_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "ward_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "ward_armor_trim_smithing_template"
  }, {
    "type": "crafting_shapeless",
    "category": "redstone",
    "group": "wooden_button",
    "ingredients": [
      "warped_planks"
    ],
    "result": {
      "count": 1,
      "id": "warped_button"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_door",
    "key": {
      "#": "warped_planks"
    },
    "pattern": [
      "##",
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "warped_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_fence",
    "key": {
      "#": "stick",
      "W": "warped_planks"
    },
    "pattern": [
      "W#W",
      "W#W"
    ],
    "result": {
      "count": 3,
      "id": "warped_fence"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_fence_gate",
    "key": {
      "#": "stick",
      "W": "warped_planks"
    },
    "pattern": [
      "#W#",
      "#W#"
    ],
    "result": {
      "count": 1,
      "id": "warped_fence_gate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "fishing_rod",
      "X": "warped_fungus"
    },
    "pattern": [
      "# ",
      " X"
    ],
    "result": {
      "count": 1,
      "id": "warped_fungus_on_a_stick"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "hanging_sign",
    "key": {
      "#": "stripped_warped_stem",
      "X": "chain"
    },
    "pattern": [
      "X X",
      "###",
      "###"
    ],
    "result": {
      "count": 6,
      "id": "warped_hanging_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "bark",
    "key": {
      "#": "warped_stem"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 3,
      "id": "warped_hyphae"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "planks",
    "ingredients": [
      "#warped_stems"
    ],
    "result": {
      "count": 4,
      "id": "warped_planks"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_pressure_plate",
    "key": {
      "#": "warped_planks"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 1,
      "id": "warped_pressure_plate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "wooden_sign",
    "key": {
      "#": "warped_planks",
      "X": "stick"
    },
    "pattern": [
      "###",
      "###",
      " X "
    ],
    "result": {
      "count": 3,
      "id": "warped_sign"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_slab",
    "key": {
      "#": "warped_planks"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "warped_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "wooden_stairs",
    "key": {
      "#": "warped_planks"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "warped_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "group": "wooden_trapdoor",
    "key": {
      "#": "warped_planks"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "warped_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_cut_copper_chiseled",
    "key": {
      "#": "waxed_cut_copper_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "waxed_chiseled_copper"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_chiseled_copper",
    "ingredients": [
      "chiseled_copper",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_copper_block",
    "result": {
      "count": 4,
      "id": "waxed_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_cut_copper",
    "result": {
      "count": 1,
      "id": "waxed_chiseled_copper"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_copper_block",
    "ingredients": [
      "copper_block",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_copper_block"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "B": "blaze_rod",
      "C": "waxed_copper_block",
      "R": "redstone"
    },
    "pattern": [
      " C ",
      "CBC",
      " R "
    ],
    "result": {
      "count": 4,
      "id": "waxed_copper_bulb"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_copper_bulb",
    "ingredients": [
      "copper_bulb",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_copper_bulb"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_copper_door",
    "ingredients": [
      "copper_door",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_copper_door"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "M": "waxed_copper_block"
    },
    "pattern": [
      " M ",
      "M M",
      " M "
    ],
    "result": {
      "count": 4,
      "id": "waxed_copper_grate"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_copper_grate",
    "ingredients": [
      "copper_grate",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_copper_grate"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_copper_block",
    "result": {
      "count": 4,
      "id": "waxed_copper_grate"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_copper_trapdoor",
    "ingredients": [
      "copper_trapdoor",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_copper_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_cut_copper",
    "key": {
      "#": "waxed_copper_block"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "waxed_cut_copper"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_cut_copper",
    "ingredients": [
      "cut_copper",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_cut_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_copper_block",
    "result": {
      "count": 4,
      "id": "waxed_cut_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_cut_copper_slab",
    "key": {
      "#": "waxed_cut_copper"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "waxed_cut_copper_slab"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_cut_copper_slab",
    "ingredients": [
      "cut_copper_slab",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_copper_block",
    "result": {
      "count": 8,
      "id": "waxed_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_cut_copper",
    "result": {
      "count": 2,
      "id": "waxed_cut_copper_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_cut_copper_stairs",
    "key": {
      "#": "waxed_cut_copper"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "waxed_cut_copper_stairs"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_cut_copper_stairs",
    "ingredients": [
      "cut_copper_stairs",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_copper_block",
    "result": {
      "count": 4,
      "id": "waxed_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_cut_copper",
    "result": {
      "count": 1,
      "id": "waxed_cut_copper_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_exposed_cut_copper_chiseled",
    "key": {
      "#": "waxed_exposed_cut_copper_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "waxed_exposed_chiseled_copper"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_exposed_chiseled_copper",
    "ingredients": [
      "exposed_chiseled_copper",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_exposed_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_exposed_copper",
    "result": {
      "count": 4,
      "id": "waxed_exposed_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_exposed_cut_copper",
    "result": {
      "count": 1,
      "id": "waxed_exposed_chiseled_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "B": "blaze_rod",
      "C": "waxed_exposed_copper",
      "R": "redstone"
    },
    "pattern": [
      " C ",
      "CBC",
      " R "
    ],
    "result": {
      "count": 4,
      "id": "waxed_exposed_copper_bulb"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_exposed_copper_bulb",
    "ingredients": [
      "exposed_copper_bulb",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_exposed_copper_bulb"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_exposed_copper_door",
    "ingredients": [
      "exposed_copper_door",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_exposed_copper_door"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_exposed_copper",
    "ingredients": [
      "exposed_copper",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_exposed_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "M": "waxed_exposed_copper"
    },
    "pattern": [
      " M ",
      "M M",
      " M "
    ],
    "result": {
      "count": 4,
      "id": "waxed_exposed_copper_grate"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_exposed_copper_grate",
    "ingredients": [
      "exposed_copper_grate",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_exposed_copper_grate"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_exposed_copper",
    "result": {
      "count": 4,
      "id": "waxed_exposed_copper_grate"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_exposed_copper_trapdoor",
    "ingredients": [
      "exposed_copper_trapdoor",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_exposed_copper_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_exposed_cut_copper",
    "key": {
      "#": "waxed_exposed_copper"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "waxed_exposed_cut_copper"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_exposed_cut_copper",
    "ingredients": [
      "exposed_cut_copper",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_exposed_cut_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_exposed_copper",
    "result": {
      "count": 4,
      "id": "waxed_exposed_cut_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_exposed_cut_copper_slab",
    "key": {
      "#": "waxed_exposed_cut_copper"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "waxed_exposed_cut_copper_slab"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_exposed_cut_copper_slab",
    "ingredients": [
      "exposed_cut_copper_slab",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_exposed_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_exposed_copper",
    "result": {
      "count": 8,
      "id": "waxed_exposed_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_exposed_cut_copper",
    "result": {
      "count": 2,
      "id": "waxed_exposed_cut_copper_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_exposed_cut_copper_stairs",
    "key": {
      "#": "waxed_exposed_cut_copper"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "waxed_exposed_cut_copper_stairs"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_exposed_cut_copper_stairs",
    "ingredients": [
      "exposed_cut_copper_stairs",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_exposed_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_exposed_copper",
    "result": {
      "count": 4,
      "id": "waxed_exposed_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_exposed_cut_copper",
    "result": {
      "count": 1,
      "id": "waxed_exposed_cut_copper_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_oxidized_cut_copper_chiseled",
    "key": {
      "#": "waxed_oxidized_cut_copper_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "waxed_oxidized_chiseled_copper"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_oxidized_chiseled_copper",
    "ingredients": [
      "oxidized_chiseled_copper",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_oxidized_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_oxidized_copper",
    "result": {
      "count": 4,
      "id": "waxed_oxidized_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_oxidized_cut_copper",
    "result": {
      "count": 1,
      "id": "waxed_oxidized_chiseled_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "B": "blaze_rod",
      "C": "waxed_oxidized_copper",
      "R": "redstone"
    },
    "pattern": [
      " C ",
      "CBC",
      " R "
    ],
    "result": {
      "count": 4,
      "id": "waxed_oxidized_copper_bulb"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_oxidized_copper_bulb",
    "ingredients": [
      "oxidized_copper_bulb",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_oxidized_copper_bulb"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_oxidized_copper_door",
    "ingredients": [
      "oxidized_copper_door",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_oxidized_copper_door"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_oxidized_copper",
    "ingredients": [
      "oxidized_copper",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_oxidized_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "M": "waxed_oxidized_copper"
    },
    "pattern": [
      " M ",
      "M M",
      " M "
    ],
    "result": {
      "count": 4,
      "id": "waxed_oxidized_copper_grate"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_oxidized_copper_grate",
    "ingredients": [
      "oxidized_copper_grate",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_oxidized_copper_grate"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_oxidized_copper",
    "result": {
      "count": 4,
      "id": "waxed_oxidized_copper_grate"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_oxidized_copper_trapdoor",
    "ingredients": [
      "oxidized_copper_trapdoor",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_oxidized_copper_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_oxidized_cut_copper",
    "key": {
      "#": "waxed_oxidized_copper"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "waxed_oxidized_cut_copper"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_oxidized_cut_copper",
    "ingredients": [
      "oxidized_cut_copper",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_oxidized_cut_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_oxidized_copper",
    "result": {
      "count": 4,
      "id": "waxed_oxidized_cut_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_oxidized_cut_copper_slab",
    "key": {
      "#": "waxed_oxidized_cut_copper"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "waxed_oxidized_cut_copper_slab"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_oxidized_cut_copper_slab",
    "ingredients": [
      "oxidized_cut_copper_slab",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_oxidized_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_oxidized_copper",
    "result": {
      "count": 8,
      "id": "waxed_oxidized_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_oxidized_cut_copper",
    "result": {
      "count": 2,
      "id": "waxed_oxidized_cut_copper_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_oxidized_cut_copper_stairs",
    "key": {
      "#": "waxed_oxidized_cut_copper"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "waxed_oxidized_cut_copper_stairs"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_oxidized_cut_copper_stairs",
    "ingredients": [
      "oxidized_cut_copper_stairs",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_oxidized_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_oxidized_copper",
    "result": {
      "count": 4,
      "id": "waxed_oxidized_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_oxidized_cut_copper",
    "result": {
      "count": 1,
      "id": "waxed_oxidized_cut_copper_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_weathered_cut_copper_chiseled",
    "key": {
      "#": "waxed_weathered_cut_copper_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "waxed_weathered_chiseled_copper"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_weathered_chiseled_copper",
    "ingredients": [
      "weathered_chiseled_copper",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_weathered_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_weathered_copper",
    "result": {
      "count": 4,
      "id": "waxed_weathered_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_weathered_cut_copper",
    "result": {
      "count": 1,
      "id": "waxed_weathered_chiseled_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "B": "blaze_rod",
      "C": "waxed_weathered_copper",
      "R": "redstone"
    },
    "pattern": [
      " C ",
      "CBC",
      " R "
    ],
    "result": {
      "count": 4,
      "id": "waxed_weathered_copper_bulb"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_weathered_copper_bulb",
    "ingredients": [
      "weathered_copper_bulb",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_weathered_copper_bulb"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_weathered_copper_door",
    "ingredients": [
      "weathered_copper_door",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_weathered_copper_door"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_weathered_copper",
    "ingredients": [
      "weathered_copper",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_weathered_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "M": "waxed_weathered_copper"
    },
    "pattern": [
      " M ",
      "M M",
      " M "
    ],
    "result": {
      "count": 4,
      "id": "waxed_weathered_copper_grate"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_weathered_copper_grate",
    "ingredients": [
      "weathered_copper_grate",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_weathered_copper_grate"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_weathered_copper",
    "result": {
      "count": 4,
      "id": "waxed_weathered_copper_grate"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_weathered_copper_trapdoor",
    "ingredients": [
      "weathered_copper_trapdoor",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_weathered_copper_trapdoor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_weathered_cut_copper",
    "key": {
      "#": "waxed_weathered_copper"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "waxed_weathered_cut_copper"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_weathered_cut_copper",
    "ingredients": [
      "weathered_cut_copper",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_weathered_cut_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_weathered_copper",
    "result": {
      "count": 4,
      "id": "waxed_weathered_cut_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_weathered_cut_copper_slab",
    "key": {
      "#": "waxed_weathered_cut_copper"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "waxed_weathered_cut_copper_slab"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_weathered_cut_copper_slab",
    "ingredients": [
      "weathered_cut_copper_slab",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_weathered_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_weathered_copper",
    "result": {
      "count": 8,
      "id": "waxed_weathered_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_weathered_cut_copper",
    "result": {
      "count": 2,
      "id": "waxed_weathered_cut_copper_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "waxed_weathered_cut_copper_stairs",
    "key": {
      "#": "waxed_weathered_cut_copper"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "waxed_weathered_cut_copper_stairs"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "waxed_weathered_cut_copper_stairs",
    "ingredients": [
      "weathered_cut_copper_stairs",
      "honeycomb"
    ],
    "result": {
      "count": 1,
      "id": "waxed_weathered_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_weathered_copper",
    "result": {
      "count": 4,
      "id": "waxed_weathered_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "waxed_weathered_cut_copper",
    "result": {
      "count": 1,
      "id": "waxed_weathered_cut_copper_stairs"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "terracotta",
      "S": "wayfinder_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "wayfinder_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "wayfinder_armor_trim_smithing_template"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "weathered_cut_copper_slab"
    },
    "pattern": [
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "weathered_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "weathered_copper",
    "result": {
      "count": 4,
      "id": "weathered_chiseled_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "weathered_cut_copper",
    "result": {
      "count": 1,
      "id": "weathered_chiseled_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "redstone",
    "key": {
      "B": "blaze_rod",
      "C": "weathered_copper",
      "R": "redstone"
    },
    "pattern": [
      " C ",
      "CBC",
      " R "
    ],
    "result": {
      "count": 4,
      "id": "weathered_copper_bulb"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "M": "weathered_copper"
    },
    "pattern": [
      " M ",
      "M M",
      " M "
    ],
    "result": {
      "count": 4,
      "id": "weathered_copper_grate"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "weathered_copper",
    "result": {
      "count": 4,
      "id": "weathered_copper_grate"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "weathered_copper"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 4,
      "id": "weathered_cut_copper"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "weathered_copper",
    "result": {
      "count": 4,
      "id": "weathered_cut_copper"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "weathered_cut_copper"
    },
    "pattern": [
      "###"
    ],
    "result": {
      "count": 6,
      "id": "weathered_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "weathered_copper",
    "result": {
      "count": 8,
      "id": "weathered_cut_copper_slab"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "weathered_cut_copper",
    "result": {
      "count": 2,
      "id": "weathered_cut_copper_slab"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "weathered_cut_copper"
    },
    "pattern": [
      "#  ",
      "## ",
      "###"
    ],
    "result": {
      "count": 4,
      "id": "weathered_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "weathered_copper",
    "result": {
      "count": 4,
      "id": "weathered_cut_copper_stairs"
    }
  }, {
    "type": "stonecutting",
    "ingredient": "weathered_cut_copper",
    "result": {
      "count": 1,
      "id": "weathered_cut_copper_stairs"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "hay_block"
    ],
    "result": {
      "count": 9,
      "id": "wheat"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "white_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "white_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "white_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "white_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "white_dye",
    "result": "white_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "white_dye"
    ],
    "result": {
      "count": 1,
      "id": "white_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "white_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "white_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "white_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "white_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "white_dye",
    "ingredients": [
      "bone_meal"
    ],
    "result": {
      "count": 1,
      "id": "white_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "white_dye",
    "ingredients": [
      "lily_of_the_valley"
    ],
    "result": {
      "count": 1,
      "id": "white_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "white_terracotta",
    "result": {
      "id": "white_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "white_dye",
    "result": "white_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "white_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "white_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "white_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "white_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "white_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "white_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "white_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "white_terracotta"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "key": {
      "#": "string"
    },
    "pattern": [
      "##",
      "##"
    ],
    "result": {
      "count": 1,
      "id": "white_wool"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "key": {
      "#": "diamond",
      "C": "mossy_cobblestone",
      "S": "wild_armor_trim_smithing_template"
    },
    "pattern": [
      "#S#",
      "#C#",
      "###"
    ],
    "result": {
      "count": 2,
      "id": "wild_armor_trim_smithing_template"
    }
  }, {
    "type": "smithing_trim",
    "addition": "#trim_materials",
    "base": "#trimmable_armor",
    "template": "wild_armor_trim_smithing_template"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "breeze_rod"
    ],
    "result": {
      "count": 4,
      "id": "wind_charge"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "X": "armadillo_scute"
    },
    "pattern": [
      "X  ",
      "XXX",
      "X X"
    ],
    "result": {
      "count": 1,
      "id": "wolf_armor"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#wooden_tool_materials"
    },
    "pattern": [
      "XX",
      "X#",
      " #"
    ],
    "result": {
      "count": 1,
      "id": "wooden_axe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#wooden_tool_materials"
    },
    "pattern": [
      "XX",
      " #",
      " #"
    ],
    "result": {
      "count": 1,
      "id": "wooden_hoe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#wooden_tool_materials"
    },
    "pattern": [
      "XXX",
      " # ",
      " # "
    ],
    "result": {
      "count": 1,
      "id": "wooden_pickaxe"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#wooden_tool_materials"
    },
    "pattern": [
      "X",
      "#",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "wooden_shovel"
    }
  }, {
    "type": "crafting_shaped",
    "category": "equipment",
    "key": {
      "#": "stick",
      "X": "#wooden_tool_materials"
    },
    "pattern": [
      "X",
      "X",
      "#"
    ],
    "result": {
      "count": 1,
      "id": "wooden_sword"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "ingredients": [
      "book",
      "ink_sac",
      "feather"
    ],
    "result": {
      "count": 1,
      "id": "writable_book"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "banner",
    "key": {
      "#": "yellow_wool",
      "|": "stick"
    },
    "pattern": [
      "###",
      "###",
      " | "
    ],
    "result": {
      "count": 1,
      "id": "yellow_banner"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "bed",
    "key": {
      "#": "yellow_wool",
      "X": "#planks"
    },
    "pattern": [
      "###",
      "XXX"
    ],
    "result": {
      "count": 1,
      "id": "yellow_bed"
    }
  }, {
    "type": "crafting_transmute",
    "category": "equipment",
    "group": "bundle_dye",
    "input": "#bundles",
    "material": "yellow_dye",
    "result": "yellow_bundle"
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "dyed_candle",
    "ingredients": [
      "candle",
      "yellow_dye"
    ],
    "result": {
      "count": 1,
      "id": "yellow_candle"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "carpet",
    "key": {
      "#": "yellow_wool"
    },
    "pattern": [
      "##"
    ],
    "result": {
      "count": 3,
      "id": "yellow_carpet"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "building",
    "group": "concrete_powder",
    "ingredients": [
      "yellow_dye",
      "sand",
      "sand",
      "sand",
      "sand",
      "gravel",
      "gravel",
      "gravel",
      "gravel"
    ],
    "result": {
      "count": 8,
      "id": "yellow_concrete_powder"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "yellow_dye",
    "ingredients": [
      "dandelion"
    ],
    "result": {
      "count": 1,
      "id": "yellow_dye"
    }
  }, {
    "type": "crafting_shapeless",
    "category": "misc",
    "group": "yellow_dye",
    "ingredients": [
      "sunflower"
    ],
    "result": {
      "count": 2,
      "id": "yellow_dye"
    }
  }, {
    "type": "smelting",
    "category": "blocks",
    "cookingtime": 200,
    "experience": 0.1,
    "ingredient": "yellow_terracotta",
    "result": {
      "id": "yellow_glazed_terracotta"
    }
  }, {
    "type": "crafting_transmute",
    "category": "misc",
    "group": "shulker_box_dye",
    "input": "#shulker_boxes",
    "material": "yellow_dye",
    "result": "yellow_shulker_box"
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_glass",
    "key": {
      "#": "glass",
      "X": "yellow_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "yellow_stained_glass"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "yellow_stained_glass"
    },
    "pattern": [
      "###",
      "###"
    ],
    "result": {
      "count": 16,
      "id": "yellow_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "misc",
    "group": "stained_glass_pane",
    "key": {
      "#": "glass_pane",
      "$": "yellow_dye"
    },
    "pattern": [
      "###",
      "#$#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "yellow_stained_glass_pane"
    }
  }, {
    "type": "crafting_shaped",
    "category": "building",
    "group": "stained_terracotta",
    "key": {
      "#": "terracotta",
      "X": "yellow_dye"
    },
    "pattern": [
      "###",
      "#X#",
      "###"
    ],
    "result": {
      "count": 8,
      "id": "yellow_terracotta"
    }
  }];

  // src/view/connection/recipe.ts
  var recipes = [];
  recipeStructures.forEach((recipe) => {
    switch (recipe.type) {
      case "smithing_trim":
      case "crafting_special_armordye":
      case "crafting_special_bannerduplicate":
      case "crafting_special_bookcloning":
      case "crafting_decorated_pot":
      case "crafting_special_firework_rocket":
      case "crafting_special_firework_star":
      case "crafting_special_firework_star_fade":
      case "crafting_special_mapcloning":
      case "crafting_special_mapextending":
      case "crafting_special_repairitem":
      case "crafting_special_shielddecoration":
      case "crafting_special_tippedarrow":
        return;
      case "crafting_shapeless":
        {
          const createConnection = (lastIngredient) => {
            recipes.push({
              ingredients: [...count2.toItemCount(), {
                id: lastIngredient,
                count: 1
              }],
              result: recipe.result,
              process: recipe.ingredients.length > 4 ? "craftingTable" : "inventoryCrafting"
            });
          };
          const count2 = new Count();
          recipe.ingredients.forEach((ingredient, index) => {
            if (index === recipe.ingredients.length - 1) {
              if (typeof ingredient === "object") {
                ingredient.forEach(createConnection);
                return;
              }
              if (isItem(ingredient)) {
                createConnection(ingredient);
              } else {
                tagToItems(ingredient).forEach(createConnection);
              }
              return;
            }
            if (typeof ingredient === "object") {
              console.log(recipe);
              throw "shapeless option overflow";
            }
            if (isItem(ingredient)) {
              count2.add(ingredient);
            } else {
              throw "tag to early in crafting_shapeless";
            }
          });
        }
        return;
      case "crafting_shaped":
        {
          const count2 = new Count();
          let craftingTable = false;
          if (recipe.pattern.length === 3) craftingTable = true;
          recipe.pattern.forEach((layer) => {
            const row = layer.split("");
            if (row.length === 3) craftingTable = true;
            row.forEach((letter) => {
              if (letter === " ") return;
              count2.add(letter);
            });
          });
          const possibleIngredients = Object.entries(recipe.key);
          const countIngredients = (ingredients, index) => {
            if (index === possibleIngredients.length) {
              recipes.push({
                ingredients: count2.mappedItemCount(ingredients),
                result: recipe.result,
                process: craftingTable ? "craftingTable" : "inventoryCrafting"
              });
              return;
            }
            const [from, to] = possibleIngredients[index];
            if (Array.isArray(to)) {
              to.forEach((element) => {
                countIngredients([...ingredients, [possibleIngredients[index][0], element]], index + 1);
              });
              return;
            }
            if (isItem(to)) {
              ingredients.push([from, to]);
              countIngredients(ingredients, index + 1);
            } else {
              tagToItems(to).forEach((element) => {
                countIngredients([...ingredients, [possibleIngredients[index][0], element]], index + 1);
              });
            }
          };
          countIngredients([], 0);
        }
        return;
      case "stonecutting":
        recipes.push({
          ingredients: [{
            id: recipe.ingredient,
            count: 1
          }],
          result: recipe.result,
          process: "stoneCutter"
        });
        return;
      case "smelting":
        {
          const createConnection = (ingredient) => {
            recipes.push({
              ingredients: [{
                id: ingredient,
                count: 1
              }],
              result: addCount(recipe.result),
              process: "furnace"
            });
          };
          if (typeof recipe.ingredient === "object") {
            recipe.ingredient.forEach(createConnection);
            return;
          }
          if (isItem(recipe.ingredient)) {
            createConnection(recipe.ingredient);
          } else {
            tagToItems(recipe.ingredient).forEach(createConnection);
          }
        }
        return;
      case "blasting":
        {
          const createConnection = (ingredient) => {
            recipes.push({
              ingredients: [{
                id: ingredient,
                count: 1
              }],
              result: addCount(recipe.result),
              process: "blastFurnace"
            });
          };
          if (typeof recipe.ingredient === "object") {
            recipe.ingredient.forEach(createConnection);
            return;
          }
          createConnection(recipe.ingredient);
        }
        return;
      case "smoking":
        {
          recipes.push({
            ingredients: [{
              id: recipe.ingredient,
              count: 1
            }],
            result: addCount(recipe.result),
            process: "smoker"
          });
        }
        return;
      case "campfire_cooking":
        {
          recipes.push({
            ingredients: [{
              id: recipe.ingredient,
              count: 1
            }],
            result: addCount(recipe.result),
            process: "campfire"
          });
        }
        return;
      case "crafting_transmute":
        {
          tagToItems(recipe.input).forEach((id3) => {
            recipes.push({
              ingredients: [{
                id: id3,
                count: 1
              }, {
                id: recipe.material,
                count: 1
              }],
              result: {
                id: recipe.result,
                count: 1
              },
              process: "inventoryCrafting"
            });
          });
        }
        return;
      default:
        return;
    }
  });

  // src/view/connection/connection.ts
  function addCount({ id: id3, count: count2 }) {
    return {
      id: id3,
      count: count2 === void 0 ? 1 : count2
    };
  }
  var connections = [
    ...Array.from(placement, ([item, block]) => {
      return {
        inputs: [item],
        inputTypes: ["Item"],
        process: "place",
        output: block,
        outputType: "Block"
      };
    }),
    ...useTool.map(([input, tool, output]) => {
      return {
        inputs: [input],
        inputTypes: ["Block"],
        process: tool,
        output,
        outputType: "Block"
      };
    }),
    ...useItem.map(([input, item, output]) => {
      return {
        inputs: [input, item],
        inputTypes: ["Block", "Item"],
        process: "useItem",
        output,
        outputType: "Block"
      };
    }),
    ...recipes.map((recipe) => {
      return {
        inputs: recipe.ingredients.map((ingredient) => ingredient.id),
        inputTypes: Array(recipe.ingredients.length).fill("Item"),
        process: recipe.process,
        output: recipe.result.id,
        outputType: "Item"
      };
    })
  ];

  // src/view/connection/entities.ts
  var entityItemLoot = /* @__PURE__ */ new Map();
  Object.entries(entityLoot).forEach(([key, value]) => {
    let loot = [];
    if ("pools" in value) {
      for (let pool of value.pools) {
        for (let entry of pool.entries) {
          switch (entry.type) {
            case "item":
              {
                loot.push(entry.name);
              }
              continue;
            default:
              {
              }
              continue;
          }
        }
      }
    }
    entityItemLoot.set(key, loot);
  });

  // src/view/connection/variableConnections.ts
  var cookieMap = new CookieMap("break");
  var variableConnections = [...connections];

  // src/view/connection/process.ts
  var Processes = {
    inventoryCrafting: [],
    craftingTable: ["crafting_table"],
    stoneCutter: ["stonecutter"],
    furnace: ["furnace"],
    blastFurnace: ["blast_furnace", "furnace"],
    smoker: ["smoker", "furnace"],
    campfire: ["campfire", "soul_campfire"],
    breakBlock: [],
    place: [],
    useItem: [],
    transform: [],
    killEntity: [],
    lootChest: [],
    axe: ["netherite_axe", "diamond_axe", "golden_axe", "iron_axe", "stone_axe", "wooden_axe"],
    hoe: ["netherite_hoe", "diamond_hoe", "golden_hoe", "iron_hoe", "stone_hoe", "wooden_hoe"]
  };

  // src/view/connection/links.ts
  var links = /* @__PURE__ */ new Map();
  function mirrorLinks(before, after, process, icon2) {
    if (links.get(before) === void 0) links.set(before, { up: [], down: [] });
    links.get(before)?.down.push({
      item: after,
      icon: icon2,
      process
    });
    if (links.get(after) === void 0) links.set(after, { up: [], down: [] });
    links.get(after)?.up.push({
      item: before,
      icon: icon2,
      process
    });
  }
  placement.forEach((placed, item) => {
    mirrorLinks(item, placed, "place", item);
  });
  useTool.forEach(([input, tool, output]) => {
    mirrorLinks(input, output, tool);
  });
  useItem.forEach(([input, item, output]) => {
    mirrorLinks(input, output, "useItem", item);
  });
  recipes.forEach((recipe) => {
    recipe.ingredients.forEach((ingredient, inputIndex) => {
      let icon2 = Processes[recipe.process][0];
      if (icon2 === void 0) {
        if (recipe.ingredients.length > 1) {
          const options = recipe.ingredients.filter((_, id3) => id3 !== inputIndex);
          icon2 = options[Math.floor(Math.random() * options.length)].id;
        }
      }
      mirrorLinks(ingredient.id, recipe.result.id, recipe.process, icon2);
    });
  });
  var cookieMap2 = new CookieMap("break");
  itemNames.forEach((itemName) => {
    cookieMap2.get(itemName).forEach((drop) => {
      mirrorLinks(itemName, drop, "transform");
    });
  });
  blockItemDrops.forEach((items, block) => {
    items.forEach((item) => {
      cookieMap2.get(item).forEach((drop) => {
        mirrorLinks(block, drop, "breakBlock", item);
      });
    });
  });
  chestItemLoot.forEach((items, chest) => {
    items.forEach((item) => {
      cookieMap2.get(item).forEach((drop) => {
        mirrorLinks(chest, drop, "lootChest", item);
      });
    });
  });
  entityItemLoot.forEach((items, entity) => {
    items.forEach((item) => {
      cookieMap2.get(item).forEach((drop) => {
        mirrorLinks(entity, drop, "killEntity", item);
      });
    });
  });
  function addLink(itemName, drop) {
    mirrorLinks(itemName, drop, "transform");
    mirrorLinks(itemName, drop, "breakBlock", itemName);
    blockItemDrops.forEach((items, block) => {
      if (items.includes(drop)) {
        mirrorLinks(block, drop, "breakBlock", itemName);
      }
    });
    chestItemLoot.forEach((items, chest) => {
      if (items.includes(drop)) {
        mirrorLinks(chest, drop, "lootChest", itemName);
      }
    });
    entityItemLoot.forEach((items, entity) => {
      if (items.includes(drop)) {
        mirrorLinks(entity, drop, "killEntity", itemName);
      }
    });
  }
  function removeLink(itemName, drop) {
    let up = links.get(drop)?.up;
    if (up) {
      for (let i = up.length - 1; i >= 0; i--) {
        if (up[i].item === itemName && (up[i].process === "transform" || up[i].process === "breakBlock")) {
          up.splice(i, 1);
        }
      }
    }
    let down = links.get(itemName)?.down;
    if (down) {
      for (let i = down.length - 1; i >= 0; i--) {
        if (down[i].item === drop && (down[i].process === "transform" || down[i].process === "breakBlock")) {
          down.splice(i, 1);
        }
      }
    }
    console.log(links.get(drop)?.up);
  }

  // src/view/tree/connectionTree.ts
  function linkColor(process) {
    switch (process) {
      case "breakBlock":
        return "#00bb00";
      case "transform":
        return "#0000bb";
      case "lootChest":
        return "#bbbb00";
      case "killEntity":
        return "#bb0000";
      default:
        return "";
    }
  }
  function shortestDownToIdTree(rootId, depth) {
    const visited = /* @__PURE__ */ new Set();
    const nodeMap = /* @__PURE__ */ new Map();
    const rootNode = {
      name: rootId,
      children: []
    };
    nodeMap.set(rootId, rootNode);
    visited.add(rootId);
    const queue = [
      { id: rootId, depth, parent: rootNode }
    ];
    while (queue.length > 0) {
      const { id: id3, depth: depth2, parent } = queue.shift();
      if (depth2 === 0) continue;
      links.get(id3)?.down.forEach(({ item, icon: icon2, process }) => {
        if (visited.has(item)) return;
        visited.add(item);
        let processId = Processes[process][0];
        if (processId === void 0) processId = icon2;
        const childNode = {
          name: item,
          processId,
          processName: process,
          children: [],
          color: linkColor(process)
        };
        if (parent.children === void 0) parent.children = [];
        parent.children.push(childNode);
        nodeMap.set(item, childNode);
        queue.push({ id: item, depth: depth2 - 1, parent: childNode });
      });
    }
    return rootNode.children;
  }
  function shortestUpToIdTree(rootId, depth) {
    const visited = /* @__PURE__ */ new Set();
    const nodeMap = /* @__PURE__ */ new Map();
    const rootNode = {
      name: rootId,
      children: []
    };
    nodeMap.set(rootId, rootNode);
    visited.add(rootId);
    const queue = [
      { id: rootId, depth, parent: rootNode }
    ];
    while (queue.length > 0) {
      const { id: id3, depth: depth2, parent } = queue.shift();
      if (depth2 === 0) continue;
      links.get(id3)?.up.forEach(({ item, icon: icon2, process }) => {
        if (visited.has(item)) return;
        visited.add(item);
        let processId = Processes[process][0];
        if (processId === void 0) processId = icon2;
        const childNode = {
          name: item,
          processId,
          processName: process,
          children: [],
          color: linkColor(process)
        };
        if (parent.children === void 0) parent.children = [];
        parent.children.push(childNode);
        nodeMap.set(item, childNode);
        queue.push({ id: item, depth: depth2 - 1, parent: childNode });
      });
    }
    return rootNode.children;
  }

  // src/view/imageName.ts
  function imageName(name) {
    if (isItem(name)) return name;
    if (isBlock(name)) return name;
    if (isEntity(name)) {
      if (isItem(`${name}_spawn_egg`)) return `${name}_spawn_egg`;
      return "armor_stand";
    }
    if (isChest(name)) return "chest";
    return name;
  }

  // src/view/tree/doubleTree.ts
  var doubleTree = class {
    width = 1250;
    height = 530;
    rectWidth = 30;
    rectHeight = 30;
    nodePictureSize = 25;
    linkPictureSize = 15;
    nodeHeightPadding = 40;
    nodeWidthPadding = 5;
    constructor(id3) {
      this.drawGraph(id3);
    }
    drawGraph(id3) {
      if (window.innerWidth < 599) {
        console.log("Screen too narrow. Graph not rendered.");
        return;
      }
      select_default2("#graph").select("svg").remove();
      const svg = select_default2(document.getElementById("graph")).append("svg").attr("width", this.width).attr("height", this.height);
      const depth = getDepth();
      const downG = svg.append("g");
      const downRoot = hierarchy({
        name: id3,
        children: shortestDownToIdTree(id3, depth)
      });
      const downTreeLayout = tree_default().nodeSize([this.rectWidth + this.nodeWidthPadding, this.rectHeight + this.nodeHeightPadding]).separation(() => 1);
      downTreeLayout(downRoot);
      this.updateObjects(downG, downRoot, 1);
      const upG = svg.append("g");
      const upRoot = hierarchy({
        name: id3,
        children: shortestUpToIdTree(id3, depth)
      });
      const upTreeLayout = tree_default().nodeSize([this.rectWidth + this.nodeWidthPadding, this.rectHeight + this.nodeHeightPadding]).separation(() => 1);
      upTreeLayout(upRoot);
      this.updateObjects(upG, upRoot, -1);
      const zoom = zoom_default2().scaleExtent([0.5, 2]).on("zoom", (event) => {
        upG.attr("transform", event.transform);
        downG.attr("transform", event.transform);
      });
      svg.call(zoom);
      svg.call(zoom.transform, identity2.translate(this.width / 2, this.height / 2));
    }
    updateObjects(g, root2, flip) {
      const linkGen = linkVertical().x((d) => d.x + this.rectWidth / 2).y((d) => flip * d.y + this.rectHeight / 2);
      g.selectAll(".link").data(root2.links()).enter().append("path").attr("class", "link").attr("d", (d) => linkGen(d)).style("stroke", (d) => {
        return d.target.data.color ?? "#333333";
      });
      const images = g.selectAll(".link-image").data(root2.links()).enter().append("image").attr("class", "link-image").attr("href", (d) => d.target.data.processId === void 0 ? "" : `assets/${imageName(d.target.data.processId)}.png`).attr("width", this.linkPictureSize).attr("height", this.linkPictureSize).attr("x", (d) => ((d.source.x ?? 0) + (d.target.x ?? 0) + this.rectWidth - this.linkPictureSize) / 2).attr("y", (d) => (flip * ((d.source.y ?? 0) + (d.target.y ?? 0)) + this.rectHeight - this.linkPictureSize) / 2);
      const node = g.selectAll(".node").data(root2.descendants()).enter().append("g").attr("class", "node").attr("transform", (d) => `translate(${d.x ?? 0 - this.rectWidth / 2}, ${flip * (d.y ?? 0)})`);
      node.append("rect").attr("width", this.rectWidth).attr("height", this.rectHeight).attr("fill", "#aaaaaa").attr("stroke", "#555").attr("rx", 6).attr("ry", 6);
      const tooltip = select_default2("#tooltip");
      node.append("image").attr("href", (d) => `assets/${imageName(d.data.name)}.png`).attr("x", this.rectWidth / 2 - this.nodePictureSize / 2).attr("y", this.rectHeight / 2 - this.nodePictureSize / 2).attr("width", this.nodePictureSize).attr("height", this.nodePictureSize).on("click", (event, d) => {
        const searchParams = new URLSearchParams(window.location.search);
        searchParams.set("id", d.data.name);
        history.pushState({ id: d.data.name }, "", `?${searchParams.toString()}`);
        updateId(d.data.name);
        this.drawGraph(d.data.name);
      }).on("mouseover", (event, d) => {
        tooltip.style("opacity", 1).html(idToText(d.data.name)).style("left", event.pageX + 10 + "px").style("top", event.pageY - 20 + "px");
      }).on("mouseout", () => {
        tooltip.style("opacity", 0);
      });
    }
  };

  // node_modules/fuse.js/dist/fuse.mjs
  function isArray(value) {
    return !Array.isArray ? getTag(value) === "[object Array]" : Array.isArray(value);
  }
  var INFINITY = 1 / 0;
  function baseToString(value) {
    if (typeof value == "string") {
      return value;
    }
    let result = value + "";
    return result == "0" && 1 / value == -INFINITY ? "-0" : result;
  }
  function toString(value) {
    return value == null ? "" : baseToString(value);
  }
  function isString(value) {
    return typeof value === "string";
  }
  function isNumber(value) {
    return typeof value === "number";
  }
  function isBoolean(value) {
    return value === true || value === false || isObjectLike(value) && getTag(value) == "[object Boolean]";
  }
  function isObject(value) {
    return typeof value === "object";
  }
  function isObjectLike(value) {
    return isObject(value) && value !== null;
  }
  function isDefined(value) {
    return value !== void 0 && value !== null;
  }
  function isBlank(value) {
    return !value.trim().length;
  }
  function getTag(value) {
    return value == null ? value === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(value);
  }
  var INCORRECT_INDEX_TYPE = "Incorrect 'index' type";
  var LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) => `Invalid value for key ${key}`;
  var PATTERN_LENGTH_TOO_LARGE = (max2) => `Pattern length exceeds max of ${max2}.`;
  var MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;
  var INVALID_KEY_WEIGHT_VALUE = (key) => `Property 'weight' in key '${key}' must be a positive integer`;
  var hasOwn = Object.prototype.hasOwnProperty;
  var KeyStore = class {
    constructor(keys) {
      this._keys = [];
      this._keyMap = {};
      let totalWeight = 0;
      keys.forEach((key) => {
        let obj = createKey(key);
        this._keys.push(obj);
        this._keyMap[obj.id] = obj;
        totalWeight += obj.weight;
      });
      this._keys.forEach((key) => {
        key.weight /= totalWeight;
      });
    }
    get(keyId) {
      return this._keyMap[keyId];
    }
    keys() {
      return this._keys;
    }
    toJSON() {
      return JSON.stringify(this._keys);
    }
  };
  function createKey(key) {
    let path2 = null;
    let id3 = null;
    let src = null;
    let weight = 1;
    let getFn = null;
    if (isString(key) || isArray(key)) {
      src = key;
      path2 = createKeyPath(key);
      id3 = createKeyId(key);
    } else {
      if (!hasOwn.call(key, "name")) {
        throw new Error(MISSING_KEY_PROPERTY("name"));
      }
      const name = key.name;
      src = name;
      if (hasOwn.call(key, "weight")) {
        weight = key.weight;
        if (weight <= 0) {
          throw new Error(INVALID_KEY_WEIGHT_VALUE(name));
        }
      }
      path2 = createKeyPath(name);
      id3 = createKeyId(name);
      getFn = key.getFn;
    }
    return { path: path2, id: id3, weight, src, getFn };
  }
  function createKeyPath(key) {
    return isArray(key) ? key : key.split(".");
  }
  function createKeyId(key) {
    return isArray(key) ? key.join(".") : key;
  }
  function get3(obj, path2) {
    let list = [];
    let arr = false;
    const deepGet = (obj2, path3, index) => {
      if (!isDefined(obj2)) {
        return;
      }
      if (!path3[index]) {
        list.push(obj2);
      } else {
        let key = path3[index];
        const value = obj2[key];
        if (!isDefined(value)) {
          return;
        }
        if (index === path3.length - 1 && (isString(value) || isNumber(value) || isBoolean(value))) {
          list.push(toString(value));
        } else if (isArray(value)) {
          arr = true;
          for (let i = 0, len = value.length; i < len; i += 1) {
            deepGet(value[i], path3, index + 1);
          }
        } else if (path3.length) {
          deepGet(value, path3, index + 1);
        }
      }
    };
    deepGet(obj, isString(path2) ? path2.split(".") : path2, 0);
    return arr ? list : list[0];
  }
  var MatchOptions = {
    // Whether the matches should be included in the result set. When `true`, each record in the result
    // set will include the indices of the matched characters.
    // These can consequently be used for highlighting purposes.
    includeMatches: false,
    // When `true`, the matching function will continue to the end of a search pattern even if
    // a perfect match has already been located in the string.
    findAllMatches: false,
    // Minimum number of characters that must be matched before a result is considered a match
    minMatchCharLength: 1
  };
  var BasicOptions = {
    // When `true`, the algorithm continues searching to the end of the input even if a perfect
    // match is found before the end of the same input.
    isCaseSensitive: false,
    // When `true`, the algorithm will ignore diacritics (accents) in comparisons
    ignoreDiacritics: false,
    // When true, the matching function will continue to the end of a search pattern even if
    includeScore: false,
    // List of properties that will be searched. This also supports nested properties.
    keys: [],
    // Whether to sort the result list, by score
    shouldSort: true,
    // Default sort function: sort by ascending score, ascending index
    sortFn: (a, b) => a.score === b.score ? a.idx < b.idx ? -1 : 1 : a.score < b.score ? -1 : 1
  };
  var FuzzyOptions = {
    // Approximately where in the text is the pattern expected to be found?
    location: 0,
    // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match
    // (of both letters and location), a threshold of '1.0' would match anything.
    threshold: 0.6,
    // Determines how close the match must be to the fuzzy location (specified above).
    // An exact letter match which is 'distance' characters away from the fuzzy location
    // would score as a complete mismatch. A distance of '0' requires the match be at
    // the exact location specified, a threshold of '1000' would require a perfect match
    // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.
    distance: 100
  };
  var AdvancedOptions = {
    // When `true`, it enables the use of unix-like search commands
    useExtendedSearch: false,
    // The get function to use when fetching an object's properties.
    // The default will search nested paths *ie foo.bar.baz*
    getFn: get3,
    // When `true`, search will ignore `location` and `distance`, so it won't matter
    // where in the string the pattern appears.
    // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score
    ignoreLocation: false,
    // When `true`, the calculation for the relevance score (used for sorting) will
    // ignore the field-length norm.
    // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm
    ignoreFieldNorm: false,
    // The weight to determine how much field length norm effects scoring.
    fieldNormWeight: 1
  };
  var Config = {
    ...BasicOptions,
    ...MatchOptions,
    ...FuzzyOptions,
    ...AdvancedOptions
  };
  var SPACE = /[^ ]+/g;
  function norm(weight = 1, mantissa = 3) {
    const cache = /* @__PURE__ */ new Map();
    const m = Math.pow(10, mantissa);
    return {
      get(value) {
        const numTokens = value.match(SPACE).length;
        if (cache.has(numTokens)) {
          return cache.get(numTokens);
        }
        const norm2 = 1 / Math.pow(numTokens, 0.5 * weight);
        const n = parseFloat(Math.round(norm2 * m) / m);
        cache.set(numTokens, n);
        return n;
      },
      clear() {
        cache.clear();
      }
    };
  }
  var FuseIndex = class {
    constructor({
      getFn = Config.getFn,
      fieldNormWeight = Config.fieldNormWeight
    } = {}) {
      this.norm = norm(fieldNormWeight, 3);
      this.getFn = getFn;
      this.isCreated = false;
      this.setIndexRecords();
    }
    setSources(docs = []) {
      this.docs = docs;
    }
    setIndexRecords(records = []) {
      this.records = records;
    }
    setKeys(keys = []) {
      this.keys = keys;
      this._keysMap = {};
      keys.forEach((key, idx) => {
        this._keysMap[key.id] = idx;
      });
    }
    create() {
      if (this.isCreated || !this.docs.length) {
        return;
      }
      this.isCreated = true;
      if (isString(this.docs[0])) {
        this.docs.forEach((doc, docIndex) => {
          this._addString(doc, docIndex);
        });
      } else {
        this.docs.forEach((doc, docIndex) => {
          this._addObject(doc, docIndex);
        });
      }
      this.norm.clear();
    }
    // Adds a doc to the end of the index
    add(doc) {
      const idx = this.size();
      if (isString(doc)) {
        this._addString(doc, idx);
      } else {
        this._addObject(doc, idx);
      }
    }
    // Removes the doc at the specified index of the index
    removeAt(idx) {
      this.records.splice(idx, 1);
      for (let i = idx, len = this.size(); i < len; i += 1) {
        this.records[i].i -= 1;
      }
    }
    getValueForItemAtKeyId(item, keyId) {
      return item[this._keysMap[keyId]];
    }
    size() {
      return this.records.length;
    }
    _addString(doc, docIndex) {
      if (!isDefined(doc) || isBlank(doc)) {
        return;
      }
      let record = {
        v: doc,
        i: docIndex,
        n: this.norm.get(doc)
      };
      this.records.push(record);
    }
    _addObject(doc, docIndex) {
      let record = { i: docIndex, $: {} };
      this.keys.forEach((key, keyIndex) => {
        let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);
        if (!isDefined(value)) {
          return;
        }
        if (isArray(value)) {
          let subRecords = [];
          const stack = [{ nestedArrIndex: -1, value }];
          while (stack.length) {
            const { nestedArrIndex, value: value2 } = stack.pop();
            if (!isDefined(value2)) {
              continue;
            }
            if (isString(value2) && !isBlank(value2)) {
              let subRecord = {
                v: value2,
                i: nestedArrIndex,
                n: this.norm.get(value2)
              };
              subRecords.push(subRecord);
            } else if (isArray(value2)) {
              value2.forEach((item, k) => {
                stack.push({
                  nestedArrIndex: k,
                  value: item
                });
              });
            } else ;
          }
          record.$[keyIndex] = subRecords;
        } else if (isString(value) && !isBlank(value)) {
          let subRecord = {
            v: value,
            n: this.norm.get(value)
          };
          record.$[keyIndex] = subRecord;
        }
      });
      this.records.push(record);
    }
    toJSON() {
      return {
        keys: this.keys,
        records: this.records
      };
    }
  };
  function createIndex(keys, docs, { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}) {
    const myIndex = new FuseIndex({ getFn, fieldNormWeight });
    myIndex.setKeys(keys.map(createKey));
    myIndex.setSources(docs);
    myIndex.create();
    return myIndex;
  }
  function parseIndex(data, { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}) {
    const { keys, records } = data;
    const myIndex = new FuseIndex({ getFn, fieldNormWeight });
    myIndex.setKeys(keys);
    myIndex.setIndexRecords(records);
    return myIndex;
  }
  function computeScore$1(pattern, {
    errors = 0,
    currentLocation = 0,
    expectedLocation = 0,
    distance = Config.distance,
    ignoreLocation = Config.ignoreLocation
  } = {}) {
    const accuracy = errors / pattern.length;
    if (ignoreLocation) {
      return accuracy;
    }
    const proximity = Math.abs(expectedLocation - currentLocation);
    if (!distance) {
      return proximity ? 1 : accuracy;
    }
    return accuracy + proximity / distance;
  }
  function convertMaskToIndices(matchmask = [], minMatchCharLength = Config.minMatchCharLength) {
    let indices = [];
    let start2 = -1;
    let end = -1;
    let i = 0;
    for (let len = matchmask.length; i < len; i += 1) {
      let match = matchmask[i];
      if (match && start2 === -1) {
        start2 = i;
      } else if (!match && start2 !== -1) {
        end = i - 1;
        if (end - start2 + 1 >= minMatchCharLength) {
          indices.push([start2, end]);
        }
        start2 = -1;
      }
    }
    if (matchmask[i - 1] && i - start2 >= minMatchCharLength) {
      indices.push([start2, i - 1]);
    }
    return indices;
  }
  var MAX_BITS = 32;
  function search(text, pattern, patternAlphabet, {
    location = Config.location,
    distance = Config.distance,
    threshold = Config.threshold,
    findAllMatches = Config.findAllMatches,
    minMatchCharLength = Config.minMatchCharLength,
    includeMatches = Config.includeMatches,
    ignoreLocation = Config.ignoreLocation
  } = {}) {
    if (pattern.length > MAX_BITS) {
      throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS));
    }
    const patternLen = pattern.length;
    const textLen = text.length;
    const expectedLocation = Math.max(0, Math.min(location, textLen));
    let currentThreshold = threshold;
    let bestLocation = expectedLocation;
    const computeMatches = minMatchCharLength > 1 || includeMatches;
    const matchMask = computeMatches ? Array(textLen) : [];
    let index;
    while ((index = text.indexOf(pattern, bestLocation)) > -1) {
      let score = computeScore$1(pattern, {
        currentLocation: index,
        expectedLocation,
        distance,
        ignoreLocation
      });
      currentThreshold = Math.min(score, currentThreshold);
      bestLocation = index + patternLen;
      if (computeMatches) {
        let i = 0;
        while (i < patternLen) {
          matchMask[index + i] = 1;
          i += 1;
        }
      }
    }
    bestLocation = -1;
    let lastBitArr = [];
    let finalScore = 1;
    let binMax = patternLen + textLen;
    const mask = 1 << patternLen - 1;
    for (let i = 0; i < patternLen; i += 1) {
      let binMin = 0;
      let binMid = binMax;
      while (binMin < binMid) {
        const score2 = computeScore$1(pattern, {
          errors: i,
          currentLocation: expectedLocation + binMid,
          expectedLocation,
          distance,
          ignoreLocation
        });
        if (score2 <= currentThreshold) {
          binMin = binMid;
        } else {
          binMax = binMid;
        }
        binMid = Math.floor((binMax - binMin) / 2 + binMin);
      }
      binMax = binMid;
      let start2 = Math.max(1, expectedLocation - binMid + 1);
      let finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen;
      let bitArr = Array(finish + 2);
      bitArr[finish + 1] = (1 << i) - 1;
      for (let j = finish; j >= start2; j -= 1) {
        let currentLocation = j - 1;
        let charMatch = patternAlphabet[text.charAt(currentLocation)];
        if (computeMatches) {
          matchMask[currentLocation] = +!!charMatch;
        }
        bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch;
        if (i) {
          bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];
        }
        if (bitArr[j] & mask) {
          finalScore = computeScore$1(pattern, {
            errors: i,
            currentLocation,
            expectedLocation,
            distance,
            ignoreLocation
          });
          if (finalScore <= currentThreshold) {
            currentThreshold = finalScore;
            bestLocation = currentLocation;
            if (bestLocation <= expectedLocation) {
              break;
            }
            start2 = Math.max(1, 2 * expectedLocation - bestLocation);
          }
        }
      }
      const score = computeScore$1(pattern, {
        errors: i + 1,
        currentLocation: expectedLocation,
        expectedLocation,
        distance,
        ignoreLocation
      });
      if (score > currentThreshold) {
        break;
      }
      lastBitArr = bitArr;
    }
    const result = {
      isMatch: bestLocation >= 0,
      // Count exact matches (those with a score of 0) to be "almost" exact
      score: Math.max(1e-3, finalScore)
    };
    if (computeMatches) {
      const indices = convertMaskToIndices(matchMask, minMatchCharLength);
      if (!indices.length) {
        result.isMatch = false;
      } else if (includeMatches) {
        result.indices = indices;
      }
    }
    return result;
  }
  function createPatternAlphabet(pattern) {
    let mask = {};
    for (let i = 0, len = pattern.length; i < len; i += 1) {
      const char = pattern.charAt(i);
      mask[char] = (mask[char] || 0) | 1 << len - i - 1;
    }
    return mask;
  }
  var stripDiacritics = String.prototype.normalize ? (str) => str.normalize("NFD").replace(/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u192B\u1930-\u193B\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F]/g, "") : (str) => str;
  var BitapSearch = class {
    constructor(pattern, {
      location = Config.location,
      threshold = Config.threshold,
      distance = Config.distance,
      includeMatches = Config.includeMatches,
      findAllMatches = Config.findAllMatches,
      minMatchCharLength = Config.minMatchCharLength,
      isCaseSensitive = Config.isCaseSensitive,
      ignoreDiacritics = Config.ignoreDiacritics,
      ignoreLocation = Config.ignoreLocation
    } = {}) {
      this.options = {
        location,
        threshold,
        distance,
        includeMatches,
        findAllMatches,
        minMatchCharLength,
        isCaseSensitive,
        ignoreDiacritics,
        ignoreLocation
      };
      pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
      pattern = ignoreDiacritics ? stripDiacritics(pattern) : pattern;
      this.pattern = pattern;
      this.chunks = [];
      if (!this.pattern.length) {
        return;
      }
      const addChunk = (pattern2, startIndex) => {
        this.chunks.push({
          pattern: pattern2,
          alphabet: createPatternAlphabet(pattern2),
          startIndex
        });
      };
      const len = this.pattern.length;
      if (len > MAX_BITS) {
        let i = 0;
        const remainder = len % MAX_BITS;
        const end = len - remainder;
        while (i < end) {
          addChunk(this.pattern.substr(i, MAX_BITS), i);
          i += MAX_BITS;
        }
        if (remainder) {
          const startIndex = len - MAX_BITS;
          addChunk(this.pattern.substr(startIndex), startIndex);
        }
      } else {
        addChunk(this.pattern, 0);
      }
    }
    searchIn(text) {
      const { isCaseSensitive, ignoreDiacritics, includeMatches } = this.options;
      text = isCaseSensitive ? text : text.toLowerCase();
      text = ignoreDiacritics ? stripDiacritics(text) : text;
      if (this.pattern === text) {
        let result2 = {
          isMatch: true,
          score: 0
        };
        if (includeMatches) {
          result2.indices = [[0, text.length - 1]];
        }
        return result2;
      }
      const {
        location,
        distance,
        threshold,
        findAllMatches,
        minMatchCharLength,
        ignoreLocation
      } = this.options;
      let allIndices = [];
      let totalScore = 0;
      let hasMatches = false;
      this.chunks.forEach(({ pattern, alphabet, startIndex }) => {
        const { isMatch, score, indices } = search(text, pattern, alphabet, {
          location: location + startIndex,
          distance,
          threshold,
          findAllMatches,
          minMatchCharLength,
          includeMatches,
          ignoreLocation
        });
        if (isMatch) {
          hasMatches = true;
        }
        totalScore += score;
        if (isMatch && indices) {
          allIndices = [...allIndices, ...indices];
        }
      });
      let result = {
        isMatch: hasMatches,
        score: hasMatches ? totalScore / this.chunks.length : 1
      };
      if (hasMatches && includeMatches) {
        result.indices = allIndices;
      }
      return result;
    }
  };
  var BaseMatch = class {
    constructor(pattern) {
      this.pattern = pattern;
    }
    static isMultiMatch(pattern) {
      return getMatch(pattern, this.multiRegex);
    }
    static isSingleMatch(pattern) {
      return getMatch(pattern, this.singleRegex);
    }
    search() {
    }
  };
  function getMatch(pattern, exp) {
    const matches = pattern.match(exp);
    return matches ? matches[1] : null;
  }
  var ExactMatch = class extends BaseMatch {
    constructor(pattern) {
      super(pattern);
    }
    static get type() {
      return "exact";
    }
    static get multiRegex() {
      return /^="(.*)"$/;
    }
    static get singleRegex() {
      return /^=(.*)$/;
    }
    search(text) {
      const isMatch = text === this.pattern;
      return {
        isMatch,
        score: isMatch ? 0 : 1,
        indices: [0, this.pattern.length - 1]
      };
    }
  };
  var InverseExactMatch = class extends BaseMatch {
    constructor(pattern) {
      super(pattern);
    }
    static get type() {
      return "inverse-exact";
    }
    static get multiRegex() {
      return /^!"(.*)"$/;
    }
    static get singleRegex() {
      return /^!(.*)$/;
    }
    search(text) {
      const index = text.indexOf(this.pattern);
      const isMatch = index === -1;
      return {
        isMatch,
        score: isMatch ? 0 : 1,
        indices: [0, text.length - 1]
      };
    }
  };
  var PrefixExactMatch = class extends BaseMatch {
    constructor(pattern) {
      super(pattern);
    }
    static get type() {
      return "prefix-exact";
    }
    static get multiRegex() {
      return /^\^"(.*)"$/;
    }
    static get singleRegex() {
      return /^\^(.*)$/;
    }
    search(text) {
      const isMatch = text.startsWith(this.pattern);
      return {
        isMatch,
        score: isMatch ? 0 : 1,
        indices: [0, this.pattern.length - 1]
      };
    }
  };
  var InversePrefixExactMatch = class extends BaseMatch {
    constructor(pattern) {
      super(pattern);
    }
    static get type() {
      return "inverse-prefix-exact";
    }
    static get multiRegex() {
      return /^!\^"(.*)"$/;
    }
    static get singleRegex() {
      return /^!\^(.*)$/;
    }
    search(text) {
      const isMatch = !text.startsWith(this.pattern);
      return {
        isMatch,
        score: isMatch ? 0 : 1,
        indices: [0, text.length - 1]
      };
    }
  };
  var SuffixExactMatch = class extends BaseMatch {
    constructor(pattern) {
      super(pattern);
    }
    static get type() {
      return "suffix-exact";
    }
    static get multiRegex() {
      return /^"(.*)"\$$/;
    }
    static get singleRegex() {
      return /^(.*)\$$/;
    }
    search(text) {
      const isMatch = text.endsWith(this.pattern);
      return {
        isMatch,
        score: isMatch ? 0 : 1,
        indices: [text.length - this.pattern.length, text.length - 1]
      };
    }
  };
  var InverseSuffixExactMatch = class extends BaseMatch {
    constructor(pattern) {
      super(pattern);
    }
    static get type() {
      return "inverse-suffix-exact";
    }
    static get multiRegex() {
      return /^!"(.*)"\$$/;
    }
    static get singleRegex() {
      return /^!(.*)\$$/;
    }
    search(text) {
      const isMatch = !text.endsWith(this.pattern);
      return {
        isMatch,
        score: isMatch ? 0 : 1,
        indices: [0, text.length - 1]
      };
    }
  };
  var FuzzyMatch = class extends BaseMatch {
    constructor(pattern, {
      location = Config.location,
      threshold = Config.threshold,
      distance = Config.distance,
      includeMatches = Config.includeMatches,
      findAllMatches = Config.findAllMatches,
      minMatchCharLength = Config.minMatchCharLength,
      isCaseSensitive = Config.isCaseSensitive,
      ignoreDiacritics = Config.ignoreDiacritics,
      ignoreLocation = Config.ignoreLocation
    } = {}) {
      super(pattern);
      this._bitapSearch = new BitapSearch(pattern, {
        location,
        threshold,
        distance,
        includeMatches,
        findAllMatches,
        minMatchCharLength,
        isCaseSensitive,
        ignoreDiacritics,
        ignoreLocation
      });
    }
    static get type() {
      return "fuzzy";
    }
    static get multiRegex() {
      return /^"(.*)"$/;
    }
    static get singleRegex() {
      return /^(.*)$/;
    }
    search(text) {
      return this._bitapSearch.searchIn(text);
    }
  };
  var IncludeMatch = class extends BaseMatch {
    constructor(pattern) {
      super(pattern);
    }
    static get type() {
      return "include";
    }
    static get multiRegex() {
      return /^'"(.*)"$/;
    }
    static get singleRegex() {
      return /^'(.*)$/;
    }
    search(text) {
      let location = 0;
      let index;
      const indices = [];
      const patternLen = this.pattern.length;
      while ((index = text.indexOf(this.pattern, location)) > -1) {
        location = index + patternLen;
        indices.push([index, location - 1]);
      }
      const isMatch = !!indices.length;
      return {
        isMatch,
        score: isMatch ? 0 : 1,
        indices
      };
    }
  };
  var searchers = [
    ExactMatch,
    IncludeMatch,
    PrefixExactMatch,
    InversePrefixExactMatch,
    InverseSuffixExactMatch,
    SuffixExactMatch,
    InverseExactMatch,
    FuzzyMatch
  ];
  var searchersLen = searchers.length;
  var SPACE_RE = / +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;
  var OR_TOKEN = "|";
  function parseQuery(pattern, options = {}) {
    return pattern.split(OR_TOKEN).map((item) => {
      let query = item.trim().split(SPACE_RE).filter((item2) => item2 && !!item2.trim());
      let results = [];
      for (let i = 0, len = query.length; i < len; i += 1) {
        const queryItem = query[i];
        let found = false;
        let idx = -1;
        while (!found && ++idx < searchersLen) {
          const searcher = searchers[idx];
          let token = searcher.isMultiMatch(queryItem);
          if (token) {
            results.push(new searcher(token, options));
            found = true;
          }
        }
        if (found) {
          continue;
        }
        idx = -1;
        while (++idx < searchersLen) {
          const searcher = searchers[idx];
          let token = searcher.isSingleMatch(queryItem);
          if (token) {
            results.push(new searcher(token, options));
            break;
          }
        }
      }
      return results;
    });
  }
  var MultiMatchSet = /* @__PURE__ */ new Set([FuzzyMatch.type, IncludeMatch.type]);
  var ExtendedSearch = class {
    constructor(pattern, {
      isCaseSensitive = Config.isCaseSensitive,
      ignoreDiacritics = Config.ignoreDiacritics,
      includeMatches = Config.includeMatches,
      minMatchCharLength = Config.minMatchCharLength,
      ignoreLocation = Config.ignoreLocation,
      findAllMatches = Config.findAllMatches,
      location = Config.location,
      threshold = Config.threshold,
      distance = Config.distance
    } = {}) {
      this.query = null;
      this.options = {
        isCaseSensitive,
        ignoreDiacritics,
        includeMatches,
        minMatchCharLength,
        findAllMatches,
        ignoreLocation,
        location,
        threshold,
        distance
      };
      pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
      pattern = ignoreDiacritics ? stripDiacritics(pattern) : pattern;
      this.pattern = pattern;
      this.query = parseQuery(this.pattern, this.options);
    }
    static condition(_, options) {
      return options.useExtendedSearch;
    }
    searchIn(text) {
      const query = this.query;
      if (!query) {
        return {
          isMatch: false,
          score: 1
        };
      }
      const { includeMatches, isCaseSensitive, ignoreDiacritics } = this.options;
      text = isCaseSensitive ? text : text.toLowerCase();
      text = ignoreDiacritics ? stripDiacritics(text) : text;
      let numMatches = 0;
      let allIndices = [];
      let totalScore = 0;
      for (let i = 0, qLen = query.length; i < qLen; i += 1) {
        const searchers2 = query[i];
        allIndices.length = 0;
        numMatches = 0;
        for (let j = 0, pLen = searchers2.length; j < pLen; j += 1) {
          const searcher = searchers2[j];
          const { isMatch, indices, score } = searcher.search(text);
          if (isMatch) {
            numMatches += 1;
            totalScore += score;
            if (includeMatches) {
              const type2 = searcher.constructor.type;
              if (MultiMatchSet.has(type2)) {
                allIndices = [...allIndices, ...indices];
              } else {
                allIndices.push(indices);
              }
            }
          } else {
            totalScore = 0;
            numMatches = 0;
            allIndices.length = 0;
            break;
          }
        }
        if (numMatches) {
          let result = {
            isMatch: true,
            score: totalScore / numMatches
          };
          if (includeMatches) {
            result.indices = allIndices;
          }
          return result;
        }
      }
      return {
        isMatch: false,
        score: 1
      };
    }
  };
  var registeredSearchers = [];
  function register(...args) {
    registeredSearchers.push(...args);
  }
  function createSearcher(pattern, options) {
    for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {
      let searcherClass = registeredSearchers[i];
      if (searcherClass.condition(pattern, options)) {
        return new searcherClass(pattern, options);
      }
    }
    return new BitapSearch(pattern, options);
  }
  var LogicalOperator = {
    AND: "$and",
    OR: "$or"
  };
  var KeyType = {
    PATH: "$path",
    PATTERN: "$val"
  };
  var isExpression = (query) => !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);
  var isPath = (query) => !!query[KeyType.PATH];
  var isLeaf = (query) => !isArray(query) && isObject(query) && !isExpression(query);
  var convertToExplicit = (query) => ({
    [LogicalOperator.AND]: Object.keys(query).map((key) => ({
      [key]: query[key]
    }))
  });
  function parse(query, options, { auto = true } = {}) {
    const next = (query2) => {
      let keys = Object.keys(query2);
      const isQueryPath = isPath(query2);
      if (!isQueryPath && keys.length > 1 && !isExpression(query2)) {
        return next(convertToExplicit(query2));
      }
      if (isLeaf(query2)) {
        const key = isQueryPath ? query2[KeyType.PATH] : keys[0];
        const pattern = isQueryPath ? query2[KeyType.PATTERN] : query2[key];
        if (!isString(pattern)) {
          throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key));
        }
        const obj = {
          keyId: createKeyId(key),
          pattern
        };
        if (auto) {
          obj.searcher = createSearcher(pattern, options);
        }
        return obj;
      }
      let node = {
        children: [],
        operator: keys[0]
      };
      keys.forEach((key) => {
        const value = query2[key];
        if (isArray(value)) {
          value.forEach((item) => {
            node.children.push(next(item));
          });
        }
      });
      return node;
    };
    if (!isExpression(query)) {
      query = convertToExplicit(query);
    }
    return next(query);
  }
  function computeScore(results, { ignoreFieldNorm = Config.ignoreFieldNorm }) {
    results.forEach((result) => {
      let totalScore = 1;
      result.matches.forEach(({ key, norm: norm2, score }) => {
        const weight = key ? key.weight : null;
        totalScore *= Math.pow(
          score === 0 && weight ? Number.EPSILON : score,
          (weight || 1) * (ignoreFieldNorm ? 1 : norm2)
        );
      });
      result.score = totalScore;
    });
  }
  function transformMatches(result, data) {
    const matches = result.matches;
    data.matches = [];
    if (!isDefined(matches)) {
      return;
    }
    matches.forEach((match) => {
      if (!isDefined(match.indices) || !match.indices.length) {
        return;
      }
      const { indices, value } = match;
      let obj = {
        indices,
        value
      };
      if (match.key) {
        obj.key = match.key.src;
      }
      if (match.idx > -1) {
        obj.refIndex = match.idx;
      }
      data.matches.push(obj);
    });
  }
  function transformScore(result, data) {
    data.score = result.score;
  }
  function format(results, docs, {
    includeMatches = Config.includeMatches,
    includeScore = Config.includeScore
  } = {}) {
    const transformers = [];
    if (includeMatches) transformers.push(transformMatches);
    if (includeScore) transformers.push(transformScore);
    return results.map((result) => {
      const { idx } = result;
      const data = {
        item: docs[idx],
        refIndex: idx
      };
      if (transformers.length) {
        transformers.forEach((transformer) => {
          transformer(result, data);
        });
      }
      return data;
    });
  }
  var Fuse = class {
    constructor(docs, options = {}, index) {
      this.options = { ...Config, ...options };
      if (this.options.useExtendedSearch && false) {
        throw new Error(EXTENDED_SEARCH_UNAVAILABLE);
      }
      this._keyStore = new KeyStore(this.options.keys);
      this.setCollection(docs, index);
    }
    setCollection(docs, index) {
      this._docs = docs;
      if (index && !(index instanceof FuseIndex)) {
        throw new Error(INCORRECT_INDEX_TYPE);
      }
      this._myIndex = index || createIndex(this.options.keys, this._docs, {
        getFn: this.options.getFn,
        fieldNormWeight: this.options.fieldNormWeight
      });
    }
    add(doc) {
      if (!isDefined(doc)) {
        return;
      }
      this._docs.push(doc);
      this._myIndex.add(doc);
    }
    remove(predicate = () => false) {
      const results = [];
      for (let i = 0, len = this._docs.length; i < len; i += 1) {
        const doc = this._docs[i];
        if (predicate(doc, i)) {
          this.removeAt(i);
          i -= 1;
          len -= 1;
          results.push(doc);
        }
      }
      return results;
    }
    removeAt(idx) {
      this._docs.splice(idx, 1);
      this._myIndex.removeAt(idx);
    }
    getIndex() {
      return this._myIndex;
    }
    search(query, { limit = -1 } = {}) {
      const {
        includeMatches,
        includeScore,
        shouldSort,
        sortFn,
        ignoreFieldNorm
      } = this.options;
      let results = isString(query) ? isString(this._docs[0]) ? this._searchStringList(query) : this._searchObjectList(query) : this._searchLogical(query);
      computeScore(results, { ignoreFieldNorm });
      if (shouldSort) {
        results.sort(sortFn);
      }
      if (isNumber(limit) && limit > -1) {
        results = results.slice(0, limit);
      }
      return format(results, this._docs, {
        includeMatches,
        includeScore
      });
    }
    _searchStringList(query) {
      const searcher = createSearcher(query, this.options);
      const { records } = this._myIndex;
      const results = [];
      records.forEach(({ v: text, i: idx, n: norm2 }) => {
        if (!isDefined(text)) {
          return;
        }
        const { isMatch, score, indices } = searcher.searchIn(text);
        if (isMatch) {
          results.push({
            item: text,
            idx,
            matches: [{ score, value: text, norm: norm2, indices }]
          });
        }
      });
      return results;
    }
    _searchLogical(query) {
      const expression = parse(query, this.options);
      const evaluate = (node, item, idx) => {
        if (!node.children) {
          const { keyId, searcher } = node;
          const matches = this._findMatches({
            key: this._keyStore.get(keyId),
            value: this._myIndex.getValueForItemAtKeyId(item, keyId),
            searcher
          });
          if (matches && matches.length) {
            return [
              {
                idx,
                item,
                matches
              }
            ];
          }
          return [];
        }
        const res = [];
        for (let i = 0, len = node.children.length; i < len; i += 1) {
          const child = node.children[i];
          const result = evaluate(child, item, idx);
          if (result.length) {
            res.push(...result);
          } else if (node.operator === LogicalOperator.AND) {
            return [];
          }
        }
        return res;
      };
      const records = this._myIndex.records;
      const resultMap = {};
      const results = [];
      records.forEach(({ $: item, i: idx }) => {
        if (isDefined(item)) {
          let expResults = evaluate(expression, item, idx);
          if (expResults.length) {
            if (!resultMap[idx]) {
              resultMap[idx] = { idx, item, matches: [] };
              results.push(resultMap[idx]);
            }
            expResults.forEach(({ matches }) => {
              resultMap[idx].matches.push(...matches);
            });
          }
        }
      });
      return results;
    }
    _searchObjectList(query) {
      const searcher = createSearcher(query, this.options);
      const { keys, records } = this._myIndex;
      const results = [];
      records.forEach(({ $: item, i: idx }) => {
        if (!isDefined(item)) {
          return;
        }
        let matches = [];
        keys.forEach((key, keyIndex) => {
          matches.push(
            ...this._findMatches({
              key,
              value: item[keyIndex],
              searcher
            })
          );
        });
        if (matches.length) {
          results.push({
            idx,
            item,
            matches
          });
        }
      });
      return results;
    }
    _findMatches({ key, value, searcher }) {
      if (!isDefined(value)) {
        return [];
      }
      let matches = [];
      if (isArray(value)) {
        value.forEach(({ v: text, i: idx, n: norm2 }) => {
          if (!isDefined(text)) {
            return;
          }
          const { isMatch, score, indices } = searcher.searchIn(text);
          if (isMatch) {
            matches.push({
              score,
              key,
              value: text,
              idx,
              norm: norm2,
              indices
            });
          }
        });
      } else {
        const { v: text, n: norm2 } = value;
        const { isMatch, score, indices } = searcher.searchIn(text);
        if (isMatch) {
          matches.push({ score, key, value: text, norm: norm2, indices });
        }
      }
      return matches;
    }
  };
  Fuse.version = "7.1.0";
  Fuse.createIndex = createIndex;
  Fuse.parseIndex = parseIndex;
  Fuse.config = Config;
  {
    Fuse.parseQuery = parse;
  }
  {
    register(ExtendedSearch);
  }

  // src/view/display/icon.ts
  function createIcon(id3) {
    const img = document.createElement("img");
    img.src = `assets/${imageName(id3)}.png`;
    img.className = "result-image";
    img.alt = id3;
    return img;
  }

  // src/view/breakResult/breakSidebar.ts
  var breakSidebar = class {
    constructor(id3) {
      this.id = id3;
      this.input.addEventListener("input", () => {
        const query = this.input.value.trim();
        if (query === "") {
          this.resultsList.innerHTML = "";
          return;
        }
        const fuseResults = this.fuse.search(query).map((res) => res);
        this.renderResults(fuseResults);
      });
      this.addButton.addEventListener("click", () => {
        const newItem = this.searchInput.value.trim();
        if (newItem && !this.cookiemap.has(this.id, newItem)) {
          this.cookiemap.add(this.id, newItem);
          this.renderList();
          addLink(this.id, newItem);
          drawGraph(this.id);
          this.searchInput.value = "";
        }
      });
    }
    input = document.getElementById("search-input");
    resultsList = document.getElementById("results");
    itemList = document.getElementById("item-list");
    addButton = document.getElementById("add-button");
    searchInput = document.getElementById("search-input");
    cookiemap = new CookieMap("break");
    fuse = new Fuse([...ids, ...Object.keys(entityLoot), ...Object.keys(chestLoot), "nothing"], {
      threshold: 0.3
    });
    setId(id3) {
      this.id = id3;
      this.renderList();
    }
    renderResults(results) {
      this.resultsList.innerHTML = "";
      results.slice(0, 5).forEach(
        (item) => {
          const li = document.createElement("li");
          li.classList.add("result-item");
          const img = createIcon(item.item);
          if (isBlock(item.item) || isItem(item.item)) {
            img.onclick = () => {
              setId(item.item);
            };
            li.appendChild(img);
          }
          const span = document.createElement("span");
          span.className = "result-text";
          span.textContent = item.item;
          li.appendChild(span);
          li.addEventListener("click", (e) => {
            if (e.target === img) return;
            this.input.value = item.item;
            this.resultsList.innerHTML = "";
          });
          this.resultsList.appendChild(li);
        }
      );
    }
    renderList() {
      this.itemList.innerHTML = "";
      this.cookiemap.get(this.id).forEach((element) => {
        const itemDiv = document.createElement("div");
        if (isBlock(element) || isItem(element)) {
          itemDiv.className = "list-item";
          const img = createIcon(element);
          img.onclick = () => {
            setId(element);
          };
          itemDiv.appendChild(img);
          const a = document.createElement("a");
          a.textContent = idToText(element);
          itemDiv.appendChild(a);
          const removeBtn = document.createElement("button");
          removeBtn.className = "remove-btn";
          removeBtn.innerHTML = "&times;";
          removeBtn.onclick = () => {
            this.cookiemap.remove(this.id, element);
            this.renderList();
            removeLink(this.id, element);
            drawGraph(this.id);
          };
          itemDiv.appendChild(removeBtn);
        } else {
          const megaDiv = document.createElement("div");
          megaDiv.className = "mega-item";
          const header2 = document.createElement("div");
          header2.className = "mega-header";
          const title = document.createElement("span");
          title.className = "mega-title";
          title.textContent = idToText(element);
          const removeBtn = document.createElement("button");
          removeBtn.className = "remove-btn";
          removeBtn.innerHTML = "&times;";
          removeBtn.onclick = () => {
            this.cookiemap.remove(this.id, element);
            this.renderList();
            removeLink(this.id, element);
            drawGraph(this.id);
          };
          header2.appendChild(title);
          header2.appendChild(removeBtn);
          megaDiv.appendChild(header2);
          const ul = document.createElement("ul");
          ul.className = "mega-children";
          let lootTable = [];
          if (isEntity(element)) lootTable = entityItemLoot.get(element) ?? [];
          if (isChest(element)) lootTable = chestItemLoot.get(element) ?? [];
          lootTable.forEach((childText) => {
            const li = document.createElement("li");
            const img = createIcon(childText);
            img.onclick = () => {
              setId(childText);
            };
            li.appendChild(img);
            const span = document.createElement("span");
            span.textContent = idToText(childText);
            li.appendChild(span);
            ul.appendChild(li);
          });
          megaDiv.appendChild(ul);
          itemDiv.appendChild(megaDiv);
        }
        this.itemList.appendChild(itemDiv);
      });
    }
  };

  // src/view/main.ts
  function getUrlId() {
    let id3 = "stone";
    const searchParams = new URLSearchParams(window.location.search);
    if (searchParams.has("id")) {
      id3 = searchParams.get("id");
    } else {
      searchParams.set("id", id3);
      window.location.href = window.location.pathname + "?" + searchParams.toString();
    }
    return id3;
  }
  function getDepth() {
    const searchParams = new URLSearchParams(window.location.search);
    if (searchParams.has("depth")) {
      let depth = searchParams.get("depth");
      if (depth === null) return 5;
      return Number(depth);
    }
    return 5;
  }
  var id2 = getUrlId();
  var tree = new doubleTree(id2);
  var sideBar = new breakSidebar(id2);
  var header = document.getElementById("item-header");
  var icon = document.getElementById("item-icon");
  icon.className = "result-image";
  function updateId(id3) {
    sideBar.setId(id3);
    document.title = idToText(id3);
    const img = createIcon(id3);
    icon.src = `assets/${imageName(id3)}.png`;
    header.appendChild(img);
    header.textContent = idToText(id3);
  }
  Object.keys(entityLoot).forEach((key) => {
    if (itemNames.includes(key)) {
      console.log(key);
    }
  });
  function setId(id3) {
    const searchParams = new URLSearchParams(window.location.search);
    searchParams.set("id", id3);
    history.pushState({ id: id3 }, "", `?${searchParams.toString()}`);
    updateId(id3);
    tree.drawGraph(id3);
  }
  updateId(id2);
  function drawGraph(id3) {
    tree.drawGraph(id3);
  }
  window.addEventListener("popstate", (event) => {
    const id3 = getUrlId();
    tree.drawGraph(id3);
    updateId(id3);
  });
})();
